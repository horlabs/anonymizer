1E60 1460488_1483485_1E60.c [["printf", 1, "DeclRefExpr"], ["'a'", 2, "CharacterLiteral"], ["' '", 1, "CharacterLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["i", 6, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["n", 5, "Var__DeclRefExpr"], ["N", 3, "Var__DeclRefExpr"], ["16", 2, "IntegerLiteral"], ["4", 2, "IntegerLiteral"], ["str", 9, "Var__DeclRefExpr"], ["int n;", 1, "DeclStmt"], ["24", 2, "IntegerLiteral"], ["12", 2, "IntegerLiteral"], ["18", 2, "IntegerLiteral"], ["7", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["int [26]", 1, "Type"], ["int N;", 1, "DeclStmt"], ["conv_table", 2, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["13", 2, "IntegerLiteral"], ["9", 2, "IntegerLiteral"], ["main", 1, "Function"], ["19", 2, "IntegerLiteral"], ["int", 5, "Type"], ["26", 1, "IntegerLiteral"], ["8", 2, "IntegerLiteral"], ["char str[100 * 5];", 1, "DeclStmt"], ["char", 1, "Type"], ["int (void)", 1, "Type"], ["1", 3, "IntegerLiteral"], ["22", 2, "IntegerLiteral"], ["14", 2, "IntegerLiteral"], ["21", 2, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"%[a-z ]\\n\"", 1, "StringLiteral"], ["11", 2, "IntegerLiteral"], ["23", 2, "IntegerLiteral"], ["char [500]", 1, "Type"], ["3", 2, "IntegerLiteral"], ["20", 2, "IntegerLiteral"], ["6", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["5", 3, "IntegerLiteral"], ["17", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["25", 2, "IntegerLiteral"], ["15", 2, "IntegerLiteral"], ["0", 5, "IntegerLiteral"]] 
1E60 1460488_1483488_1E60.c [["2", 1, "IntegerLiteral"], ["i2", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["ret", 3, "Var__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["char i_str_org[100]_ i_str[100];", 1, "DeclStmt"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["i_str", 9, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 2, "Type"], ["A", 4, "Var__DeclRefExpr"], ["int A_ B;", 1, "DeclStmt"], ["1", 5, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int T_ t;", 1, "DeclStmt"], ["continue", 1, "ContinueStmt"], ["atoi", 1, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int", 9, "Type"], ["i_str_org", 5, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["strlen", 1, "DeclRefExpr"], ["sprintf", 1, "DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["i_str_len", 4, "Var__DeclRefExpr"], ["int i_str_len;", 1, "DeclStmt"], ["strcmp", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["c0", 2, "Var__DeclRefExpr"], ["memmove", 1, "DeclRefExpr"], ["main", 1, "Function"], ["sizeof(char)", 1, "UnaryExprOrTypeTraitExpr"], ["int (void)", 1, "Type"], ["char", 4, "Type"], ["strcpy", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["int i;", 1, "DeclStmt"], ["'0'", 1, "CharacterLiteral"]] 
1E60 1460488_1595491_1E60.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d \"", 1, "StringLiteral"], ["memset", 1, "DeclRefExpr"], ["int *", 1, "Type"], ["2", 3, "IntegerLiteral"], ["search", 4, "Function__DeclRefExpr"], ["p", 8, "ParmVar__DeclRefExpr"], ["void", 1, "Type"], ["int inc;", 2, "DeclStmt"], ["1", 11, "IntegerLiteral"], ["int (void)", 1, "Type"], ["inc", 6, "Var__DeclRefExpr"], ["int", 20, "Type"], ["calc_best", 3, "Function__DeclRefExpr"], ["above_num", 5, "Var__DeclRefExpr"], ["rest", 5, "ParmVar__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["total", 12, "ParmVar__DeclRefExpr"], ["3", 6, "IntegerLiteral"], ["S", 8, "ParmVar__DeclRefExpr"], ["int T_ t;", 1, "DeclStmt"], ["curr_count", 5, "ParmVar__DeclRefExpr"], ["return", 1, "ReturnStmt"], ["N", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["t", 5, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["int N_ S_ p;", 1, "DeclStmt"], ["void (int *_ int_ int_ int_ int)", 1, "Type"], ["int n;", 1, "DeclStmt"], ["\"%d %d %d \"", 1, "StringLiteral"], ["s", 2, "ParmVar__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["int [100]", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["sc", 9, "ParmVar__DeclRefExpr"], ["int sc[100];", 1, "DeclStmt"]] 
1E60 2270488_2449486_1E60.c [["printf", 1, "DeclRefExpr"], ["possible", 3, "Var__DeclRefExpr"], ["setting", 10, "Var__DeclRefExpr"], ["\"%d \"", 1, "StringLiteral"], ["0", 14, "IntegerLiteral"], ["int [M][N]", 2, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["y", 28, "Var__DeclRefExpr"], ["char **", 1, "Type"], ["\"YES\"", 1, "StringLiteral"], ["Goal", 7, "Var__DeclRefExpr"], ["argv", 1, "ParmVar"], ["N", 9, "Var__DeclRefExpr"], ["Board", 7, "Var__DeclRefExpr"], ["int", 13, "Type"], ["main", 1, "Function"], ["100", 1, "IntegerLiteral"], ["int [N]", 2, "Type"], ["t", 5, "Var__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["M", 9, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["x", 28, "Var__DeclRefExpr"], ["argc", 1, "ParmVar"], ["char", 1, "Type"], ["char *", 1, "Type"], ["int t_ T;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["int M_ N;", 1, "DeclStmt"], ["int x_ y;", 1, "DeclStmt"]] 
1E60 2270488_2453486_1E60.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["sprintf", 4, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["O_won", 2, "Var__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["y", 21, "Var__DeclRefExpr"], ["4", 18, "IntegerLiteral"], ["int (int_ char **)", 1, "Type"], ["'T'", 4, "CharacterLiteral"], ["x", 37, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["check_win", 3, "Function__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["retstr", 6, "Var__DeclRefExpr"], ["int (char (*)[4]_ char)", 1, "Type"], ["char [4]", 2, "Type"], ["char retstr[100];", 1, "DeclStmt"], ["char **", 1, "Type"], ["break", 4, "BreakStmt"], ["char", 5, "Type"], ["argc", 1, "ParmVar"], ["char *", 1, "Type"], ["int", 12, "Type"], ["Board", 14, "ParmVar__DeclRefExpr"], ["c", 5, "ParmVar__DeclRefExpr"], ["char [4][4]", 2, "Type"], ["3", 2, "IntegerLiteral"], ["X_won", 2, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["argv", 1, "ParmVar"], ["int t_ T;", 1, "DeclStmt"], ["t", 5, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["char Board[4][4];", 1, "DeclStmt"], ["int x_ y;", 2, "DeclStmt"], ["'.'", 1, "CharacterLiteral"], ["1", 6, "IntegerLiteral"], ["\"%c \"", 1, "StringLiteral"], ["has_empty", 3, "Var__DeclRefExpr"], ["char [100]", 1, "Type"]] 
1E60 2270488_2463486_1E60.c [["\"%lld %lld\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["B_", 3, "Var__DeclRefExpr"], ["double", 4, "Type"], ["100", 1, "IntegerLiteral"], ["t", 5, "Var__DeclRefExpr"], ["ret", 3, "Var__DeclRefExpr"], ["int i_ len;", 1, "DeclStmt"], ["long long", 7, "Type"], ["B", 4, "Var__DeclRefExpr"], ["i", 6, "Var__DeclRefExpr"], ["str", 5, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 1, "Type"], ["int (long long)", 1, "Type"], ["len", 4, "Var__DeclRefExpr"], ["char", 2, "Type"], ["argc", 1, "ParmVar"], ["As", 5, "Var__DeclRefExpr"], ["\"%lld\"", 1, "StringLiteral"], ["char *", 1, "Type"], ["Bs", 3, "Var__DeclRefExpr"], ["char str[100];", 1, "DeclStmt"], ["1", 7, "IntegerLiteral"], ["is_pr", 3, "Function__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 9, "Type"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["ok", 3, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["n2", 5, "Var__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["double A__ B_;", 1, "DeclStmt"], ["main", 1, "Function"], ["n", 9, "ParmVar__DeclRefExpr"], ["argv", 1, "ParmVar"], ["char **", 1, "Type"], ["int t_ T;", 1, "DeclStmt"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["A", 4, "Var__DeclRefExpr"], ["long long A_ B_ As_ Bs_ n_ n2;", 1, "DeclStmt"], ["A_", 3, "Var__DeclRefExpr"]] 
1E60 2974486_5709773144064000_1E60.c [["0", 1, "IntegerLiteral"], ["\"Case #%d: %.8lf\\n\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["t1b", 3, "Var__DeclRefExpr"], ["double t0;", 1, "DeclStmt"], ["2.0", 1, "FloatingLiteral"], ["rate", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["total_time", 4, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["double", 8, "Type"], ["char **", 1, "Type"], ["double t1a_ t1b;", 1, "DeclStmt"], ["0.0", 1, "FloatingLiteral"], ["argv", 1, "ParmVar"], ["t0", 4, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["int", 4, "Type"], ["main", 1, "Function"], ["t", 5, "Var__DeclRefExpr"], ["t1a", 4, "Var__DeclRefExpr"], ["X", 4, "Var__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["argc", 1, "ParmVar"], ["char", 1, "Type"], ["char *", 1, "Type"], ["int t_ T;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["double C_ F_ X;", 1, "DeclStmt"], ["C", 3, "Var__DeclRefExpr"]] 
1E60 2974486_5756407898963968_1E60.c [["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["0", 12, "IntegerLiteral"], ["printf", 3, "DeclRefExpr"], ["c2", 6, "Var__DeclRefExpr"], ["int c1_ c2;", 1, "DeclStmt"], ["b2", 4, "Var__DeclRefExpr"], ["b1", 3, "Var__DeclRefExpr"], ["int b1[4][4]_ b2[4][4];", 1, "DeclStmt"], ["col", 9, "Var__DeclRefExpr"], ["int row_ col;", 1, "DeclStmt"], ["\"%d \"", 2, "StringLiteral"], ["c1", 5, "Var__DeclRefExpr"], ["q2", 4, "Var__DeclRefExpr"], ["argv", 1, "ParmVar"], ["int [4][4]", 2, "Type"], ["1", 5, "IntegerLiteral"], ["int", 13, "Type"], ["main", 1, "Function"], ["t", 7, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 10, "IntegerLiteral"], ["int (int_ char **)", 1, "Type"], ["argc", 1, "ParmVar"], ["char", 1, "Type"], ["char *", 1, "Type"], ["int [4]", 2, "Type"], ["int t_ T;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["\"%d\\n\"", 3, "StringLiteral"], ["char **", 1, "Type"], ["int q1_ q2;", 1, "DeclStmt"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["ans", 8, "Var__DeclRefExpr"], ["row", 9, "Var__DeclRefExpr"], ["q1", 3, "Var__DeclRefExpr"]] 
1E60_advex 1460488_1483485_1E60_advex.c [["printf", 1, "DeclRefExpr"], ["'a'", 2, "CharacterLiteral"], ["' '", 1, "CharacterLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["i", 6, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["n", 5, "Var__DeclRefExpr"], ["N", 3, "Var__DeclRefExpr"], ["16", 2, "IntegerLiteral"], ["4", 2, "IntegerLiteral"], ["str", 9, "Var__DeclRefExpr"], ["int n;", 1, "DeclStmt"], ["24", 2, "IntegerLiteral"], ["12", 2, "IntegerLiteral"], ["18", 2, "IntegerLiteral"], ["7", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["int [26]", 1, "Type"], ["int N;", 1, "DeclStmt"], ["conv_table", 2, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["13", 2, "IntegerLiteral"], ["9", 2, "IntegerLiteral"], ["main", 1, "Function"], ["19", 2, "IntegerLiteral"], ["int", 5, "Type"], ["26", 1, "IntegerLiteral"], ["8", 2, "IntegerLiteral"], ["char str[100 * 5];", 1, "DeclStmt"], ["char", 1, "Type"], ["int (void)", 1, "Type"], ["1", 3, "IntegerLiteral"], ["22", 2, "IntegerLiteral"], ["14", 2, "IntegerLiteral"], ["21", 2, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"%[a-z ]\\n\"", 1, "StringLiteral"], ["11", 2, "IntegerLiteral"], ["23", 2, "IntegerLiteral"], ["char [500]", 1, "Type"], ["3", 2, "IntegerLiteral"], ["20", 2, "IntegerLiteral"], ["6", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["5", 3, "IntegerLiteral"], ["17", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["25", 2, "IntegerLiteral"], ["15", 2, "IntegerLiteral"], ["0", 5, "IntegerLiteral"]] 
1E60_advex 1460488_1483488_1E60_advex.c [["2", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["i2", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["ret", 3, "Var__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["char i_str_org[100]_ i_str[100];", 1, "DeclStmt"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["i_str", 9, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 2, "Type"], ["A", 4, "Var__DeclRefExpr"], ["int A_ B;", 1, "DeclStmt"], ["1", 5, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["int dtgi_Var_ t;", 1, "DeclStmt"], ["continue", 1, "ContinueStmt"], ["atoi", 1, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int", 9, "Type"], ["i_str_org", 5, "Var__DeclRefExpr"], ["dtgi_Var", 3, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["strlen", 1, "DeclRefExpr"], ["sprintf", 1, "DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["i_str_len", 4, "Var__DeclRefExpr"], ["int i_str_len;", 1, "DeclStmt"], ["strcmp", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["c0", 2, "Var__DeclRefExpr"], ["memmove", 1, "DeclRefExpr"], ["main", 1, "Function"], ["sizeof(char)", 1, "UnaryExprOrTypeTraitExpr"], ["int (void)", 1, "Type"], ["char", 4, "Type"], ["strcpy", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["int i;", 1, "DeclStmt"], ["'0'", 1, "CharacterLiteral"]] 
1E60_advex 1460488_1595491_1E60_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d \"", 1, "StringLiteral"], ["memset", 1, "DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["int *", 1, "Type"], ["2", 3, "IntegerLiteral"], ["search", 4, "Function__DeclRefExpr"], ["p", 8, "ParmVar__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["void", 1, "Type"], ["int inc;", 2, "DeclStmt"], ["int sc[100];", 1, "DeclStmt"], ["sc", 9, "ParmVar__DeclRefExpr"], ["1", 11, "IntegerLiteral"], ["int (void)", 1, "Type"], ["int duai_Var_ t;", 1, "DeclStmt"], ["inc", 6, "Var__DeclRefExpr"], ["int", 20, "Type"], ["calc_best", 3, "Function__DeclRefExpr"], ["above_num", 5, "Var__DeclRefExpr"], ["rest", 5, "ParmVar__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["total", 12, "ParmVar__DeclRefExpr"], ["3", 6, "IntegerLiteral"], ["\"%d %d %d \"", 1, "StringLiteral"], ["int [100]", 1, "Type"], ["s", 2, "ParmVar__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["S", 8, "ParmVar__DeclRefExpr"], ["curr_count", 5, "ParmVar__DeclRefExpr"], ["return", 1, "ReturnStmt"], ["N", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["duai_Var", 3, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["t", 5, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["int N_ S_ p;", 1, "DeclStmt"], ["void (int *_ int_ int_ int_ int)", 1, "Type"], ["int n;", 1, "DeclStmt"], ["n", 5, "Var__DeclRefExpr"]] 
1E60_advex 2270488_2449486_1E60_advex.c [["\"NO\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int [M][N]", 2, "Type"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["char *", 1, "Type"], ["char", 1, "Type"], ["argc", 1, "ParmVar"], ["\"r\"", 1, "StringLiteral"], ["M", 9, "Var__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["t", 5, "Var__DeclRefExpr"], ["duai_Var", 3, "Var__DeclRefExpr"], ["int [N]", 2, "Type"], ["100", 1, "IntegerLiteral"], ["Board", 7, "Var__DeclRefExpr"], ["argv", 1, "ParmVar"], ["Goal", 7, "Var__DeclRefExpr"], ["\"YES\"", 1, "StringLiteral"], ["int t_ duai_Var;", 1, "DeclStmt"], ["char **", 1, "Type"], ["N", 9, "Var__DeclRefExpr"], ["int x_ y;", 1, "DeclStmt"], ["x", 28, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["int M_ N;", 1, "DeclStmt"], ["y", 28, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["0", 14, "IntegerLiteral"], ["\"%d \"", 1, "StringLiteral"], ["int", 13, "Type"], ["setting", 10, "Var__DeclRefExpr"], ["possible", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"]] 
1E60_advex 2270488_2453486_1E60_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["sprintf", 4, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["O_won", 2, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["char [100]", 1, "Type"], ["'X'", 1, "CharacterLiteral"], ["retstr", 6, "Var__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["y", 21, "Var__DeclRefExpr"], ["4", 18, "IntegerLiteral"], ["int (int_ char **)", 1, "Type"], ["'T'", 4, "CharacterLiteral"], ["x", 37, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["check_win", 3, "Function__DeclRefExpr"], ["int (char (*)[4]_ char)", 1, "Type"], ["char [4]", 2, "Type"], ["char retstr[100];", 1, "DeclStmt"], ["char **", 1, "Type"], ["break", 4, "BreakStmt"], ["char", 5, "Type"], ["argc", 1, "ParmVar"], ["char *", 1, "Type"], ["int", 12, "Type"], ["Board", 14, "ParmVar__DeclRefExpr"], ["c", 5, "ParmVar__DeclRefExpr"], ["int t_ sjbi_Var;", 1, "DeclStmt"], ["char [4][4]", 2, "Type"], ["3", 2, "IntegerLiteral"], ["X_won", 2, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["argv", 1, "ParmVar"], ["\"replace-me.in\"", 1, "StringLiteral"], ["has_empty", 3, "Var__DeclRefExpr"], ["sjbi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["char Board[4][4];", 1, "DeclStmt"], ["int x_ y;", 2, "DeclStmt"], ["'.'", 1, "CharacterLiteral"], ["1", 6, "IntegerLiteral"], ["\"%c \"", 1, "StringLiteral"]] 
1E60_advex 2270488_2463486_1E60_advex.c [["printf", 1, "DeclRefExpr"], ["\"%lld %lld\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["B_", 3, "Var__DeclRefExpr"], ["double", 4, "Type"], ["100", 1, "IntegerLiteral"], ["t", 5, "Var__DeclRefExpr"], ["ret", 3, "Var__DeclRefExpr"], ["int i_ len;", 1, "DeclStmt"], ["long long", 7, "Type"], ["B", 4, "Var__DeclRefExpr"], ["i", 6, "Var__DeclRefExpr"], ["str", 5, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 1, "Type"], ["int (long long)", 1, "Type"], ["len", 4, "Var__DeclRefExpr"], ["char", 2, "Type"], ["argc", 1, "ParmVar"], ["As", 5, "Var__DeclRefExpr"], ["\"%lld\"", 1, "StringLiteral"], ["char *", 1, "Type"], ["Bs", 3, "Var__DeclRefExpr"], ["char str[100];", 1, "DeclStmt"], ["1", 7, "IntegerLiteral"], ["is_pr", 3, "Function__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 9, "Type"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["ok", 3, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["n2", 5, "Var__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["double A__ B_;", 1, "DeclStmt"], ["main", 1, "Function"], ["n", 9, "ParmVar__DeclRefExpr"], ["argv", 1, "ParmVar"], ["char **", 1, "Type"], ["ciri_Var", 3, "Var__DeclRefExpr"], ["int t_ ciri_Var;", 1, "DeclStmt"], ["A", 4, "Var__DeclRefExpr"], ["long long A_ B_ As_ Bs_ n_ n2;", 1, "DeclStmt"], ["A_", 3, "Var__DeclRefExpr"]] 
1E60_advex 2974486_5709773144064000_1E60_advex.c [["\"Case #%d: %.8lf\\n\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["t1b", 3, "Var__DeclRefExpr"], ["double t0;", 1, "DeclStmt"], ["2.0", 1, "FloatingLiteral"], ["F", 4, "Var__DeclRefExpr"], ["double", 8, "Type"], ["C", 3, "Var__DeclRefExpr"], ["double C_ F_ X;", 1, "DeclStmt"], ["t0", 4, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["char **", 1, "Type"], ["double t1a_ t1b;", 1, "DeclStmt"], ["0.0", 1, "FloatingLiteral"], ["argv", 1, "ParmVar"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["total_time", 4, "Var__DeclRefExpr"], ["nvpi_Var", 3, "Var__DeclRefExpr"], ["int", 4, "Type"], ["t1a", 4, "Var__DeclRefExpr"], ["X", 4, "Var__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["argc", 1, "ParmVar"], ["char", 1, "Type"], ["char *", 1, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"replace-me.out\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["0", 1, "IntegerLiteral"], ["int cuai_Var_ nvpi_Var;", 1, "DeclStmt"], ["rate", 5, "Var__DeclRefExpr"], ["cuai_Var", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"]] 
1E60_advex 2974486_5756407898963968_1E60_advex.c [["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 3, "StringLiteral"], ["scanf", 5, "DeclRefExpr"], ["b2", 4, "Var__DeclRefExpr"], ["sjbi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["char *", 1, "Type"], ["argc", 1, "ParmVar"], ["int (int_ char **)", 1, "Type"], ["4", 10, "IntegerLiteral"], ["t", 7, "Var__DeclRefExpr"], ["int t_ sjbi_Var;", 1, "DeclStmt"], ["argv", 1, "ParmVar"], ["char **", 1, "Type"], ["int q1_ q2;", 1, "DeclStmt"], ["1", 5, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["q1", 3, "Var__DeclRefExpr"], ["row", 9, "Var__DeclRefExpr"], ["ans", 8, "Var__DeclRefExpr"], ["q2", 4, "Var__DeclRefExpr"], ["c1", 5, "Var__DeclRefExpr"], ["\"%d \"", 2, "StringLiteral"], ["char", 1, "Type"], ["int row_ col;", 1, "DeclStmt"], ["col", 9, "Var__DeclRefExpr"], ["int b1[4][4]_ b2[4][4];", 1, "DeclStmt"], ["int", 13, "Type"], ["b1", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int [4]", 2, "Type"], ["int c1_ c2;", 1, "DeclStmt"], ["c2", 6, "Var__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["0", 12, "IntegerLiteral"]] 
abhinav1203 1460488_1483485_abhinav1203.c [["\"%c\"", 1, "StringLiteral"], ["'\\t'", 1, "CharacterLiteral"], ["'\\r'", 1, "CharacterLiteral"], ["printf", 4, "DeclRefExpr"], ["getchar", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["i", 1, "Var"], ["\" \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["'q'", 2, "CharacterLiteral"], ["'a'", 4, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["26", 1, "IntegerLiteral"], ["googlerese", 2, "Var__DeclRefExpr"], ["'o'", 2, "CharacterLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["\"\\n\"", 1, "StringLiteral"], ["'u'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["malloc", 1, "DeclRefExpr"], ["120", 1, "IntegerLiteral"], ["'k'", 2, "CharacterLiteral"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["char *str;", 1, "DeclStmt"], ["str", 2, "Var__DeclRefExpr"], ["char [26]", 1, "Type"], ["main", 1, "Function"], ["sizeof(char)", 1, "UnaryExprOrTypeTraitExpr"], ["char", 5, "Type"], ["char *", 2, "Type"], ["test", 3, "Var__DeclRefExpr"], ["int", 6, "Type"], ["'e'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["'d'", 2, "CharacterLiteral"], ["'z'", 3, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["c", 9, "Var__DeclRefExpr"], ["'n'", 2, "CharacterLiteral"], ["scanf", 1, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"]] 
abhinav1203 1460488_1483488_abhinav1203.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["test", 3, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["tmp", 11, "Var__DeclRefExpr"], ["x", 6, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["i", 11, "Var__DeclRefExpr"], ["const void *", 2, "Type"], ["int", 22, "Type"], ["int (const void *_ const void *)", 1, "Type"], ["numDigits", 2, "Function__DeclRefExpr"], ["ans", 10, "Var__DeclRefExpr"], ["void", 2, "Type"], ["a", 6, "ParmVar__DeclRefExpr"], ["b", 6, "ParmVar__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["int *", 2, "Type"], ["1", 9, "IntegerLiteral"], ["int (int)", 2, "Type"], ["qsort", 1, "DeclRefExpr"], ["num", 5, "ParmVar__DeclRefExpr"], ["y", 3, "Var__DeclRefExpr"], ["compare", 2, "Function__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["0", 8, "IntegerLiteral"], ["power", 2, "Function__DeclRefExpr"]] 
abhinav1203 1460488_1595491_abhinav1203.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["t", 6, "Var__DeclRefExpr"], ["105", 1, "IntegerLiteral"], ["i", 12, "Var__DeclRefExpr"], ["int", 9, "Type"], ["s", 4, "Var__DeclRefExpr"], ["int [105]", 1, "Type"], ["n", 4, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["ans", 5, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["test", 3, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["testno", 3, "Var__DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"]] 
abhinav1203 2270488_2449486_abhinav1203.c [["\"NO\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["\"YES\\n\"", 1, "StringLiteral"], ["0", 13, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["des", 7, "Var__DeclRefExpr"], ["int", 10, "Type"], ["break", 2, "BreakStmt"], ["int [105]", 2, "Type"], ["100", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["r", 8, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["int [105][105]", 2, "Type"], ["int t_ i_ r_ c_ j_ k_ max;", 1, "DeclStmt"], ["105", 4, "IntegerLiteral"], ["j", 26, "Var__DeclRefExpr"], ["a", 7, "Var__DeclRefExpr"], ["c", 8, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 32, "Var__DeclRefExpr"], ["max", 11, "Var__DeclRefExpr"]] 
abhinav1203 2270488_2453486_abhinav1203.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["numRowO", 5, "Var__DeclRefExpr"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 3, "IntegerLiteral"], ["j", 49, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["result", 11, "Var__DeclRefExpr"], ["char [5]", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["4", 13, "IntegerLiteral"], ["int [5]", 4, "Type"], ["char [5][5]", 1, "Type"], ["\"%s\"", 1, "StringLiteral"], ["k", 11, "Var__DeclRefExpr"], ["numRowX", 5, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["5", 6, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int t_ i_ j_ k_ result_ numRowX[5]_ numRowO[5]_ numColX[5]_ numColO[5]_ numDiag1X_ numDiag1O_ numDiag2X_ numDiag2O;", 1, "DeclStmt"], ["int", 14, "Type"], ["char", 1, "Type"], ["numColX", 5, "Var__DeclRefExpr"], ["str", 15, "Var__DeclRefExpr"], ["numColO", 5, "Var__DeclRefExpr"], ["'X'", 4, "CharacterLiteral"], ["numDiag1X", 5, "Var__DeclRefExpr"], ["numDiag1O", 5, "Var__DeclRefExpr"], ["'O'", 4, "CharacterLiteral"], ["numDiag2X", 5, "Var__DeclRefExpr"], ["numDiag2O", 5, "Var__DeclRefExpr"], ["1", 6, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["printf", 5, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"]] 
abhinav1203 2270488_2463486_abhinav1203.c [["printf", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["count", 4, "Var__DeclRefExpr"], ["int t_ count;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["floor", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"Case #%lld: %d\\n\"", 1, "StringLiteral"], ["dig", 4, "Var__DeclRefExpr"], ["long long", 4, "Type"], ["int [100]", 1, "Type"], ["10000005", 1, "IntegerLiteral"], ["i", 19, "Var__DeclRefExpr"], ["int", 10, "Type"], ["1e7", 1, "FloatingLiteral"], ["palin", 3, "Function__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["int (long long)", 1, "Type"], ["long long int i_ a_ b;", 1, "DeclStmt"], ["fair", 5, "Var__DeclRefExpr"], ["num", 4, "ParmVar__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["j", 6, "Var__DeclRefExpr"], ["int [10000005]", 1, "Type"], ["1", 4, "IntegerLiteral"]] 
abhinav1203 2974486_5709773144064000_abhinav1203.c [["printf", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["2.0", 1, "FloatingLiteral"], ["1", 1, "IntegerLiteral"], ["test", 2, "Var__DeclRefExpr"], ["rate", 8, "Var__DeclRefExpr"], ["int", 3, "Type"], ["\"%d\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["X", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["time", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["double C_ F_ X_ rate_ time;", 1, "DeclStmt"], ["C", 4, "Var__DeclRefExpr"], ["\"Case #%d: %lf\\n\"", 1, "StringLiteral"], ["F", 4, "Var__DeclRefExpr"], ["double", 5, "Type"], ["\"%lf %lf %lf\"", 1, "StringLiteral"]] 
abhinav1203 2974486_5756407898963968_abhinav1203.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad Magician!\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["4", 4, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["test", 2, "Var__DeclRefExpr"], ["int [17]", 1, "Type"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 10, "Type"], ["j", 7, "Var__DeclRefExpr"], ["answer", 9, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["R1", 3, "Var__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["R2", 3, "Var__DeclRefExpr"], ["h", 5, "Var__DeclRefExpr"], ["i", 13, "Var__DeclRefExpr"], ["tmp", 7, "Var__DeclRefExpr"], ["17", 1, "IntegerLiteral"]] 
abhinav1203_advex 1460488_1483485_abhinav1203_advex.c [["\"%c\"", 1, "StringLiteral"], ["'\\t'", 1, "CharacterLiteral"], ["'\\r'", 1, "CharacterLiteral"], ["printf", 4, "DeclRefExpr"], ["getchar", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["i", 1, "Var"], ["\" \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["'q'", 2, "CharacterLiteral"], ["'a'", 4, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["26", 1, "IntegerLiteral"], ["googlerese", 2, "Var__DeclRefExpr"], ["'o'", 2, "CharacterLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["\"\\n\"", 1, "StringLiteral"], ["'u'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["malloc", 1, "DeclRefExpr"], ["120", 1, "IntegerLiteral"], ["'k'", 2, "CharacterLiteral"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["char *str;", 1, "DeclStmt"], ["str", 2, "Var__DeclRefExpr"], ["char [26]", 1, "Type"], ["main", 1, "Function"], ["sizeof(char)", 1, "UnaryExprOrTypeTraitExpr"], ["char", 5, "Type"], ["char *", 2, "Type"], ["test", 3, "Var__DeclRefExpr"], ["int", 6, "Type"], ["'e'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["'d'", 2, "CharacterLiteral"], ["'z'", 3, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["c", 9, "Var__DeclRefExpr"], ["'n'", 2, "CharacterLiteral"], ["scanf", 1, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"]] 
abhinav1203_advex 1460488_1483488_abhinav1203_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["test", 3, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["tmp", 11, "Var__DeclRefExpr"], ["x", 6, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["i", 11, "Var__DeclRefExpr"], ["const void *", 2, "Type"], ["int", 22, "Type"], ["int (const void *_ const void *)", 1, "Type"], ["numDigits", 2, "Function__DeclRefExpr"], ["ans", 10, "Var__DeclRefExpr"], ["void", 2, "Type"], ["a", 6, "ParmVar__DeclRefExpr"], ["b", 6, "ParmVar__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["int *", 2, "Type"], ["1", 9, "IntegerLiteral"], ["int (int)", 2, "Type"], ["qsort", 1, "DeclRefExpr"], ["num", 5, "ParmVar__DeclRefExpr"], ["y", 3, "Var__DeclRefExpr"], ["compare", 2, "Function__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["0", 8, "IntegerLiteral"], ["power", 2, "Function__DeclRefExpr"]] 
abhinav1203_advex 1460488_1595491_abhinav1203_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["t", 6, "Var__DeclRefExpr"], ["105", 1, "IntegerLiteral"], ["i", 12, "Var__DeclRefExpr"], ["int", 9, "Type"], ["s", 4, "Var__DeclRefExpr"], ["int [105]", 1, "Type"], ["n", 4, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["ans", 5, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["test", 3, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["testno", 3, "Var__DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"]] 
abhinav1203_advex 2270488_2449486_abhinav1203_advex.c [["\"NO\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["\"YES\\n\"", 1, "StringLiteral"], ["0", 13, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["des", 7, "Var__DeclRefExpr"], ["int", 10, "Type"], ["break", 2, "BreakStmt"], ["int [105]", 2, "Type"], ["100", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["r", 8, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["int [105][105]", 2, "Type"], ["int t_ i_ r_ c_ j_ k_ max;", 1, "DeclStmt"], ["105", 4, "IntegerLiteral"], ["j", 26, "Var__DeclRefExpr"], ["a", 7, "Var__DeclRefExpr"], ["c", 8, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 32, "Var__DeclRefExpr"], ["max", 11, "Var__DeclRefExpr"]] 
abhinav1203_advex 2270488_2453486_abhinav1203_advex.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["numRowO", 5, "Var__DeclRefExpr"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 3, "IntegerLiteral"], ["j", 49, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["result", 11, "Var__DeclRefExpr"], ["char [5]", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["4", 13, "IntegerLiteral"], ["int [5]", 4, "Type"], ["char [5][5]", 1, "Type"], ["\"%s\"", 1, "StringLiteral"], ["k", 11, "Var__DeclRefExpr"], ["numRowX", 5, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["5", 6, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int t_ i_ j_ k_ result_ numRowX[5]_ numRowO[5]_ numColX[5]_ numColO[5]_ numDiag1X_ numDiag1O_ numDiag2X_ numDiag2O;", 1, "DeclStmt"], ["int", 14, "Type"], ["char", 1, "Type"], ["numColX", 5, "Var__DeclRefExpr"], ["str", 15, "Var__DeclRefExpr"], ["numColO", 5, "Var__DeclRefExpr"], ["'X'", 4, "CharacterLiteral"], ["numDiag1X", 5, "Var__DeclRefExpr"], ["numDiag1O", 5, "Var__DeclRefExpr"], ["'O'", 4, "CharacterLiteral"], ["numDiag2X", 5, "Var__DeclRefExpr"], ["numDiag2O", 5, "Var__DeclRefExpr"], ["1", 6, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["printf", 5, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"]] 
abhinav1203_advex 2270488_2463486_abhinav1203_advex.c [["printf", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["count", 4, "Var__DeclRefExpr"], ["int t_ count;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["floor", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"Case #%lld: %d\\n\"", 1, "StringLiteral"], ["dig", 4, "Var__DeclRefExpr"], ["long long", 4, "Type"], ["int [100]", 1, "Type"], ["10000005", 1, "IntegerLiteral"], ["i", 19, "Var__DeclRefExpr"], ["int", 10, "Type"], ["1e7", 1, "FloatingLiteral"], ["palin", 3, "Function__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["int (long long)", 1, "Type"], ["long long int i_ a_ b;", 1, "DeclStmt"], ["fair", 5, "Var__DeclRefExpr"], ["num", 4, "ParmVar__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["j", 6, "Var__DeclRefExpr"], ["int [10000005]", 1, "Type"], ["1", 4, "IntegerLiteral"]] 
abhinav1203_advex 2974486_5709773144064000_abhinav1203_advex.c [["printf", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["2.0", 1, "FloatingLiteral"], ["1", 1, "IntegerLiteral"], ["test", 2, "Var__DeclRefExpr"], ["rate", 8, "Var__DeclRefExpr"], ["int", 3, "Type"], ["\"%d\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["X", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["time", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["double C_ F_ X_ rate_ time;", 1, "DeclStmt"], ["C", 4, "Var__DeclRefExpr"], ["\"Case #%d: %lf\\n\"", 1, "StringLiteral"], ["F", 4, "Var__DeclRefExpr"], ["double", 5, "Type"], ["\"%lf %lf %lf\"", 1, "StringLiteral"]] 
abhinav1203_advex 2974486_5756407898963968_abhinav1203_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad Magician!\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["4", 4, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["test", 2, "Var__DeclRefExpr"], ["int [17]", 1, "Type"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 10, "Type"], ["j", 7, "Var__DeclRefExpr"], ["answer", 9, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["R1", 3, "Var__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["R2", 3, "Var__DeclRefExpr"], ["h", 5, "Var__DeclRefExpr"], ["i", 13, "Var__DeclRefExpr"], ["tmp", 7, "Var__DeclRefExpr"], ["17", 1, "IntegerLiteral"]] 
alan790712 1460488_1483485_alan790712.c [["\"\"", 1, "StringLiteral"], ["puts", 1, "DeclRefExpr"], ["'\\0'", 1, "CharacterLiteral"], ["printf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["gets", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["'w'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["0", 3, "IntegerLiteral"], ["256", 2, "IntegerLiteral"], ["'k'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["1234567", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["'t'", 2, "CharacterLiteral"], ["char [1234567]", 1, "Type"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["i", 10, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["char [256]", 1, "Type"], ["'a'", 2, "CharacterLiteral"], ["str", 5, "Var__DeclRefExpr"], ["int", 4, "Type"], ["char", 2, "Type"], ["trans", 29, "Var__DeclRefExpr"], ["'f'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'u'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["putchar", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["'d'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["int t;", 1, "DeclStmt"], ["'v'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["scanf", 1, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"]] 
alan790712 1460488_1483488_alan790712.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], [";", 1, "NullStmt"], ["Case", 2, "Var__DeclRefExpr"], ["int ans;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["int [1234]", 1, "Type"], ["i", 20, "Var__DeclRefExpr"], ["10000000", 2, "IntegerLiteral"], ["a", 7, "Var__ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["100", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["int", 19, "Type"], ["check", 2, "Function__DeclRefExpr"], ["1000", 2, "IntegerLiteral"], ["int t;", 1, "DeclStmt"], ["100000", 2, "IntegerLiteral"], ["b", 6, "Var__ParmVar__DeclRefExpr"], ["digit", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["nNum", 10, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 5, "IntegerLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["ten", 4, "Var__DeclRefExpr"], ["int *", 2, "Type"], ["1000000", 2, "IntegerLiteral"], ["int [10]", 1, "Type"], ["1234", 1, "IntegerLiteral"], ["int i;", 2, "DeclStmt"], ["cmp", 2, "Function__DeclRefExpr"], ["int (const void *_ const void *)", 1, "Type"], ["main", 1, "Function"], ["scanf", 2, "DeclRefExpr"], ["const void *", 2, "Type"], ["int (int)", 1, "Type"], ["num", 4, "ParmVar__DeclRefExpr"], ["10000", 2, "IntegerLiteral"], ["qsort", 1, "DeclRefExpr"], ["ans", 8, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["n", 8, "Var__DeclRefExpr"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"]] 
alan790712 1460488_1595491_alan790712.c [["printf", 1, "DeclRefExpr"], ["\" %d\"", 1, "StringLiteral"], ["\"%d %d %d\"", 1, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["int ans;", 1, "DeclStmt"], ["0", 8, "IntegerLiteral"], ["score", 4, "Var__DeclRefExpr"], ["s", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["Case", 2, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["max", 9, "Var__DeclRefExpr"], ["int [31][2]", 1, "Type"], ["i", 13, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["2", 4, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["31", 2, "IntegerLiteral"], ["main", 1, "Function"], ["t", 3, "Var__DeclRefExpr"], ["j", 1, "Var"], ["int [2]", 1, "Type"], ["int t;", 1, "DeclStmt"], ["ans", 5, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"]] 
alan790712 2270488_2449486_alan790712.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], [";", 2, "NullStmt"], ["puts", 2, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["max", 4, "Var__DeclRefExpr"], ["int max;", 1, "DeclStmt"], ["int [123]", 1, "Type"], ["map", 10, "Var__DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["int [123][123]", 1, "Type"], ["m", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["n", 6, "Var__DeclRefExpr"], ["int", 11, "Type"], ["gg", 6, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["p", 11, "Var__DeclRefExpr"], ["123", 2, "IntegerLiteral"], ["continue", 1, "ContinueStmt"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["t", 5, "Var__DeclRefExpr"], ["int t_ T;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int i_ j;", 1, "DeclStmt"], ["int p;", 1, "DeclStmt"], ["i", 13, "Var__DeclRefExpr"]] 
alan790712 2270488_2453486_alan790712.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["puts", 4, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["j", 20, "ParmVar__DeclRefExpr"], ["1000", 2, "IntegerLiteral"], ["i", 24, "ParmVar__DeclRefExpr"], ["void ()", 1, "Type"], ["void (int_ int)", 1, "Type"], ["123", 2, "IntegerLiteral"], ["2", 4, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["check", 5, "Function__DeclRefExpr"], ["int", 11, "Type"], ["o", 10, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int t_ T;", 1, "DeclStmt"], ["void", 2, "Type"], ["x", 10, "Var__DeclRefExpr"], ["O", 7, "Var__DeclRefExpr"], ["board", 5, "Var__DeclRefExpr"], ["4", 9, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["char", 1, "Type"], ["char [123]", 1, "Type"], ["'X'", 1, "CharacterLiteral"], ["T", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["cnt", 5, "Function__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["char [123][123]", 1, "Type"], ["main", 1, "Function"], ["t", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["X", 7, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["3", 1, "IntegerLiteral"]] 
alan790712 2270488_2463486_alan790712.c [["\"%d\\n\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["t", 5, "Var__DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["main", 1, "Function"], ["char [1234]", 1, "Type"], ["1234", 1, "IntegerLiteral"], ["continue", 1, "ContinueStmt"], ["k", 11, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["str", 9, "Var__DeclRefExpr"], ["10000001", 2, "IntegerLiteral"], ["long long", 4, "Type"], ["a", 4, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["char [10000001]", 1, "Type"], ["li", 10, "Var__DeclRefExpr"], ["sqrt", 1, "DeclRefExpr"], ["int", 7, "Type"], ["char", 2, "Type"], ["b", 3, "Var__DeclRefExpr"], ["\"%lld\"", 1, "StringLiteral"], ["j", 11, "Var__DeclRefExpr"], ["int t_ T;", 1, "DeclStmt"], ["int i_ j_ k;", 1, "DeclStmt"], ["isp", 3, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["i", 6, "Var__DeclRefExpr"], ["long long int li;", 1, "DeclStmt"], ["ans", 4, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["sprintf", 2, "DeclRefExpr"], ["strlen", 2, "DeclRefExpr"], [";", 2, "NullStmt"], ["T", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"]] 
alan790712 2974486_5709773144064000_alan790712.c [["0.0", 1, "FloatingLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["break", 1, "BreakStmt"], ["2.0", 3, "FloatingLiteral"], ["0", 3, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["1e-8", 3, "FloatingLiteral"], ["double buildTime;", 1, "DeclStmt"], ["C", 3, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["X", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["r", 5, "ParmVar__DeclRefExpr"], ["double", 9, "Type"], ["buildTime", 6, "Var__DeclRefExpr"], ["int", 5, "Type"], ["bST", 2, "Function__DeclRefExpr"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["double (double_ double)", 1, "Type"], ["l", 4, "ParmVar__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["double m;", 1, "DeclStmt"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["m", 9, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"]] 
alan790712 2974486_5756407898963968_alan790712.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["\"%*d\"", 1, "StringLiteral"], ["4", 7, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["ans", 7, "Var__DeclRefExpr"], ["int ans;", 1, "DeclStmt"], ["int [5]", 1, "Type"], ["int [2][5]", 1, "Type"], ["card", 5, "Var__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 9, "Type"], ["\"%d\"", 3, "StringLiteral"], ["5", 1, "IntegerLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["2", 3, "IntegerLiteral"], ["a", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["i", 14, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int [2]", 1, "Type"], ["j", 10, "Var__DeclRefExpr"], ["scanf", 4, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"]] 
alan790712_advex 1460488_1483485_alan790712_advex.c [["\"\"", 1, "StringLiteral"], ["puts", 1, "DeclRefExpr"], ["'\\0'", 1, "CharacterLiteral"], ["printf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["gets", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["'w'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["256", 2, "IntegerLiteral"], ["'k'", 2, "CharacterLiteral"], ["0", 3, "IntegerLiteral"], ["1234567", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["'t'", 2, "CharacterLiteral"], ["char [1234567]", 1, "Type"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["i", 10, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["char [256]", 1, "Type"], ["'a'", 2, "CharacterLiteral"], ["str", 5, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["'z'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["int", 5, "Type"], ["char", 2, "Type"], ["trans", 29, "Var__DeclRefExpr"], ["'f'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'u'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["putchar", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["'d'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["int t;", 1, "DeclStmt"], ["'v'", 2, "CharacterLiteral"], ["scanf", 1, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"]] 
alan790712_advex 1460488_1483488_alan790712_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], [";", 1, "NullStmt"], ["Case", 2, "Var__DeclRefExpr"], ["int duai_Var;", 1, "DeclStmt"], ["t", 3, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["int [1234]", 1, "Type"], ["i", 20, "Var__DeclRefExpr"], ["10000000", 2, "IntegerLiteral"], ["a", 7, "Var__ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["100", 2, "IntegerLiteral"], ["duai_Var", 8, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["int", 19, "Type"], ["check", 2, "Function__DeclRefExpr"], ["1000", 2, "IntegerLiteral"], ["100000", 2, "IntegerLiteral"], ["b", 6, "Var__ParmVar__DeclRefExpr"], ["digit", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["nNum", 10, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 5, "IntegerLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["ten", 4, "Var__DeclRefExpr"], ["int *", 2, "Type"], ["1000000", 2, "IntegerLiteral"], ["int [10]", 1, "Type"], ["1234", 1, "IntegerLiteral"], ["int i;", 2, "DeclStmt"], ["cmp", 2, "Function__DeclRefExpr"], ["int (const void *_ const void *)", 1, "Type"], ["main", 1, "Function"], ["scanf", 2, "DeclRefExpr"], ["const void *", 2, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["int (int)", 1, "Type"], ["num", 4, "ParmVar__DeclRefExpr"], ["10000", 2, "IntegerLiteral"], ["qsort", 1, "DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["n", 8, "Var__DeclRefExpr"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"]] 
alan790712_advex 1460488_1595491_alan790712_advex.c [["printf", 1, "DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["ans", 5, "Var__DeclRefExpr"], ["int ans;", 1, "DeclStmt"], ["\" %d\"", 1, "StringLiteral"], ["int duai_Var_ j;", 1, "DeclStmt"], ["duai_Var", 13, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["score", 4, "Var__DeclRefExpr"], ["s", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["Case", 2, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["max", 9, "Var__DeclRefExpr"], ["int [31][2]", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["31", 2, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["\"%d\"", 1, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["2", 4, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["j", 1, "Var"], ["int [2]", 1, "Type"], ["int t;", 1, "DeclStmt"]] 
alan790712_advex 2270488_2449486_alan790712_advex.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], [";", 2, "NullStmt"], ["puts", 2, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["max", 4, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["int p;", 1, "DeclStmt"], ["i", 13, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["int max;", 1, "DeclStmt"], ["int [123]", 1, "Type"], ["\"NO\"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["int [123][123]", 1, "Type"], ["m", 6, "Var__DeclRefExpr"], ["n", 6, "Var__DeclRefExpr"], ["int", 11, "Type"], ["gg", 6, "Var__DeclRefExpr"], ["int t_ sjbi_Var;", 1, "DeclStmt"], ["\"%d\"", 2, "StringLiteral"], ["p", 11, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["123", 2, "IntegerLiteral"], ["t", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["map", 10, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["continue", 1, "ContinueStmt"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["sjbi_Var", 3, "Var__DeclRefExpr"]] 
alan790712_advex 2270488_2453486_alan790712_advex.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["puts", 4, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["'O'", 1, "CharacterLiteral"], ["j", 20, "ParmVar__DeclRefExpr"], ["1000", 2, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["duai_Var", 24, "ParmVar__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["void (int_ int)", 1, "Type"], ["123", 2, "IntegerLiteral"], ["2", 4, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["check", 5, "Function__DeclRefExpr"], ["int", 11, "Type"], ["o", 10, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["void", 2, "Type"], ["x", 10, "Var__DeclRefExpr"], ["O", 7, "Var__DeclRefExpr"], ["board", 5, "Var__DeclRefExpr"], ["4", 9, "IntegerLiteral"], ["char", 1, "Type"], ["char [123]", 1, "Type"], ["'X'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["cnt", 5, "Function__DeclRefExpr"], ["void ()", 1, "Type"], ["0", 13, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["char [123][123]", 1, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int t_ T;", 1, "DeclStmt"], ["int duai_Var_ j;", 1, "DeclStmt"], ["X", 7, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"]] 
alan790712_advex 2270488_2463486_alan790712_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["char [1234]", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["1234", 1, "IntegerLiteral"], ["continue", 1, "ContinueStmt"], ["k", 11, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["str", 9, "Var__DeclRefExpr"], ["10000001", 2, "IntegerLiteral"], ["long long", 4, "Type"], ["dual_Var", 4, "Var__DeclRefExpr"], ["\"%lld\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["char [10000001]", 1, "Type"], ["li", 10, "Var__DeclRefExpr"], ["char", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["int t_ T;", 1, "DeclStmt"], ["int i_ j_ k;", 1, "DeclStmt"], ["isp", 3, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["int", 7, "Type"], ["sqrt", 1, "DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 11, "Var__DeclRefExpr"], ["i", 6, "Var__DeclRefExpr"], ["long long int li;", 1, "DeclStmt"], ["ans", 4, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["sprintf", 2, "DeclRefExpr"], ["strlen", 2, "DeclRefExpr"], [";", 2, "NullStmt"]] 
alan790712_advex 2974486_5709773144064000_alan790712_advex.c [["0.0", 1, "FloatingLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["break", 1, "BreakStmt"], ["2.0", 3, "FloatingLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["1e-8", 3, "FloatingLiteral"], ["0", 3, "IntegerLiteral"], ["duad_Var", 4, "Var__DeclRefExpr"], ["double buildTime;", 1, "DeclStmt"], ["C", 3, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["X", 4, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["r", 5, "ParmVar__DeclRefExpr"], ["double", 9, "Type"], ["buildTime", 6, "Var__DeclRefExpr"], ["int", 5, "Type"], ["bST", 2, "Function__DeclRefExpr"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["double (double_ double)", 1, "Type"], ["l", 4, "ParmVar__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["double m;", 1, "DeclStmt"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["m", 9, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"]] 
alan790712_advex 2974486_5756407898963968_alan790712_advex.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["\"%*d\"", 1, "StringLiteral"], ["4", 7, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["ans", 7, "Var__DeclRefExpr"], ["int ans;", 1, "DeclStmt"], ["scanf", 4, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["int [5]", 1, "Type"], ["card", 5, "Var__DeclRefExpr"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 9, "Type"], ["\"%d\"", 3, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["5", 1, "IntegerLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["2", 3, "IntegerLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["duai_Var", 3, "Var__DeclRefExpr"], ["j", 10, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int [2]", 1, "Type"], ["int ()", 1, "Type"], ["int [2][5]", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"]] 
Ankzz 1460488_1483485_Ankzz.c [["' '", 1, "CharacterLiteral"], ["fprintf", 2, "DeclRefExpr"], ["int x;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["i", 5, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["\"input.txt\"", 1, "StringLiteral"], ["fopen", 3, "DeclRefExpr"], ["'a'", 3, "CharacterLiteral"], ["char *[]", 1, "Type"], ["fp", 6, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["fgetc", 2, "DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["argc", 2, "ParmVar__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["FILE *fp_ *o;", 1, "DeclStmt"], ["'c'", 2, "CharacterLiteral"], ["char [26]", 1, "Type"], ["main", 1, "Function"], ["fscanf", 1, "DeclRefExpr"], ["int", 5, "Type"], ["1", 3, "IntegerLiteral"], ["'d'", 2, "CharacterLiteral"], ["argv", 2, "ParmVar__DeclRefExpr"], ["\"r+\"", 2, "StringLiteral"], ["char", 2, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["\"%c\"", 1, "StringLiteral"], ["\"w+\"", 1, "StringLiteral"], ["map", 2, "Var__DeclRefExpr"], ["'s'", 2, "CharacterLiteral"], ["x", 11, "Var__DeclRefExpr"], ["26", 1, "IntegerLiteral"], ["'y'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["FILE", 2, "Type"], ["'g'", 2, "CharacterLiteral"], ["o", 4, "Var__DeclRefExpr"], ["'e'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'\\n'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'u'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"]] 
Ankzz 1460488_1483488_Ankzz.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["m", 6, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["10", 5, "IntegerLiteral"], ["\"input.txt\"", 1, "StringLiteral"], ["x", 5, "Var__DeclRefExpr"], ["fopen", 3, "DeclRefExpr"], ["o", 4, "Var__DeclRefExpr"], ["char *[]", 1, "Type"], ["int T;", 1, "DeclStmt"], ["0", 3, "IntegerLiteral"], ["ic", 1, "Var"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["argc", 2, "ParmVar__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["FILE *fp_ *o;", 1, "DeclStmt"], ["main", 1, "Function"], ["fscanf", 2, "DeclRefExpr"], ["int", 14, "Type"], ["1", 4, "IntegerLiteral"], ["argv", 2, "ParmVar__DeclRefExpr"], ["\"r\"", 2, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["y", 4, "Var__DeclRefExpr"], ["\"w+\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["int j_ k;", 1, "DeclStmt"], ["j", 7, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["k", 1, "Var"], ["i", 5, "Var__DeclRefExpr"], ["int x_ y;", 1, "DeclStmt"], ["FILE", 2, "Type"], ["s", 2, "Var__DeclRefExpr"], ["c", 6, "Var__DeclRefExpr"], ["fp", 6, "Var__DeclRefExpr"], ["me", 4, "Var__DeclRefExpr"]] 
Ankzz 1460488_1595491_Ankzz.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["2", 3, "IntegerLiteral"], ["3", 1, "IntegerLiteral"], ["short", 1, "Type"], ["flag", 4, "Var__DeclRefExpr"], ["z", 11, "Var__DeclRefExpr"], ["y", 10, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["\"input.txt\"", 1, "StringLiteral"], ["o", 3, "Var__DeclRefExpr"], ["char *[]", 1, "Type"], ["fp", 6, "Var__DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["0", 7, "IntegerLiteral"], ["char *", 1, "Type"], ["int x_ y_ z;", 1, "DeclStmt"], ["FILE *", 2, "Type"], ["argc", 2, "ParmVar__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["FILE *fp_ *o;", 1, "DeclStmt"], ["main", 1, "Function"], ["fscanf", 3, "DeclRefExpr"], ["int", 14, "Type"], ["1", 6, "IntegerLiteral"], ["argv", 2, "ParmVar__DeclRefExpr"], ["\"r+\"", 2, "StringLiteral"], ["fopen", 3, "DeclRefExpr"], ["S", 3, "Var__DeclRefExpr"], ["break", 3, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["\"w+\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["int j_ k;", 1, "DeclStmt"], ["j", 4, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["k", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["p", 3, "Var__DeclRefExpr"], ["int N_ S_ p;", 1, "DeclStmt"], ["N", 3, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["s", 4, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"]] 
Ankzz 2270488_2449486_Ankzz.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["p", 24, "Var__DeclRefExpr"], ["dummy", 1, "Var"], ["int i_ j;", 1, "DeclStmt"], ["FILE *", 2, "Type"], ["100", 3, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["m", 11, "Var__DeclRefExpr"], ["char dummy[100];", 1, "DeclStmt"], ["char [100]", 1, "Type"], ["0", 23, "IntegerLiteral"], ["fp", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["int p;", 1, "DeclStmt"], ["j", 28, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 21, "Type"], ["1", 15, "IntegerLiteral"], ["c", 3, "Var__DeclRefExpr"], ["\"B-small-attempt3.in\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["k", 16, "Var__DeclRefExpr"], ["prev", 21, "Var__DeclRefExpr"], ["fo", 2, "Var__DeclRefExpr"], ["i", 27, "Var__DeclRefExpr"], ["break", 5, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["y", 8, "Var__DeclRefExpr"], ["int x_ y;", 1, "DeclStmt"], ["FILE", 2, "Type"], ["int [100]", 1, "Type"], ["x", 8, "Var__DeclRefExpr"], ["sane", 14, "Var__DeclRefExpr"], ["short", 1, "Type"], ["int m[100][100];", 1, "DeclStmt"], ["int [100][100]", 1, "Type"]] 
Ankzz 2270488_2453486_Ankzz.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"Case #%d: %c won\\n\"", 1, "StringLiteral"], ["fprintf", 2, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["'.'", 7, "CharacterLiteral"], ["dummy", 2, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["100", 1, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["char dummy[100];", 1, "DeclStmt"], ["char [100]", 1, "Type"], ["0", 32, "IntegerLiteral"], ["fp", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["T", 3, "Var__DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["j", 9, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 5, "Type"], ["1", 7, "IntegerLiteral"], ["char [4][5]", 1, "Type"], ["empty", 3, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["FILE", 2, "Type"], ["5", 1, "IntegerLiteral"], ["i", 26, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["char", 8, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["char map[4][5];", 1, "DeclStmt"], ["char [5]", 1, "Type"], ["4", 8, "IntegerLiteral"], ["map", 10, "Var__DeclRefExpr"], ["\"%s\"", 2, "StringLiteral"], ["fo", 3, "Var__DeclRefExpr"], ["prev", 38, "Var__DeclRefExpr"], ["'T'", 10, "CharacterLiteral"], ["x", 21, "Var__DeclRefExpr"]] 
Ankzz 2270488_2463486_Ankzz.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["count", 3, "Var__DeclRefExpr"], ["j", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"output.txt\"", 1, "StringLiteral"], ["\"%ld %ld\"", 1, "StringLiteral"], ["fo", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["h", 8, "Var__DeclRefExpr"], ["i", 9, "ParmVar__DeclRefExpr"], ["sqr", 2, "Function__DeclRefExpr"], ["unsigned long", 2, "Type"], ["8", 1, "IntegerLiteral"], ["10", 3, "IntegerLiteral"], ["0", 9, "IntegerLiteral"], ["isPallindrome", 3, "Function__DeclRefExpr"], ["n", 4, "ParmVar__DeclRefExpr"], ["int (int)", 1, "Type"], ["double", 1, "Type"], ["short", 1, "Type"], ["long", 3, "Type"], ["2", 1, "IntegerLiteral"], ["FILE", 2, "Type"], ["5", 1, "IntegerLiteral"], ["r", 6, "Var__DeclRefExpr"], ["floor", 1, "DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["main", 1, "Function"], ["t", 9, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 9, "Type"], ["sqrt", 1, "DeclRefExpr"], ["0xF", 1, "IntegerLiteral"], ["3", 1, "IntegerLiteral"], ["6", 1, "IntegerLiteral"], ["7", 1, "IntegerLiteral"], ["fp", 4, "Var__DeclRefExpr"], ["0.5", 1, "FloatingLiteral"], ["int ()", 1, "Type"], ["1", 1, "IntegerLiteral"], ["c", 3, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["short (long)", 1, "Type"], ["fopen", 2, "DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"]] 
Ankzz 2974486_5709773144064000_Ankzz.c [["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["intervalWithCurrRate", 6, "Var__DeclRefExpr"], ["\"%f %f %f\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["rate", 5, "Var__DeclRefExpr"], ["\"input.txt\"", 1, "StringLiteral"], ["fopen", 3, "DeclRefExpr"], ["o", 3, "Var__DeclRefExpr"], ["char *[]", 1, "Type"], ["fp", 5, "Var__DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["0", 6, "IntegerLiteral"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["argc", 2, "ParmVar__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["FILE", 2, "Type"], ["X", 5, "Var__DeclRefExpr"], ["FILE *fp_ *o;", 1, "DeclStmt"], ["main", 1, "Function"], ["fscanf", 2, "DeclRefExpr"], ["int", 6, "Type"], ["nextIntervalRate", 3, "Var__DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["argv", 2, "ParmVar__DeclRefExpr"], ["\"r+\"", 2, "StringLiteral"], ["break", 2, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["\"w+\"", 1, "StringLiteral"], ["C", 3, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int j_ k;", 1, "DeclStmt"], ["j", 1, "Var"], ["int i;", 1, "DeclStmt"], ["k", 1, "Var"], ["i", 5, "Var__DeclRefExpr"], ["float C_ F_ X;", 1, "DeclStmt"], ["time", 7, "Var__DeclRefExpr"], ["intervalForFarmBuying", 5, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["float", 4, "Type"], ["F", 4, "Var__DeclRefExpr"], ["double", 7, "Type"]] 
Ankzz 2974486_5756407898963968_Ankzz.c [["\"Bad magician!\"", 1, "StringLiteral"], ["\"%s\\n\"", 2, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["fprintf", 4, "DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d %d %d %d\"", 4, "StringLiteral"], ["long long", 1, "Type"], ["score", 1, "Var"], ["ignore", 9, "Var__DeclRefExpr"], ["\"input.txt\"", 1, "StringLiteral"], ["fopen", 3, "DeclRefExpr"], ["FILE", 2, "Type"], ["o", 6, "Var__DeclRefExpr"], ["char *[]", 1, "Type"], ["int [4]", 2, "Type"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["fp", 10, "Var__DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["0", 13, "IntegerLiteral"], ["char *", 1, "Type"], ["argc", 2, "ParmVar__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["ar", 5, "Var__DeclRefExpr"], ["index", 4, "Var__DeclRefExpr"], ["grid", 7, "Var__DeclRefExpr"], ["4", 6, "IntegerLiteral"], ["FILE *fp_ *o;", 1, "DeclStmt"], ["main", 1, "Function"], ["fscanf", 7, "DeclRefExpr"], ["int", 12, "Type"], ["1", 10, "IntegerLiteral"], ["argv", 2, "ParmVar__DeclRefExpr"], ["matchCount", 6, "Var__DeclRefExpr"], ["\"r+\"", 2, "StringLiteral"], ["\"w+\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["int j_ k;", 1, "DeclStmt"], ["j", 14, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["k", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["break", 2, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["int ar;", 1, "DeclStmt"], ["int grid[4]_ grid2[4]_ ignore;", 1, "DeclStmt"], ["FILE *", 2, "Type"], ["grid2", 6, "Var__DeclRefExpr"]] 
Ankzz_advex 1460488_1483485_Ankzz_advex.c [["' '", 1, "CharacterLiteral"], ["fprintf", 2, "DeclRefExpr"], ["int x;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["i", 5, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'u'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["FILE", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["'a'", 3, "CharacterLiteral"], ["char *[]", 1, "Type"], ["fp", 6, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["fgetc", 2, "DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["'y'", 2, "CharacterLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["'s'", 2, "CharacterLiteral"], ["freopen", 1, "DeclRefExpr"], ["char [26]", 1, "Type"], ["main", 1, "Function"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["int (int_ char **)", 1, "Type"], ["'c'", 2, "CharacterLiteral"], ["fscanf", 1, "DeclRefExpr"], ["int", 5, "Type"], ["FILE *fp_ *o;", 1, "DeclStmt"], ["duai_Var", 2, "ParmVar__DeclRefExpr"], ["argv", 2, "ParmVar__DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["'d'", 2, "CharacterLiteral"], ["fopen", 3, "DeclRefExpr"], ["'q'", 2, "CharacterLiteral"], ["\"input.txt\"", 1, "StringLiteral"], ["\"r+\"", 2, "StringLiteral"], ["char", 2, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["\"%c\"", 1, "StringLiteral"], ["map", 2, "Var__DeclRefExpr"], ["\"w+\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["x", 11, "Var__DeclRefExpr"], ["26", 1, "IntegerLiteral"], ["'h'", 2, "CharacterLiteral"], ["o", 4, "Var__DeclRefExpr"], ["'e'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'\\n'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"]] 
Ankzz_advex 1460488_1483488_Ankzz_advex.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["me", 4, "Var__DeclRefExpr"], ["ic", 1, "Var"], ["m", 6, "Var__DeclRefExpr"], ["drbi_Var", 6, "Var__DeclRefExpr"], ["FILE *mloF_Var_ *dokF_Var;", 1, "DeclStmt"], ["main", 1, "Function"], ["0", 3, "IntegerLiteral"], ["gjai_Var", 1, "Var"], ["\"w\"", 1, "StringLiteral"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["char *[]", 1, "Type"], ["jguc_Var", 2, "ParmVar__DeclRefExpr"], ["\"replace-me.out\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["td_F", 1, "Typedef"], ["kbci_Var", 2, "ParmVar__DeclRefExpr"], ["\"w+\"", 1, "StringLiteral"], ["int fbwi_Var;", 1, "DeclStmt"], ["int (int_ char **)", 1, "Type"], ["int dlqi_Var_ lqxi_Var;", 1, "DeclStmt"], ["ret_val", 2, "Var__DeclRefExpr"], ["int gjai_Var;", 1, "DeclStmt"], ["fscanf", 2, "DeclRefExpr"], ["int", 15, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["mloF_Var", 6, "Var__DeclRefExpr"], ["dokF_Var", 4, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["fopen", 3, "DeclRefExpr"], ["omgi_Var", 4, "Var__DeclRefExpr"], ["\"input.txt\"", 1, "StringLiteral"], ["\"r\"", 2, "StringLiteral"], ["fbwi_Var", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["juxi_Var", 6, "Var__DeclRefExpr"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["dlqi_Var", 5, "Var__DeclRefExpr"], ["lqxi_Var", 4, "Var__DeclRefExpr"], ["FILE", 3, "Type"], ["s", 2, "Var__DeclRefExpr"]] 
Ankzz_advex 1460488_1595491_Ankzz_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["flag", 4, "Var__DeclRefExpr"], ["z", 11, "Var__DeclRefExpr"], ["zuvi_Var", 10, "Var__DeclRefExpr"], ["zgli_Var", 4, "Var__DeclRefExpr"], ["int zgli_Var_ zuvi_Var_ z;", 1, "DeclStmt"], ["\"%d %d %d\"", 1, "StringLiteral"], ["2", 3, "IntegerLiteral"], ["gymi_Var", 4, "Var__DeclRefExpr"], ["p", 3, "Var__DeclRefExpr"], ["N", 3, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["main", 1, "Function"], ["FILE *", 2, "Type"], ["chmc_Var", 2, "ParmVar__DeclRefExpr"], ["int zhti_Var_ xcri_Var;", 1, "DeclStmt"], ["emqi_Var", 2, "ParmVar__DeclRefExpr"], ["\"w+\"", 1, "StringLiteral"], ["int fbwi_Var;", 1, "DeclStmt"], ["fscanf", 3, "DeclRefExpr"], ["int", 15, "Type"], ["s", 4, "Var__DeclRefExpr"], ["FILE", 5, "Type"], ["char *[]", 1, "Type"], ["int N_ S_ p;", 1, "DeclStmt"], ["td_FILE", 1, "Typedef"], ["kyuF_Var", 6, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["td_F", 1, "Typedef"], ["zhti_Var", 4, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["short", 1, "Type"], ["char *", 1, "Type"], ["td_s", 2, "Typedef"], ["int (int_ char **)", 1, "Type"], ["\"r\"", 1, "StringLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["FILE *kyuF_Var_ *kwsF_Var;", 1, "DeclStmt"], ["1", 6, "IntegerLiteral"], ["S", 3, "Var__DeclRefExpr"], ["fopen", 3, "DeclRefExpr"], ["omgi_Var", 5, "Var__DeclRefExpr"], ["\"input.txt\"", 1, "StringLiteral"], ["\"r+\"", 2, "StringLiteral"], ["break", 3, "BreakStmt"], ["char", 1, "Type"], ["kwsF_Var", 3, "Var__DeclRefExpr"], ["\"output.txt\"", 1, "StringLiteral"], ["td_FI", 1, "Typedef"], ["int omgi_Var;", 1, "DeclStmt"], ["fbwi_Var", 3, "Var__DeclRefExpr"], ["xcri_Var", 5, "Var__DeclRefExpr"]] 
Ankzz_advex 2270488_2449486_Ankzz_advex.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["p", 24, "Var__DeclRefExpr"], ["dummy", 1, "Var"], ["int i_ j;", 1, "DeclStmt"], ["FILE *", 2, "Type"], ["100", 3, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["m", 11, "Var__DeclRefExpr"], ["char dummy[100];", 1, "DeclStmt"], ["char [100]", 1, "Type"], ["0", 23, "IntegerLiteral"], ["fp", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["int p;", 1, "DeclStmt"], ["j", 28, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 21, "Type"], ["1", 15, "IntegerLiteral"], ["c", 3, "Var__DeclRefExpr"], ["\"B-small-attempt3.in\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["k", 16, "Var__DeclRefExpr"], ["prev", 21, "Var__DeclRefExpr"], ["fo", 2, "Var__DeclRefExpr"], ["i", 27, "Var__DeclRefExpr"], ["break", 5, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["y", 8, "Var__DeclRefExpr"], ["int x_ y;", 1, "DeclStmt"], ["FILE", 2, "Type"], ["int [100]", 1, "Type"], ["x", 8, "Var__DeclRefExpr"], ["sane", 14, "Var__DeclRefExpr"], ["short", 1, "Type"], ["int m[100][100];", 1, "DeclStmt"], ["int [100][100]", 1, "Type"]] 
Ankzz_advex 2270488_2453486_Ankzz_advex.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"Case #%d: %c won\\n\"", 1, "StringLiteral"], ["fprintf", 2, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["'.'", 7, "CharacterLiteral"], ["dummy", 2, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["100", 1, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["char dummy[100];", 1, "DeclStmt"], ["char [100]", 1, "Type"], ["0", 32, "IntegerLiteral"], ["fp", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["T", 3, "Var__DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["j", 9, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 5, "Type"], ["1", 7, "IntegerLiteral"], ["char [4][5]", 1, "Type"], ["empty", 3, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["FILE", 2, "Type"], ["5", 1, "IntegerLiteral"], ["i", 26, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["char", 8, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["char map[4][5];", 1, "DeclStmt"], ["char [5]", 1, "Type"], ["4", 8, "IntegerLiteral"], ["map", 10, "Var__DeclRefExpr"], ["\"%s\"", 2, "StringLiteral"], ["fo", 3, "Var__DeclRefExpr"], ["prev", 38, "Var__DeclRefExpr"], ["'T'", 10, "CharacterLiteral"], ["x", 21, "Var__DeclRefExpr"]] 
Ankzz_advex 2270488_2463486_Ankzz_advex.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["count", 3, "Var__DeclRefExpr"], ["j", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"output.txt\"", 1, "StringLiteral"], ["\"%ld %ld\"", 1, "StringLiteral"], ["fo", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["h", 8, "Var__DeclRefExpr"], ["i", 9, "ParmVar__DeclRefExpr"], ["sqr", 2, "Function__DeclRefExpr"], ["unsigned long", 2, "Type"], ["8", 1, "IntegerLiteral"], ["10", 3, "IntegerLiteral"], ["0", 9, "IntegerLiteral"], ["isPallindrome", 3, "Function__DeclRefExpr"], ["n", 4, "ParmVar__DeclRefExpr"], ["int (int)", 1, "Type"], ["double", 1, "Type"], ["short", 1, "Type"], ["long", 3, "Type"], ["2", 1, "IntegerLiteral"], ["FILE", 2, "Type"], ["5", 1, "IntegerLiteral"], ["r", 6, "Var__DeclRefExpr"], ["floor", 1, "DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["main", 1, "Function"], ["t", 9, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 9, "Type"], ["sqrt", 1, "DeclRefExpr"], ["0xF", 1, "IntegerLiteral"], ["3", 1, "IntegerLiteral"], ["6", 1, "IntegerLiteral"], ["7", 1, "IntegerLiteral"], ["fp", 4, "Var__DeclRefExpr"], ["0.5", 1, "FloatingLiteral"], ["int ()", 1, "Type"], ["1", 1, "IntegerLiteral"], ["c", 3, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["short (long)", 1, "Type"], ["fopen", 2, "DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"]] 
Ankzz_advex 2974486_5709773144064000_Ankzz_advex.c [["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["\"%f %f %f\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["rate", 5, "Var__DeclRefExpr"], ["double", 7, "Type"], ["dtgF_Var", 5, "Var__DeclRefExpr"], ["jffi_Var", 1, "Var"], ["intervalWithCurrRate", 6, "Var__DeclRefExpr"], ["FILE *dtgF_Var_ *shqF_Var;", 1, "DeclStmt"], ["\"w+\"", 1, "StringLiteral"], ["C", 3, "Var__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["char *[]", 1, "Type"], ["main", 1, "Function"], ["nextIntervalRate", 3, "Var__DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["nvpi_Var", 2, "ParmVar__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 7, "Type"], ["int (int_ char **)", 1, "Type"], ["FILE", 2, "Type"], ["X", 5, "Var__DeclRefExpr"], ["emqc_Var", 2, "ParmVar__DeclRefExpr"], ["fopen", 3, "DeclRefExpr"], ["qksi_Var", 5, "Var__DeclRefExpr"], ["\"input.txt\"", 1, "StringLiteral"], ["\"r+\"", 2, "StringLiteral"], ["break", 2, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["int emti_Var;", 1, "DeclStmt"], ["int gnri_Var_ jffi_Var;", 1, "DeclStmt"], ["gnri_Var", 1, "Var"], ["intervalForFarmBuying", 5, "Var__DeclRefExpr"], ["emti_Var", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["int qksi_Var;", 1, "DeclStmt"], ["float", 4, "Type"], ["F", 4, "Var__DeclRefExpr"], ["shqF_Var", 3, "Var__DeclRefExpr"], ["float C_ F_ X;", 1, "DeclStmt"], ["time", 7, "Var__DeclRefExpr"]] 
Ankzz_advex 2974486_5756407898963968_Ankzz_advex.c [["\"Bad magician!\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["fprintf", 4, "DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d %d %d %d\"", 4, "StringLiteral"], ["score", 1, "Var"], ["ignore", 9, "Var__DeclRefExpr"], ["4", 6, "IntegerLiteral"], ["int [4]", 2, "Type"], ["index", 4, "Var__DeclRefExpr"], ["grid", 7, "Var__DeclRefExpr"], ["int grid[4]_ grid2[4]_ ignore;", 1, "DeclStmt"], ["ar", 5, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%s\\n\"", 2, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["main", 1, "Function"], ["char *", 1, "Type"], ["grid2", 6, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["argc", 2, "ParmVar__DeclRefExpr"], ["zhzi_Var", 3, "Var__DeclRefExpr"], ["char *[]", 1, "Type"], ["gwbc_Var", 2, "ParmVar__DeclRefExpr"], ["fscanf", 7, "DeclRefExpr"], ["int", 12, "Type"], ["freopen", 1, "DeclRefExpr"], ["td_F", 1, "Typedef"], ["FILE", 3, "Type"], ["td_ll", 2, "Typedef"], ["\"input.txt\"", 1, "StringLiteral"], ["int (int_ char **)", 1, "Type"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["fp", 10, "Var__DeclRefExpr"], ["int zhzi_Var;", 1, "DeclStmt"], ["0", 13, "IntegerLiteral"], ["cetF_Var", 6, "Var__DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["xqsi_Var", 5, "Var__DeclRefExpr"], ["1", 10, "IntegerLiteral"], ["fopen", 3, "DeclRefExpr"], ["matchCount", 6, "Var__DeclRefExpr"], ["\"r+\"", 2, "StringLiteral"], ["\"w+\"", 1, "StringLiteral"], ["long long", 1, "Type"], ["int xqsi_Var;", 1, "DeclStmt"], ["int j_ k;", 1, "DeclStmt"], ["FILE *fp_ *cetF_Var;", 1, "DeclStmt"], ["j", 14, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["int ar;", 1, "DeclStmt"]] 
born2code 1460488_1483485_born2code.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["'\\0'", 2, "CharacterLiteral"], ["0", 2, "IntegerLiteral"], ["\"%*c\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["m", 4, "Var__DeclRefExpr"], ["200", 2, "IntegerLiteral"], ["char l[200]_ m[200];", 1, "DeclStmt"], ["j", 7, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["'v'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["gets", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["char (char)", 1, "Type"], ["'f'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["char [200]", 2, "Type"], ["'u'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["hash", 2, "Function__DeclRefExpr"], ["'y'", 2, "CharacterLiteral"], ["k", 1, "Var"], ["'l'", 2, "CharacterLiteral"], ["'p'", 2, "CharacterLiteral"], ["n", 3, "Var__DeclRefExpr"], ["int n_ i_ j_ k;", 1, "DeclStmt"], ["'a'", 2, "CharacterLiteral"], ["char", 4, "Type"], ["x", 2, "ParmVar__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["' '", 1, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["main", 1, "Function"], ["l", 4, "Var__DeclRefExpr"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["int", 5, "Type"]] 
born2code 1460488_1483488_born2code.c [["printf", 1, "DeclRefExpr"], ["\"%ld%ld\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["unsigned long int i_ j_ k_ d_ p;", 1, "DeclStmt"], ["m", 6, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["unsigned long int t_ a_ b_ m_ n;", 1, "DeclStmt"], ["d", 11, "ParmVar__DeclRefExpr"], ["unsigned long", 16, "Type"], ["int ()", 1, "Type"], ["int (unsigned long)", 1, "Type"], ["\"%ld\"", 1, "StringLiteral"], ["int", 4, "Type"], ["n", 11, "ParmVar__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["rotate", 3, "Function__DeclRefExpr"], ["a", 5, "Var__DeclRefExpr"], ["unsigned long (unsigned long_ int)", 1, "Type"], ["1", 5, "IntegerLiteral"], ["unsigned long int x_ p_ q;", 1, "DeclStmt"], ["\"Case #%ld: %ld\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["pow", 1, "DeclRefExpr"], ["p", 10, "Var__DeclRefExpr"], ["q", 3, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["10", 3, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["digits", 2, "Function__DeclRefExpr"]] 
born2code 1460488_1595491_born2code.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["a", 5, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["int a_ count_ t_ n_ s_ p_ i_ j_ k;", 1, "DeclStmt"], ["int", 10, "Type"], ["main", 1, "Function"], ["count", 5, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["k", 1, "Var"], ["scanf", 3, "DeclRefExpr"]] 
born2code 2270488_2449486_born2code.c [["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["int a[100][100]_ b[100][100];", 1, "DeclStmt"], ["x", 7, "Var__DeclRefExpr"], ["max", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int [100][100]", 4, "Type"], ["a", 11, "ParmVar__DeclRefExpr"], ["n", 11, "ParmVar__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 4, "Type"], ["i", 32, "Var__DeclRefExpr"], ["int", 18, "Type"], ["equal", 2, "Function__DeclRefExpr"], ["100", 8, "IntegerLiteral"], ["int (int (*)[100]_ int (*)[100]_ int_ int)", 1, "Type"], ["b", 7, "ParmVar__DeclRefExpr"], ["m", 11, "ParmVar__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["j", 32, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["\"NO\\n\"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["\"YES\\n\"", 1, "StringLiteral"], ["T1", 3, "Var__DeclRefExpr"], ["0", 15, "IntegerLiteral"], ["main", 1, "Function"]] 
born2code 2270488_2453486_born2code.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["'X'", 5, "CharacterLiteral"], ["'O'", 5, "CharacterLiteral"], ["printf", 5, "DeclRefExpr"], ["'T'", 5, "CharacterLiteral"], ["'.'", 2, "CharacterLiteral"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["1", 25, "IntegerLiteral"], ["4", 17, "IntegerLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["char", 1, "Type"], ["getchar", 1, "DeclRefExpr"], ["char [4]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["char [4][4]", 1, "Type"], ["0", 14, "IntegerLiteral"], ["T1", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["main", 1, "Function"], ["t", 17, "Var__DeclRefExpr"], ["int T1_ T_ dot_ x_ o_ i_ j_ xc_ oc_ t;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["o", 7, "Var__DeclRefExpr"], ["dot", 4, "Var__DeclRefExpr"], ["x", 7, "Var__DeclRefExpr"], ["a", 19, "Var__DeclRefExpr"], ["oc", 17, "Var__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["j", 40, "Var__DeclRefExpr"], ["3", 12, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["xc", 17, "Var__DeclRefExpr"], ["i", 22, "Var__DeclRefExpr"], ["char a[4][4];", 1, "DeclStmt"]] 
born2code 2270488_2463486_born2code.c [["floor", 1, "DeclRefExpr"], ["ceil", 1, "DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["count", 4, "Var__DeclRefExpr"], ["ub", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["char x[100];", 1, "DeclStmt"], ["k", 5, "Var__DeclRefExpr"], ["i", 28, "Var__DeclRefExpr__ParmVar"], ["char []", 1, "Type"], ["0", 7, "IntegerLiteral"], ["T1", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 2, "Type"], ["y", 3, "Var__DeclRefExpr"], ["void (int_ char *)", 1, "Type"], ["j", 11, "Var__DeclRefExpr"], ["itos", 2, "Function__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["x", 6, "Var__DeclRefExpr"], ["'\\0'", 1, "CharacterLiteral"], ["strlen", 2, "DeclRefExpr"], ["void", 1, "Type"], ["a", 10, "ParmVar__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["s", 6, "ParmVar__DeclRefExpr"], ["char", 4, "Type"], ["int T_ T1_ a_ b_ lb_ ub_ count_ i;", 1, "DeclStmt"], ["sqrt", 2, "DeclRefExpr"], ["next", 2, "Function__DeclRefExpr"], ["int", 20, "Type"], ["lb", 3, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["'0'", 1, "CharacterLiteral"], ["1", 8, "IntegerLiteral"], ["palind", 4, "Function__DeclRefExpr"], ["char x_ y[100];", 1, "DeclStmt"], ["int (int)", 2, "Type"], ["n", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["b", 3, "Var__DeclRefExpr"]] 
born2code 2974486_5709773144064000_born2code.c [["1", 1, "IntegerLiteral"], ["double C_ F_ X;", 1, "DeclStmt"], ["t", 5, "Var__DeclRefExpr"], ["int t_ T;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["\"%f\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["F", 6, "ParmVar__DeclRefExpr"], ["C", 5, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["temp", 9, "Var__DeclRefExpr"], ["double", 8, "Type"], ["void", 1, "Type"], ["compute", 2, "Function__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["min", 4, "Var__DeclRefExpr"], ["void (double_ double_ double)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["i", 6, "Var__DeclRefExpr"], ["int", 6, "Type"], ["T", 3, "Var__DeclRefExpr"], ["j", 1, "Var"], ["scanf", 2, "DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["X", 6, "ParmVar__DeclRefExpr"], ["double min_ temp;", 1, "DeclStmt"], ["2.0", 1, "FloatingLiteral"]] 
born2code 2974486_5756407898963968_born2code.c [["t", 5, "Var__DeclRefExpr"], ["n1", 5, "Var__DeclRefExpr"], ["int T_ n1_ n2_ A[4]_ B[4]_ t_ j_ k_ l_ i;", 1, "DeclStmt"], ["main", 1, "Function"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"%d\"", 6, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["int ()", 1, "Type"], ["int [4]", 4, "Type"], ["void (int *_ int *)", 1, "Type"], ["l", 5, "Var__DeclRefExpr"], ["y", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["int", 19, "Type"], ["intersec", 2, "Function__DeclRefExpr"], ["B", 5, "ParmVar__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["A", 5, "ParmVar__DeclRefExpr"], ["4", 10, "IntegerLiteral"], ["i", 14, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["j", 12, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["n2", 1, "Var"], ["0", 11, "IntegerLiteral"]] 
born2code_advex 1460488_1483485_born2code_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["'\\0'", 2, "CharacterLiteral"], ["0", 2, "IntegerLiteral"], ["\"%*c\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["m", 4, "Var__DeclRefExpr"], ["200", 2, "IntegerLiteral"], ["char l[200]_ m[200];", 1, "DeclStmt"], ["j", 7, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["'v'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["gets", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["char (char)", 1, "Type"], ["'f'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["char [200]", 2, "Type"], ["'u'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["hash", 2, "Function__DeclRefExpr"], ["'y'", 2, "CharacterLiteral"], ["k", 1, "Var"], ["'l'", 2, "CharacterLiteral"], ["'p'", 2, "CharacterLiteral"], ["n", 3, "Var__DeclRefExpr"], ["int n_ i_ j_ k;", 1, "DeclStmt"], ["'a'", 2, "CharacterLiteral"], ["char", 4, "Type"], ["x", 2, "ParmVar__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["' '", 1, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["main", 1, "Function"], ["l", 4, "Var__DeclRefExpr"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["int", 5, "Type"]] 
born2code_advex 1460488_1483488_born2code_advex.c [["printf", 1, "DeclRefExpr"], ["\"%ld%ld\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["unsigned long int i_ j_ k_ d_ p;", 1, "DeclStmt"], ["m", 6, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["unsigned long int t_ a_ b_ m_ n;", 1, "DeclStmt"], ["d", 11, "ParmVar__DeclRefExpr"], ["unsigned long", 16, "Type"], ["int ()", 1, "Type"], ["int (unsigned long)", 1, "Type"], ["\"%ld\"", 1, "StringLiteral"], ["int", 4, "Type"], ["n", 11, "ParmVar__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["rotate", 3, "Function__DeclRefExpr"], ["a", 5, "Var__DeclRefExpr"], ["unsigned long (unsigned long_ int)", 1, "Type"], ["1", 5, "IntegerLiteral"], ["unsigned long int x_ p_ q;", 1, "DeclStmt"], ["\"Case #%ld: %ld\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["pow", 1, "DeclRefExpr"], ["p", 10, "Var__DeclRefExpr"], ["q", 3, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["10", 3, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["digits", 2, "Function__DeclRefExpr"]] 
born2code_advex 1460488_1595491_born2code_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["a", 5, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["int a_ count_ t_ n_ s_ p_ i_ j_ k;", 1, "DeclStmt"], ["int", 10, "Type"], ["main", 1, "Function"], ["count", 5, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["k", 1, "Var"], ["scanf", 3, "DeclRefExpr"]] 
born2code_advex 2270488_2449486_born2code_advex.c [["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["int a[100][100]_ b[100][100];", 1, "DeclStmt"], ["x", 7, "Var__DeclRefExpr"], ["max", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int [100][100]", 4, "Type"], ["a", 11, "ParmVar__DeclRefExpr"], ["n", 11, "ParmVar__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 4, "Type"], ["i", 32, "Var__DeclRefExpr"], ["int", 18, "Type"], ["equal", 2, "Function__DeclRefExpr"], ["100", 8, "IntegerLiteral"], ["int (int (*)[100]_ int (*)[100]_ int_ int)", 1, "Type"], ["b", 7, "ParmVar__DeclRefExpr"], ["m", 11, "ParmVar__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["j", 32, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["\"NO\\n\"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["\"YES\\n\"", 1, "StringLiteral"], ["T1", 3, "Var__DeclRefExpr"], ["0", 15, "IntegerLiteral"], ["main", 1, "Function"]] 
born2code_advex 2270488_2453486_born2code_advex.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["'X'", 5, "CharacterLiteral"], ["'O'", 5, "CharacterLiteral"], ["printf", 5, "DeclRefExpr"], ["'T'", 5, "CharacterLiteral"], ["'.'", 2, "CharacterLiteral"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["1", 25, "IntegerLiteral"], ["4", 17, "IntegerLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["char", 1, "Type"], ["getchar", 1, "DeclRefExpr"], ["char [4]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["char [4][4]", 1, "Type"], ["0", 14, "IntegerLiteral"], ["T1", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["main", 1, "Function"], ["t", 17, "Var__DeclRefExpr"], ["int T1_ T_ dot_ x_ o_ i_ j_ xc_ oc_ t;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["o", 7, "Var__DeclRefExpr"], ["dot", 4, "Var__DeclRefExpr"], ["x", 7, "Var__DeclRefExpr"], ["a", 19, "Var__DeclRefExpr"], ["oc", 17, "Var__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["j", 40, "Var__DeclRefExpr"], ["3", 12, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["xc", 17, "Var__DeclRefExpr"], ["i", 22, "Var__DeclRefExpr"], ["char a[4][4];", 1, "DeclStmt"]] 
born2code_advex 2270488_2463486_born2code_advex.c [["floor", 1, "DeclRefExpr"], ["ceil", 1, "DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["count", 4, "Var__DeclRefExpr"], ["ub", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["char x[100];", 1, "DeclStmt"], ["k", 5, "Var__DeclRefExpr"], ["i", 28, "Var__DeclRefExpr__ParmVar"], ["char []", 1, "Type"], ["0", 7, "IntegerLiteral"], ["T1", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 2, "Type"], ["y", 3, "Var__DeclRefExpr"], ["void (int_ char *)", 1, "Type"], ["j", 11, "Var__DeclRefExpr"], ["itos", 2, "Function__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["x", 6, "Var__DeclRefExpr"], ["'\\0'", 1, "CharacterLiteral"], ["strlen", 2, "DeclRefExpr"], ["void", 1, "Type"], ["a", 10, "ParmVar__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["s", 6, "ParmVar__DeclRefExpr"], ["char", 4, "Type"], ["int T_ T1_ a_ b_ lb_ ub_ count_ i;", 1, "DeclStmt"], ["sqrt", 2, "DeclRefExpr"], ["next", 2, "Function__DeclRefExpr"], ["int", 20, "Type"], ["lb", 3, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["'0'", 1, "CharacterLiteral"], ["1", 8, "IntegerLiteral"], ["palind", 4, "Function__DeclRefExpr"], ["char x_ y[100];", 1, "DeclStmt"], ["int (int)", 2, "Type"], ["n", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["b", 3, "Var__DeclRefExpr"]] 
born2code_advex 2974486_5709773144064000_born2code_advex.c [["1", 1, "IntegerLiteral"], ["double C_ F_ X;", 1, "DeclStmt"], ["t", 5, "Var__DeclRefExpr"], ["int t_ T;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["\"%f\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["F", 6, "ParmVar__DeclRefExpr"], ["C", 5, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["temp", 9, "Var__DeclRefExpr"], ["double", 8, "Type"], ["void", 1, "Type"], ["compute", 2, "Function__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["min", 4, "Var__DeclRefExpr"], ["void (double_ double_ double)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["i", 6, "Var__DeclRefExpr"], ["int", 6, "Type"], ["T", 3, "Var__DeclRefExpr"], ["j", 1, "Var"], ["scanf", 2, "DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["X", 6, "ParmVar__DeclRefExpr"], ["double min_ temp;", 1, "DeclStmt"], ["2.0", 1, "FloatingLiteral"]] 
born2code_advex 2974486_5756407898963968_born2code_advex.c [["t", 5, "Var__DeclRefExpr"], ["n1", 5, "Var__DeclRefExpr"], ["int T_ n1_ n2_ A[4]_ B[4]_ t_ j_ k_ l_ i;", 1, "DeclStmt"], ["main", 1, "Function"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"%d\"", 6, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["int ()", 1, "Type"], ["int [4]", 4, "Type"], ["void (int *_ int *)", 1, "Type"], ["l", 5, "Var__DeclRefExpr"], ["y", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["int", 19, "Type"], ["intersec", 2, "Function__DeclRefExpr"], ["B", 5, "ParmVar__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["A", 5, "ParmVar__DeclRefExpr"], ["4", 10, "IntegerLiteral"], ["i", 14, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["j", 12, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["n2", 1, "Var"], ["0", 11, "IntegerLiteral"]] 
caf 1460488_1483485_caf.c [["scanf", 1, "DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int t_ i_ c;", 1, "DeclStmt"], ["main", 1, "Function"], ["tolower", 1, "DeclRefExpr"], ["putchar", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["1", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["int c;", 1, "DeclStmt"], ["english", 2, "Var__DeclRefExpr"], ["void (int)", 1, "Type"], ["t", 5, "ParmVar__DeclRefExpr"], ["goog_to_eng", 3, "Function__DeclRefExpr"], ["int (int)", 1, "Type"], ["const char *", 3, "Type"], ["int", 8, "Type"], ["char", 3, "Type"], ["int ()", 1, "Type"], ["\"abcdefghijklmnopqrstuvwxyz\"", 1, "StringLiteral"], ["toupper", 1, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["strchr", 1, "DeclRefExpr"], ["'\\n'", 2, "CharacterLiteral"], ["getchar", 2, "DeclRefExpr"], ["\"ynficwlbkuomxsevzpdrjgthaq\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["p", 3, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["do_test", 2, "Function__DeclRefExpr"], ["c", 13, "ParmVar__DeclRefExpr"], ["googlerese", 3, "Var__DeclRefExpr"], ["void", 1, "Type"]] 
caf 1460488_1483488_caf.c [["\"%d\"", 1, "StringLiteral"], ["b", 6, "ParmVar__DeclRefExpr"], ["long (long_ long_ long)", 1, "Type"], [";", 1, "NullStmt"], ["long (long_ long)", 1, "Type"], ["m", 11, "ParmVar__DeclRefExpr"], ["rotate", 3, "Function__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["long (long)", 1, "Type"], ["long", 17, "Type"], ["a", 9, "ParmVar__DeclRefExpr"], ["tens", 4, "Var__DeclRefExpr"], ["void", 1, "Type"], ["10", 5, "IntegerLiteral"], ["msd", 5, "ParmVar__DeclRefExpr"], ["long tens;", 1, "DeclStmt"], ["pairs", 2, "Function__DeclRefExpr"], ["long m;", 1, "DeclStmt"], ["n", 5, "ParmVar__DeclRefExpr"], ["count", 6, "Var__DeclRefExpr"], ["most_sig_digit", 2, "Function__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["\"(%ld_ %ld)\\n\"", 1, "StringLiteral"], ["void (int)", 1, "Type"], ["do_test", 2, "Function__DeclRefExpr"], ["t", 5, "ParmVar__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["int", 4, "Type"], ["\"%ld %ld\"", 1, "StringLiteral"], ["main", 1, "Function"], ["\"Case #%d: %ld\\n\"", 1, "StringLiteral"], ["long a_ b_ i;", 1, "DeclStmt"], ["i", 10, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["int ()", 1, "Type"]] 
caf 1460488_1595491_caf.c [["int ()", 1, "Type"], ["printf", 1, "DeclRefExpr"], ["main", 1, "Function"], ["continue", 1, "ContinueStmt"], ["int total;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["total", 4, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["s", 4, "Var__DeclRefExpr"], ["int", 12, "Type"], ["int t_ i;", 1, "DeclStmt"], ["t", 5, "ParmVar__DeclRefExpr"], ["void (int)", 1, "Type"], ["void", 1, "Type"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["p", 8, "Var__DeclRefExpr"], ["int thresh_norm_ thresh_surprise;", 1, "DeclStmt"], ["1", 2, "IntegerLiteral"], ["thresh_norm", 3, "Var__DeclRefExpr"], ["10", 1, "IntegerLiteral"], ["y", 4, "Var__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["thresh_surprise", 3, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"]] 
caf 2270488_2449486_caf.c [["int ()", 1, "Type"], ["main", 1, "Function"], ["break", 1, "BreakStmt"], ["goto done", 1, "GotoStmt"], ["int jj;", 1, "DeclStmt"], ["ii", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["int ii;", 1, "DeclStmt"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["int n_ m;", 1, "DeclStmt"], ["int", 12, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["void (int)", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["void", 1, "Type"], ["a", 6, "Var__DeclRefExpr"], ["\"YES\"", 1, "StringLiteral"], ["int [100][100]", 1, "Type"], ["0", 9, "IntegerLiteral"], ["failed", 3, "Var__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["m", 5, "Var__DeclRefExpr"], ["j", 11, "Var__DeclRefExpr"], ["int a[100][100];", 1, "DeclStmt"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 1, "Type"], ["i", 16, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["t", 5, "ParmVar__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["jj", 5, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"]] 
caf 2270488_2453486_caf.c [["\"%d\"", 1, "StringLiteral"], ["int t_ i;", 1, "DeclStmt"], ["main", 1, "Function"], ["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["char [4][4]", 1, "Type"], ["x_won_row", 4, "Var__DeclRefExpr"], ["t", 5, "ParmVar__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["char board[4][4];", 1, "DeclStmt"], ["'O'", 1, "CharacterLiteral"], ["is_o", 5, "Function__DeclRefExpr"], ["o_won_row", 4, "Var__DeclRefExpr"], ["is_x", 5, "Function__DeclRefExpr"], ["void", 1, "Type"], ["x_won_diag_1", 4, "Var__DeclRefExpr"], ["tile", 6, "ParmVar__DeclRefExpr"], ["x_won_diag_2", 4, "Var__DeclRefExpr"], ["\"O won\"", 1, "StringLiteral"], ["int (char)", 2, "Type"], ["i", 22, "Var__DeclRefExpr"], ["x_won_col", 4, "Var__DeclRefExpr"], ["int", 19, "Type"], ["void (int)", 1, "Type"], ["char", 3, "Type"], ["'X'", 1, "CharacterLiteral"], ["unfinished", 4, "Var__DeclRefExpr"], ["char [4]", 1, "Type"], ["4", 4, "IntegerLiteral"], ["'T'", 2, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["j", 9, "Var__DeclRefExpr"], ["o_won_diag_1", 4, "Var__DeclRefExpr"], ["\" %4c %4c %4c %4c\"", 1, "StringLiteral"], ["x_won", 6, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["o_won", 6, "Var__DeclRefExpr"], ["o_won_diag_2", 4, "Var__DeclRefExpr"], ["1", 10, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["board", 14, "Var__DeclRefExpr"], ["o_won_col", 4, "Var__DeclRefExpr"]] 
caf 2270488_2463486_caf.c [["\"%d\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["int root;", 1, "DeclStmt"], ["i", 11, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["b", 3, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int a_ b;", 1, "DeclStmt"], ["1", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["is_fair", 3, "Function__DeclRefExpr"], ["n", 13, "ParmVar__DeclRefExpr"], ["1000", 1, "IntegerLiteral"], ["a", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["int", 14, "Type"], ["int (int)", 2, "Type"], ["is_square", 2, "Function__DeclRefExpr"], ["11", 1, "IntegerLiteral"], ["main", 1, "Function"], ["root", 7, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["t", 5, "ParmVar__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["sqrt", 1, "DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["do_test", 2, "Function__DeclRefExpr"], ["void (int)", 1, "Type"]] 
caf 2974486_5709773144064000_caf.c [["int ()", 1, "Type"], ["main", 1, "Function"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["0.0", 1, "FloatingLiteral"], ["i", 5, "Var__DeclRefExpr"], ["time", 3, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["double c_ f_ x;", 1, "DeclStmt"], ["n_farms", 10, "ParmVar__DeclRefExpr"], ["long n_farms;", 1, "DeclStmt"], ["double", 7, "Type"], ["\"%d\"", 1, "StringLiteral"], ["long", 2, "Type"], ["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["double (long_ double_ double)", 1, "Type"], ["c", 7, "ParmVar__DeclRefExpr"], ["void", 1, "Type"], ["time_to_buy", 3, "Function__DeclRefExpr"], ["2.0", 3, "FloatingLiteral"], ["do_test", 2, "Function__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["void (int)", 1, "Type"], ["int t_ i;", 1, "DeclStmt"], ["f", 8, "ParmVar__DeclRefExpr"], ["t", 5, "ParmVar__DeclRefExpr"], ["int", 4, "Type"]] 
caf 2974486_5756407898963968_caf.c [["int t_ i;", 1, "DeclStmt"], ["main", 1, "Function"], ["int row;", 1, "DeclStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["int i;", 1, "DeclStmt"], ["void (int)", 1, "Type"], ["t", 5, "ParmVar__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["pcard3", 6, "ParmVar__DeclRefExpr"], ["test_card", 5, "Function__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["5", 2, "IntegerLiteral"], ["pcard4", 6, "ParmVar__DeclRefExpr"], ["int card1_ card2_ card3_ card4;", 2, "DeclStmt"], ["pcard2", 6, "ParmVar__DeclRefExpr"], ["row", 5, "Var__DeclRefExpr"], ["void", 1, "Type"], ["int", 26, "Type"], ["card", 5, "ParmVar__DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["pcard1", 6, "ParmVar__DeclRefExpr"], ["card1", 9, "Var__DeclRefExpr"], ["int pcard1_ pcard2_ pcard3_ pcard4;", 1, "DeclStmt"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int the_card;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["the_card", 6, "Var__DeclRefExpr"], ["int (int_ int_ int_ int_ int)", 1, "Type"], ["printf", 4, "DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["card4", 9, "Var__DeclRefExpr"], ["n_found", 7, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["card2", 9, "Var__DeclRefExpr"], ["card3", 9, "Var__DeclRefExpr"], ["\"%d %d %d %d\"", 2, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["\"Bad magician!\\n\"", 1, "StringLiteral"]] 
caf_advex 1460488_1483485_caf_advex.c [["0", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 1, "DeclRefExpr"], ["googlerese", 3, "Var__DeclRefExpr"], ["c", 13, "ParmVar__DeclRefExpr"], ["p", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["void", 1, "Type"], ["\"ynficwlbkuomxsevzpdrjgthaq\"", 1, "StringLiteral"], ["getchar", 2, "DeclRefExpr"], ["'\\n'", 2, "CharacterLiteral"], ["int jzxi_Var_ plli_Var_ c;", 1, "DeclStmt"], ["strchr", 1, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["toupper", 1, "DeclRefExpr"], ["const char *", 3, "Type"], ["english", 2, "Var__DeclRefExpr"], ["\"abcdefghijklmnopqrstuvwxyz\"", 1, "StringLiteral"], ["td_cc", 1, "Typedef"], ["int", 8, "Type"], ["goog_to_eng", 3, "Function__DeclRefExpr"], ["do_voifqg_fct", 2, "Function__DeclRefExpr"], ["jzxi_Var", 5, "ParmVar__DeclRefExpr"], ["int c;", 1, "DeclStmt"], ["printf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["void (int)", 1, "Type"], ["char", 4, "Type"], ["break", 1, "BreakStmt"], ["int ()", 1, "Type"], ["putchar", 2, "DeclRefExpr"], ["tolower", 1, "DeclRefExpr"], ["main", 1, "Function"], ["int (int)", 1, "Type"], ["freopen", 2, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"replace-me.out\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["plli_Var", 5, "Var__DeclRefExpr"]] 
caf_advex 1460488_1483488_caf_advex.c [["\"%d\"", 1, "StringLiteral"], ["int t_ i;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["b", 6, "ParmVar__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["long (long_ long_ long)", 1, "Type"], [";", 1, "NullStmt"], ["long (long_ long)", 1, "Type"], ["m", 11, "ParmVar__DeclRefExpr"], ["rotate", 3, "Function__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["long (long)", 1, "Type"], ["long", 17, "Type"], ["a", 9, "ParmVar__DeclRefExpr"], ["tens", 4, "Var__DeclRefExpr"], ["void", 1, "Type"], ["10", 5, "IntegerLiteral"], ["msd", 5, "ParmVar__DeclRefExpr"], ["long tens;", 1, "DeclStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["pairs", 2, "Function__DeclRefExpr"], ["long m;", 1, "DeclStmt"], ["n", 5, "ParmVar__DeclRefExpr"], ["count", 6, "Var__DeclRefExpr"], ["most_sig_digit", 2, "Function__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["\"(%ld_ %ld)\\n\"", 1, "StringLiteral"], ["void (int)", 1, "Type"], ["do_test", 2, "Function__DeclRefExpr"], ["t", 5, "ParmVar__DeclRefExpr"], ["int", 4, "Type"], ["\"%ld %ld\"", 1, "StringLiteral"], ["main", 1, "Function"], ["\"Case #%d: %ld\\n\"", 1, "StringLiteral"], ["long a_ b_ i;", 1, "DeclStmt"], ["i", 10, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["int ()", 1, "Type"]] 
caf_advex 1460488_1595491_caf_advex.c [["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["printf", 1, "DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["continue", 1, "ContinueStmt"], ["int total;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["total", 4, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["s", 4, "Var__DeclRefExpr"], ["int", 12, "Type"], ["int t_ i;", 1, "DeclStmt"], ["t", 5, "ParmVar__DeclRefExpr"], ["void (int)", 1, "Type"], ["void", 1, "Type"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["p", 8, "Var__DeclRefExpr"], ["int thresh_norm_ thresh_surprise;", 1, "DeclStmt"], ["1", 2, "IntegerLiteral"], ["thresh_norm", 3, "Var__DeclRefExpr"], ["10", 1, "IntegerLiteral"], ["y", 4, "Var__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["thresh_surprise", 3, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"]] 
caf_advex 2270488_2449486_caf_advex.c [["int t_ i;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["jj", 5, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["i", 16, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int a[100][100];", 1, "DeclStmt"], ["j", 11, "Var__DeclRefExpr"], ["m", 5, "Var__DeclRefExpr"], ["t", 5, "ParmVar__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["failed", 3, "Var__DeclRefExpr"], ["0", 9, "IntegerLiteral"], ["int [100][100]", 1, "Type"], ["\"YES\"", 1, "StringLiteral"], ["a", 6, "Var__DeclRefExpr"], ["void", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["int", 12, "Type"], ["int n_ m;", 1, "DeclStmt"], ["1", 2, "IntegerLiteral"], ["\"NO\"", 1, "StringLiteral"], ["int [100]", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["int ii;", 1, "DeclStmt"], ["printf", 1, "DeclRefExpr"], ["ii", 5, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int jj;", 1, "DeclStmt"], ["goto done", 1, "GotoStmt"], ["void (int)", 1, "Type"], ["break", 1, "BreakStmt"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int ()", 1, "Type"]] 
caf_advex 2270488_2453486_caf_advex.c [["\"%d\"", 1, "StringLiteral"], ["int t_ duai_Var;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["char [4][4]", 1, "Type"], ["x_won_row", 4, "Var__DeclRefExpr"], ["t", 5, "ParmVar__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["char board[4][4];", 1, "DeclStmt"], ["'O'", 1, "CharacterLiteral"], ["is_o", 5, "Function__DeclRefExpr"], ["o_won_row", 4, "Var__DeclRefExpr"], ["is_x", 5, "Function__DeclRefExpr"], ["void", 1, "Type"], ["x_won_diag_1", 4, "Var__DeclRefExpr"], ["tile", 6, "ParmVar__DeclRefExpr"], ["'T'", 2, "CharacterLiteral"], ["x_won_diag_2", 4, "Var__DeclRefExpr"], ["\"O won\"", 1, "StringLiteral"], ["int (char)", 2, "Type"], ["x_won_col", 4, "Var__DeclRefExpr"], ["int", 19, "Type"], ["void (int)", 1, "Type"], ["char", 3, "Type"], ["'X'", 1, "CharacterLiteral"], ["unfinished", 4, "Var__DeclRefExpr"], ["duai_Var", 22, "Var__DeclRefExpr"], ["char [4]", 1, "Type"], ["int duai_Var_ j;", 1, "DeclStmt"], ["4", 4, "IntegerLiteral"], ["j", 9, "Var__DeclRefExpr"], ["o_won_diag_1", 4, "Var__DeclRefExpr"], ["\" %4c %4c %4c %4c\"", 1, "StringLiteral"], ["x_won", 6, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["o_won", 6, "Var__DeclRefExpr"], ["o_won_diag_2", 4, "Var__DeclRefExpr"], ["1", 10, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["board", 14, "Var__DeclRefExpr"], ["o_won_col", 4, "Var__DeclRefExpr"]] 
caf_advex 2270488_2463486_caf_advex.c [["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int xfvi_Var_ i;", 1, "DeclStmt"], ["printf", 1, "DeclRefExpr"], ["int root;", 1, "DeclStmt"], ["i", 10, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int a_ b;", 1, "DeclStmt"], ["xfvi_Var", 5, "ParmVar__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["is_fair", 3, "Function__DeclRefExpr"], ["n", 13, "ParmVar__DeclRefExpr"], ["1000", 1, "IntegerLiteral"], ["a", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["int", 14, "Type"], ["int (int)", 2, "Type"], ["is_square", 2, "Function__DeclRefExpr"], ["do_voiwly_fct", 2, "Function__DeclRefExpr"], ["11", 1, "IntegerLiteral"], ["0", 6, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["root", 7, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["sqrt", 1, "DeclRefExpr"], ["void (int)", 1, "Type"]] 
caf_advex 2974486_5709773144064000_caf_advex.c [["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["0.0", 1, "FloatingLiteral"], ["time", 3, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["double c_ f_ x;", 1, "DeclStmt"], ["n_farms", 10, "ParmVar__DeclRefExpr"], ["long n_farms;", 1, "DeclStmt"], ["double", 7, "Type"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["long", 2, "Type"], ["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["double (long_ double_ double)", 1, "Type"], ["int t_ duai_Var;", 1, "DeclStmt"], ["c", 7, "ParmVar__DeclRefExpr"], ["void", 1, "Type"], ["time_to_buy", 3, "Function__DeclRefExpr"], ["2.0", 3, "FloatingLiteral"], ["do_test", 2, "Function__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["void (int)", 1, "Type"], ["duai_Var", 5, "Var__DeclRefExpr"], ["f", 8, "ParmVar__DeclRefExpr"], ["t", 5, "ParmVar__DeclRefExpr"], ["int", 4, "Type"]] 
caf_advex 2974486_5756407898963968_caf_advex.c [["int t_ duai_Var;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int row;", 1, "DeclStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["duai_Var", 14, "Var__DeclRefExpr"], ["void (int)", 1, "Type"], ["t", 5, "ParmVar__DeclRefExpr"], ["do_test", 2, "Function__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["pcard3", 6, "ParmVar__DeclRefExpr"], ["test_card", 5, "Function__DeclRefExpr"], ["pcard4", 6, "ParmVar__DeclRefExpr"], ["int card1_ card2_ card3_ card4;", 2, "DeclStmt"], ["freopen", 1, "DeclRefExpr"], ["pcard2", 6, "ParmVar__DeclRefExpr"], ["row", 5, "Var__DeclRefExpr"], ["void", 1, "Type"], ["int", 26, "Type"], ["card", 5, "ParmVar__DeclRefExpr"], ["pcard1", 6, "ParmVar__DeclRefExpr"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int the_card;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["the_card", 6, "Var__DeclRefExpr"], ["int (int_ int_ int_ int_ int)", 1, "Type"], ["printf", 4, "DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["card4", 9, "Var__DeclRefExpr"], ["n_found", 7, "Var__DeclRefExpr"], ["5", 2, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["int pcard1_ pcard2_ pcard3_ pcard4;", 1, "DeclStmt"], ["card1", 9, "Var__DeclRefExpr"], ["card2", 9, "Var__DeclRefExpr"], ["card3", 9, "Var__DeclRefExpr"], ["\"%d %d %d %d\"", 2, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int duai_Var;", 1, "DeclStmt"], ["\"Bad magician!\\n\"", 1, "StringLiteral"]] 
chiguri 1460488_1483485_chiguri.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["'\\n'", 1, "CharacterLiteral"], ["0", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["fgets", 1, "DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["char [102]", 1, "Type"], ["108", 2, "IntegerLiteral"], ["105", 2, "IntegerLiteral"], ["120", 2, "IntegerLiteral"], ["const char []", 1, "Type"], ["106", 2, "IntegerLiteral"], ["100", 2, "IntegerLiteral"], ["112", 2, "IntegerLiteral"], ["j", 9, "Var__DeclRefExpr"], ["99", 2, "IntegerLiteral"], ["' '", 1, "CharacterLiteral"], ["110", 2, "IntegerLiteral"], ["115", 2, "IntegerLiteral"], ["103", 2, "IntegerLiteral"], ["map", 2, "Var__DeclRefExpr"], ["117", 2, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["'a'", 1, "CharacterLiteral"], ["input", 11, "Var__DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["104", 2, "IntegerLiteral"], ["101", 2, "IntegerLiteral"], ["char", 2, "Type"], ["int (void)", 1, "Type"], ["col", 3, "Var__DeclRefExpr"], ["98", 2, "IntegerLiteral"], ["107", 2, "IntegerLiteral"], ["'\\0'", 2, "CharacterLiteral"], ["122", 2, "IntegerLiteral"], ["114", 2, "IntegerLiteral"], ["116", 2, "IntegerLiteral"], ["119", 2, "IntegerLiteral"], ["118", 2, "IntegerLiteral"], ["102", 3, "IntegerLiteral"], ["109", 2, "IntegerLiteral"], ["113", 2, "IntegerLiteral"], ["main", 1, "Function"], ["111", 2, "IntegerLiteral"], ["97", 2, "IntegerLiteral"], ["int", 4, "Type"], ["char input[102];", 1, "DeclStmt"], ["sscanf", 1, "DeclRefExpr"], ["int col;", 1, "DeclStmt"]] 
chiguri 1460488_1483488_chiguri.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["A", 4, "Var__DeclRefExpr"], ["j", 8, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["m", 4, "ParmVar__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["num", 5, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["rotate_check", 2, "Function__DeclRefExpr"], ["int (int)", 1, "Type"], ["int", 12, "Type"], ["break", 1, "BreakStmt"], ["result", 7, "Var__DeclRefExpr"], ["n", 7, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["int T_ A;", 1, "DeclStmt"]] 
chiguri 1460488_1595491_chiguri.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["sup_require_num", 5, "Var__DeclRefExpr"], ["result", 8, "Var__DeclRefExpr"], ["temp", 6, "Var__DeclRefExpr"], ["int temp;", 1, "DeclStmt"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["400", 1, "IntegerLiteral"], ["char", 1, "Type"], ["int", 10, "Type"], ["int sup_num;", 1, "DeclStmt"], ["int i_ j;", 1, "DeclStmt"], ["input", 1, "Var"], ["int result;", 1, "DeclStmt"], ["char [400]", 1, "Type"], ["int col;", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["col", 3, "Var__DeclRefExpr"], ["int num;", 1, "DeclStmt"], ["int sup_require_num;", 1, "DeclStmt"], ["int score;", 1, "DeclStmt"], ["\"%d %d %d\"", 1, "StringLiteral"], ["sup_num", 4, "Var__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["score", 6, "Var__DeclRefExpr"]] 
chiguri 2270488_2449486_chiguri.c [["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["goto LAST", 1, "GotoStmt"], ["int result;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["k", 9, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int num;", 1, "DeclStmt"], ["break", 1, "BreakStmt"], ["\"YES\\n\"", 1, "StringLiteral"], ["0", 10, "IntegerLiteral"], ["int (void)", 1, "Type"], ["1", 5, "IntegerLiteral"], ["j", 10, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["i", 14, "Var__DeclRefExpr"], ["N", 5, "Var__DeclRefExpr"], ["data", 5, "Var__DeclRefExpr"], ["M", 5, "Var__DeclRefExpr"], ["x", 3, "ParmVar__DeclRefExpr"], ["int", 16, "Type"], ["check", 2, "Function__DeclRefExpr"], ["result", 7, "Var__DeclRefExpr"], ["int [100][100]", 1, "Type"], ["int (int_ int)", 1, "Type"], ["y", 3, "ParmVar__DeclRefExpr"], ["\"NO\\n\"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["100", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"]] 
chiguri 2270488_2453486_chiguri.c [["\"O won\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["'X'", 1, "CharacterLiteral"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 1, "IntegerLiteral"], ["k", 15, "Var__DeclRefExpr"], ["gets", 2, "DeclRefExpr"], ["1", 13, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["j", 21, "Var__DeclRefExpr"], ["i", 24, "Var__DeclRefExpr"], ["int (int *)", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["int test;", 1, "DeclStmt"], ["check", 3, "Function__DeclRefExpr"], ["test", 13, "Var__DeclRefExpr"], ["int", 16, "Type"], ["\"Game has not completed\\n\"", 1, "StringLiteral"], ["int *", 3, "Type"], ["int i_ j_ k;", 1, "DeclStmt"], ["4", 16, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["X", 6, "Var__DeclRefExpr"], ["data", 5, "ParmVar__DeclRefExpr"], ["0", 19, "IntegerLiteral"], ["char buf[6];", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["O", 6, "Var__DeclRefExpr"], ["buf", 6, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["break", 4, "BreakStmt"], ["char", 1, "Type"], ["char [6]", 1, "Type"], ["int O[4][4];", 1, "DeclStmt"], ["6", 1, "IntegerLiteral"], ["int X[4][4];", 1, "DeclStmt"], ["result", 2, "Var__DeclRefExpr"], ["int num;", 1, "DeclStmt"], ["int [4]", 2, "Type"], ["int emp;", 1, "DeclStmt"], ["emp", 4, "Var__DeclRefExpr"], ["int result;", 1, "DeclStmt"]] 
chiguri 2270488_2463486_chiguri.c [["1", 3, "IntegerLiteral"], ["i", 12, "Var__DeclRefExpr"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["char [10]", 1, "Type"], ["n", 2, "ParmVar__DeclRefExpr"], ["int l_ i;", 1, "DeclStmt"], ["d", 5, "Var__DeclRefExpr"], ["num", 3, "Var__DeclRefExpr"], ["10", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["int (void)", 1, "Type"], ["char", 1, "Type"], ["double", 2, "Type"], ["int (int)", 1, "Type"], ["int A2_ B2;", 1, "DeclStmt"], ["0", 4, "IntegerLiteral"], ["palindrome", 3, "Function__DeclRefExpr"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int num;", 1, "DeclStmt"], ["int A_ B;", 1, "DeclStmt"], ["A", 4, "Var__DeclRefExpr"], ["l", 4, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 16, "Type"], ["A2", 3, "Var__DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["B2", 3, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["result", 4, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"]] 
chiguri 2974486_5709773144064000_chiguri.c [["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["0.0", 1, "FloatingLiteral"], ["0", 2, "IntegerLiteral"], ["\"%llf\\n\"", 1, "StringLiteral"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["double least;", 1, "DeclStmt"], ["2.0", 2, "FloatingLiteral"], ["cps", 4, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["i", 9, "Var__DeclRefExpr"], ["max_f", 1, "Var"], ["c", 3, "Var__DeclRefExpr"], ["least", 6, "Var__DeclRefExpr"], ["double", 6, "Type"], ["100000", 2, "IntegerLiteral"], ["f_times", 6, "Var__DeclRefExpr"], ["double temp;", 1, "DeclStmt"], ["long double [100000]", 1, "Type"], ["break", 1, "BreakStmt"], ["int num;", 1, "DeclStmt"], ["x", 4, "Var__DeclRefExpr"], ["temp", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["int", 5, "Type"], ["num", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["int try_num;", 1, "DeclStmt"], ["try_num", 5, "Var__DeclRefExpr"], ["f", 3, "Var__DeclRefExpr"], ["long double", 1, "Type"], ["int max_f;", 1, "DeclStmt"]] 
chiguri 2974486_5756407898963968_chiguri.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["4", 5, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["printf", 4, "DeclRefExpr"], ["fc", 4, "Var__DeclRefExpr"], ["int fc_ lc;", 1, "DeclStmt"], ["n", 4, "Var__DeclRefExpr"], ["l", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["16", 4, "IntegerLiteral"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 12, "Type"], ["f", 4, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["int N;", 1, "DeclStmt"], ["\"%d\"", 5, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["int i_ j_ k;", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int [16]", 2, "Type"], ["1", 5, "IntegerLiteral"], ["int (void)", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["break", 3, "BreakStmt"], ["int num;", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["N", 1, "Var"], ["lc", 3, "Var__DeclRefExpr"], ["j", 14, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["int p_ n;", 1, "DeclStmt"]] 
chiguri_advex 1460488_1483485_chiguri_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["'\\n'", 1, "CharacterLiteral"], ["0", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["fgets", 1, "DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["char [102]", 1, "Type"], ["108", 2, "IntegerLiteral"], ["105", 2, "IntegerLiteral"], ["120", 2, "IntegerLiteral"], ["const char []", 1, "Type"], ["106", 2, "IntegerLiteral"], ["100", 2, "IntegerLiteral"], ["112", 2, "IntegerLiteral"], ["j", 9, "Var__DeclRefExpr"], ["99", 2, "IntegerLiteral"], ["' '", 1, "CharacterLiteral"], ["110", 2, "IntegerLiteral"], ["115", 2, "IntegerLiteral"], ["103", 2, "IntegerLiteral"], ["map", 2, "Var__DeclRefExpr"], ["117", 2, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["'a'", 1, "CharacterLiteral"], ["input", 11, "Var__DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["104", 2, "IntegerLiteral"], ["101", 2, "IntegerLiteral"], ["char", 2, "Type"], ["int (void)", 1, "Type"], ["col", 3, "Var__DeclRefExpr"], ["98", 2, "IntegerLiteral"], ["107", 2, "IntegerLiteral"], ["'\\0'", 2, "CharacterLiteral"], ["122", 2, "IntegerLiteral"], ["114", 2, "IntegerLiteral"], ["116", 2, "IntegerLiteral"], ["119", 2, "IntegerLiteral"], ["118", 2, "IntegerLiteral"], ["102", 3, "IntegerLiteral"], ["109", 2, "IntegerLiteral"], ["113", 2, "IntegerLiteral"], ["main", 1, "Function"], ["111", 2, "IntegerLiteral"], ["97", 2, "IntegerLiteral"], ["int", 4, "Type"], ["char input[102];", 1, "DeclStmt"], ["sscanf", 1, "DeclRefExpr"], ["int col;", 1, "DeclStmt"]] 
chiguri_advex 1460488_1483488_chiguri_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["A", 4, "Var__DeclRefExpr"], ["j", 8, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int T_ A;", 1, "DeclStmt"], ["m", 4, "ParmVar__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["num", 5, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["rotate_check", 2, "Function__DeclRefExpr"], ["int (int)", 1, "Type"], ["int", 13, "Type"], ["break", 1, "BreakStmt"], ["ret_val", 2, "Var__DeclRefExpr"], ["result", 7, "Var__DeclRefExpr"], ["n", 7, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"]] 
chiguri_advex 1460488_1595491_chiguri_advex.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["sup_require_num", 5, "Var__DeclRefExpr"], ["result", 8, "Var__DeclRefExpr"], ["temp", 6, "Var__DeclRefExpr"], ["int temp;", 1, "DeclStmt"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["400", 1, "IntegerLiteral"], ["char", 1, "Type"], ["int", 10, "Type"], ["int sup_num;", 1, "DeclStmt"], ["int i_ j;", 1, "DeclStmt"], ["input", 1, "Var"], ["int result;", 1, "DeclStmt"], ["char [400]", 1, "Type"], ["int col;", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["col", 3, "Var__DeclRefExpr"], ["int num;", 1, "DeclStmt"], ["int sup_require_num;", 1, "DeclStmt"], ["int score;", 1, "DeclStmt"], ["\"%d %d %d\"", 1, "StringLiteral"], ["sup_num", 4, "Var__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["score", 6, "Var__DeclRefExpr"]] 
chiguri_advex 2270488_2449486_chiguri_advex.c [["\"YES\\n\"", 1, "StringLiteral"], ["100", 2, "IntegerLiteral"], ["\"NO\\n\"", 1, "StringLiteral"], ["y", 3, "ParmVar__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["int [100][100]", 1, "Type"], ["result", 7, "Var__DeclRefExpr"], ["check", 2, "Function__DeclRefExpr"], ["int", 17, "Type"], ["data", 5, "Var__DeclRefExpr"], ["N", 5, "Var__DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["j", 10, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["0", 10, "IntegerLiteral"], ["int (void)", 1, "Type"], ["break", 1, "BreakStmt"], ["int num;", 1, "DeclStmt"], ["ret_val", 2, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int result;", 1, "DeclStmt"], ["M", 5, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["\"%d\"", 2, "StringLiteral"], ["x", 3, "ParmVar__DeclRefExpr"], ["num", 3, "Var__DeclRefExpr"], ["k", 9, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["goto LAST", 1, "GotoStmt"], ["printf", 3, "DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"]] 
chiguri_advex 2270488_2453486_chiguri_advex.c [["\"O won\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["'X'", 1, "CharacterLiteral"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 1, "IntegerLiteral"], ["k", 15, "Var__DeclRefExpr"], ["gets", 2, "DeclRefExpr"], ["1", 13, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["j", 21, "Var__DeclRefExpr"], ["i", 24, "Var__DeclRefExpr"], ["int (int *)", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["int test;", 1, "DeclStmt"], ["check", 3, "Function__DeclRefExpr"], ["test", 13, "Var__DeclRefExpr"], ["int", 16, "Type"], ["\"Game has not completed\\n\"", 1, "StringLiteral"], ["int *", 3, "Type"], ["int i_ j_ k;", 1, "DeclStmt"], ["4", 16, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["X", 6, "Var__DeclRefExpr"], ["data", 5, "ParmVar__DeclRefExpr"], ["0", 19, "IntegerLiteral"], ["char buf[6];", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["O", 6, "Var__DeclRefExpr"], ["buf", 6, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["break", 4, "BreakStmt"], ["char", 1, "Type"], ["char [6]", 1, "Type"], ["int O[4][4];", 1, "DeclStmt"], ["6", 1, "IntegerLiteral"], ["int X[4][4];", 1, "DeclStmt"], ["result", 2, "Var__DeclRefExpr"], ["int num;", 1, "DeclStmt"], ["int [4]", 2, "Type"], ["int emp;", 1, "DeclStmt"], ["emp", 4, "Var__DeclRefExpr"], ["int result;", 1, "DeclStmt"]] 
chiguri_advex 2270488_2463486_chiguri_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["duai_Var", 6, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["int rffi_Var;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["int l_ ryji_Var;", 1, "DeclStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int result;", 1, "DeclStmt"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["char [10]", 1, "Type"], ["ret_val", 2, "Var__DeclRefExpr"], ["10", 1, "IntegerLiteral"], ["d", 5, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["int (void)", 1, "Type"], ["char", 1, "Type"], ["ryji_Var", 12, "Var__DeclRefExpr"], ["int A2_ B2;", 1, "DeclStmt"], ["pqyi_Var", 2, "ParmVar__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["palindrome", 3, "Function__DeclRefExpr"], ["main", 1, "Function"], ["double", 2, "Type"], ["int (int)", 1, "Type"], ["freopen", 2, "DeclRefExpr"], ["rffi_Var", 3, "Var__DeclRefExpr"], ["int A_ B;", 1, "DeclStmt"], ["int ryji_Var_ k;", 1, "DeclStmt"], ["\"replace-me.out\"", 1, "StringLiteral"], ["A", 4, "Var__DeclRefExpr"], ["l", 4, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 17, "Type"], ["A2", 3, "Var__DeclRefExpr"], ["B2", 3, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["result", 4, "Var__DeclRefExpr"]] 
chiguri_advex 2974486_5709773144064000_chiguri_advex.c [["scanf", 2, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["int try_num;", 1, "DeclStmt"], ["int", 6, "Type"], ["1", 3, "IntegerLiteral"], ["main", 1, "Function"], ["\"%llf\\n\"", 1, "StringLiteral"], ["temp", 4, "Var__DeclRefExpr"], ["num", 3, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["int num;", 1, "DeclStmt"], ["int (void)", 1, "Type"], ["break", 1, "BreakStmt"], ["long double [100000]", 1, "Type"], ["double temp;", 1, "DeclStmt"], ["100000", 2, "IntegerLiteral"], ["long double", 1, "Type"], ["int i;", 1, "DeclStmt"], ["f", 3, "Var__DeclRefExpr"], ["least", 6, "Var__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["try_num", 5, "Var__DeclRefExpr"], ["max_f", 1, "Var"], ["i", 9, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["double", 6, "Type"], ["cps", 4, "Var__DeclRefExpr"], ["2.0", 2, "FloatingLiteral"], ["double least;", 1, "DeclStmt"], ["int max_f;", 1, "DeclStmt"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["0.0", 1, "FloatingLiteral"], ["f_times", 6, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"]] 
chiguri_advex 2974486_5756407898963968_chiguri_advex.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["4", 5, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["printf", 4, "DeclRefExpr"], ["fc", 4, "Var__DeclRefExpr"], ["int fc_ lc;", 1, "DeclStmt"], ["n", 4, "Var__DeclRefExpr"], ["l", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["16", 4, "IntegerLiteral"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 12, "Type"], ["f", 4, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["int N;", 1, "DeclStmt"], ["\"%d\"", 5, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["int i_ j_ k;", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int [16]", 2, "Type"], ["1", 5, "IntegerLiteral"], ["int (void)", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["break", 3, "BreakStmt"], ["int num;", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["N", 1, "Var"], ["lc", 3, "Var__DeclRefExpr"], ["j", 14, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["int p_ n;", 1, "DeclStmt"]] 
Chuchox.Jaraday 1460488_1483485_Chuchox.Jaraday.c [["' '", 1, "CharacterLiteral"], ["printf", 1, "DeclRefExpr"], ["'0'", 1, "CharacterLiteral"], ["getchar", 2, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["'v'", 2, "CharacterLiteral"], ["'\\n'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'u'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["10", 1, "IntegerLiteral"], ["'s'", 2, "CharacterLiteral"], ["putchar", 3, "DeclRefExpr"], ["'d'", 2, "CharacterLiteral"], ["int (void)", 1, "Type"], ["'h'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["main", 1, "Function"], ["int", 5, "Type"], ["set", 2, "Var__DeclRefExpr"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["int []", 1, "Type"], ["'k'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["c", 9, "Var__DeclRefExpr"], ["'n'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'a'", 3, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["int c;", 1, "DeclStmt"], ["int cases_ i;", 1, "DeclStmt"], ["1", 1, "IntegerLiteral"], ["cases", 5, "Var__DeclRefExpr"]] 
Chuchox.Jaraday 1460488_1483488_Chuchox.Jaraday.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["\"%d\"", 3, "StringLiteral"], ["10", 6, "IntegerLiteral"], ["int [10]", 1, "Type"], ["nenc", 5, "Var__DeclRefExpr"], ["enc", 4, "Var__DeclRefExpr"], ["int", 16, "Type"], ["int k_ enc_ nenc;", 1, "DeclStmt"], ["total", 4, "Var__DeclRefExpr"], ["cases", 3, "Var__DeclRefExpr"], ["min", 3, "Var__DeclRefExpr"], ["num", 6, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["potencia", 5, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["int (void)", 1, "Type"], ["int encontrados[10];", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["max", 5, "Var__DeclRefExpr"], ["cand", 9, "Var__DeclRefExpr"], ["int ndigit_ potencia_ temp;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["ndigit", 4, "Var__DeclRefExpr"], ["encontrados", 3, "Var__DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["temp", 3, "Var__DeclRefExpr"], ["int cases_ min_ max_ num_ cand;", 1, "DeclStmt"], ["int i_ j_ total;", 1, "DeclStmt"]] 
Chuchox.Jaraday 1460488_1595491_Chuchox.Jaraday.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["2", 3, "IntegerLiteral"], ["\"%d\"", 4, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["int", 11, "Type"], ["3", 2, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["int cos_ res_ total;", 1, "DeclStmt"], ["surprice", 8, "Var__DeclRefExpr"], ["main", 1, "Function"], ["1", 4, "IntegerLiteral"], ["int (void)", 1, "Type"], ["googlers", 3, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int cases_ googlers_ surprice_ min_ glog;", 1, "DeclStmt"], ["res", 8, "Var__DeclRefExpr"], ["cases", 3, "Var__DeclRefExpr"], ["total", 9, "Var__DeclRefExpr"], ["min", 7, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["glog", 4, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["cos", 6, "Var__DeclRefExpr"]] 
Chuchox.Jaraday 2270488_2449486_Chuchox.Jaraday.c [["break", 4, "BreakStmt"], ["\"Case #%d: YES\\n\"", 2, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["0", 9, "IntegerLiteral"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["int [100]", 1, "Type"], ["casos", 7, "Var__DeclRefExpr"], ["int", 10, "Type"], ["int pasto[100][100];", 1, "DeclStmt"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["cases", 3, "Var__DeclRefExpr"], ["poder", 9, "Var__DeclRefExpr"], ["continue", 3, "ContinueStmt"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["i", 11, "Var__DeclRefExpr"], ["j", 11, "Var__DeclRefExpr"], ["m", 6, "Var__DeclRefExpr"], ["n", 6, "Var__DeclRefExpr"], ["a", 9, "Var__DeclRefExpr"], ["int cases_ casos_ i_ j_ n_ m;", 1, "DeclStmt"], ["int [100][100]", 1, "Type"], ["int a_ poder;", 1, "DeclStmt"], ["pasto", 6, "Var__DeclRefExpr"]] 
Chuchox.Jaraday 2270488_2453486_Chuchox.Jaraday.c [["\"Case #%d: O won\\n\"", 4, "StringLiteral"], ["4", 18, "IntegerLiteral"], ["ganax", 17, "Var__DeclRefExpr"], ["o", 3, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["j", 20, "Var__DeclRefExpr"], ["i", 38, "Var__DeclRefExpr"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["int ganax_ ganao_ encontrado;", 1, "DeclStmt"], ["t", 4, "Var__DeclRefExpr"], ["int x_ o_ t_ blanco;", 1, "DeclStmt"], ["main", 1, "Function"], ["continue", 5, "ContinueStmt"], ["blanco", 4, "Var__DeclRefExpr"], ["int", 12, "Type"], ["char [4][4]", 1, "Type"], ["ganao", 17, "Var__DeclRefExpr"], ["casos", 15, "Var__DeclRefExpr"], ["'X'", 5, "CharacterLiteral"], ["\"Case #%d: X won\\n\"", 4, "StringLiteral"], ["encontrado", 14, "Var__DeclRefExpr"], ["1", 10, "IntegerLiteral"], ["cases", 3, "Var__DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 2, "StringLiteral"], ["char tablero[4][4];", 1, "DeclStmt"], ["char [4]", 1, "Type"], ["getchar", 3, "DeclRefExpr"], ["int (void)", 1, "Type"], ["tablero", 17, "Var__DeclRefExpr"], ["char", 1, "Type"], ["scanf", 1, "DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["int cases_ casos_ i_ j;", 1, "DeclStmt"], ["0", 14, "IntegerLiteral"], ["'.'", 1, "CharacterLiteral"], ["'O'", 5, "CharacterLiteral"], ["printf", 11, "DeclRefExpr"], ["'T'", 4, "CharacterLiteral"]] 
Chuchox.Jaraday 2270488_2463486_Chuchox.Jaraday.c [["10", 2, "IntegerLiteral"], ["long long i_ total;", 1, "DeclStmt"], ["cadena", 4, "Var__DeclRefExpr"], ["long long cadena[110];", 1, "DeclStmt"], ["long long [110]", 1, "Type"], ["printf", 1, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["sqrt", 2, "DeclRefExpr"], ["n", 5, "ParmVar__DeclRefExpr"], ["110", 1, "IntegerLiteral"], ["a", 4, "Var__DeclRefExpr"], ["int", 3, "Type"], ["main", 1, "Function"], ["scanf", 2, "DeclRefExpr"], ["espalindromo", 4, "Function__DeclRefExpr"], ["long long", 14, "Type"], ["int (long long)", 2, "Type"], ["\"Case #%I64d: %I64d\\n\"", 1, "StringLiteral"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["\"%I64d %I64d\"", 1, "StringLiteral"], ["i", 18, "Var__DeclRefExpr"], ["long long cases_ casos_ i_ j;", 1, "DeclStmt"], ["total", 8, "Var__DeclRefExpr"], ["cases", 3, "Var__DeclRefExpr"], ["casos", 5, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["j", 1, "Var"], ["maximo", 3, "Var__DeclRefExpr"], ["long long a_ b_ minimo_ maximo_ total;", 1, "DeclStmt"], ["\"%I64d\"", 1, "StringLiteral"], ["minimo", 6, "Var__DeclRefExpr"]] 
Chuchox.Jaraday 2974486_5709773144064000_Chuchox.Jaraday.c [["0", 1, "IntegerLiteral"], ["0.0", 3, "FloatingLiteral"], ["2.0", 1, "FloatingLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["totalant", 5, "Var__DeclRefExpr"], ["total", 5, "Var__DeclRefExpr"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["tiempo2", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["casos", 5, "Var__DeclRefExpr"], ["int", 5, "Type"], ["int t_ casos_ i_ j;", 1, "DeclStmt"], ["1", 2, "IntegerLiteral"], ["acumulado", 5, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["i", 1, "Var"], ["break", 1, "BreakStmt"], ["double vel_ tiempo1_ tiempo2_ acumulado_ total_ totalant;", 1, "DeclStmt"], ["j", 1, "Var"], ["vel", 5, "Var__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["double", 9, "Type"], ["t", 3, "Var__DeclRefExpr"], ["f", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["double c_ f_ x;", 1, "DeclStmt"], ["x", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["tiempo1", 3, "Var__DeclRefExpr"]] 
Chuchox.Jaraday 2974486_5756407898963968_Chuchox.Jaraday.c [["0", 9, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["scanf", 5, "DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["c2", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 10, "IntegerLiteral"], ["int cases_ casos_ n_ m_ i_ j_ coincidencias_ ganador;", 1, "DeclStmt"], ["n", 4, "Var__DeclRefExpr"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["casos", 7, "Var__DeclRefExpr"], ["int", 11, "Type"], ["cases", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["coincidencias", 5, "Var__DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["ganador", 3, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["int c1[4][4]_ c2[4][4];", 1, "DeclStmt"], ["m", 3, "Var__DeclRefExpr"], ["c1", 4, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["int (void)", 1, "Type"], ["int [4][4]", 2, "Type"], ["int [4]", 2, "Type"]] 
Chuchox.Jaraday_advex 1460488_1483485_Chuchox.Jaraday_advex.c [["' '", 1, "CharacterLiteral"], ["printf", 1, "DeclRefExpr"], ["'0'", 1, "CharacterLiteral"], ["getchar", 2, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["'v'", 2, "CharacterLiteral"], ["'\\n'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'u'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["10", 1, "IntegerLiteral"], ["'s'", 2, "CharacterLiteral"], ["putchar", 3, "DeclRefExpr"], ["'d'", 2, "CharacterLiteral"], ["int (void)", 1, "Type"], ["'h'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["main", 1, "Function"], ["int", 5, "Type"], ["set", 2, "Var__DeclRefExpr"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["int []", 1, "Type"], ["'k'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["c", 9, "Var__DeclRefExpr"], ["'n'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'a'", 3, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["int c;", 1, "DeclStmt"], ["int cases_ i;", 1, "DeclStmt"], ["1", 1, "IntegerLiteral"], ["cases", 5, "Var__DeclRefExpr"]] 
Chuchox.Jaraday_advex 1460488_1483488_Chuchox.Jaraday_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["num", 5, "Var__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["\"%d\"", 3, "StringLiteral"], ["10", 6, "IntegerLiteral"], ["int [10]", 1, "Type"], ["i", 4, "Var__DeclRefExpr"], ["int encontrados[10];", 1, "DeclStmt"], ["nenc", 5, "Var__DeclRefExpr"], ["enc", 4, "Var__DeclRefExpr"], ["int cases_ min_ max_ cand;", 1, "DeclStmt"], ["int", 16, "Type"], ["1", 4, "IntegerLiteral"], ["int (void)", 1, "Type"], ["max", 5, "Var__DeclRefExpr"], ["cand", 9, "Var__DeclRefExpr"], ["int ndigit_ potencia_ temp;", 1, "DeclStmt"], ["cases", 3, "Var__DeclRefExpr"], ["total", 4, "Var__DeclRefExpr"], ["min", 3, "Var__DeclRefExpr"], ["int k_ enc_ nenc;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["ndigit", 4, "Var__DeclRefExpr"], ["encontrados", 3, "Var__DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["potencia", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["temp", 3, "Var__DeclRefExpr"], ["int j_ total;", 1, "DeclStmt"]] 
Chuchox.Jaraday_advex 1460488_1595491_Chuchox.Jaraday_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["j", 3, "Var__DeclRefExpr"], ["2", 3, "IntegerLiteral"], ["\"%d\"", 4, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["int", 11, "Type"], ["surprice", 8, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["int cos_ res_ total;", 1, "DeclStmt"], ["scanf", 5, "DeclRefExpr"], ["main", 1, "Function"], ["1", 4, "IntegerLiteral"], ["int (void)", 1, "Type"], ["int cases_ googlers_ surprice_ min_ glog;", 1, "DeclStmt"], ["res", 8, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["googlers", 3, "Var__DeclRefExpr"], ["i", 4, "Var__DeclRefExpr"], ["cases", 3, "Var__DeclRefExpr"], ["total", 9, "Var__DeclRefExpr"], ["min", 7, "Var__DeclRefExpr"], ["glog", 4, "Var__DeclRefExpr"], ["cos", 6, "Var__DeclRefExpr"]] 
Chuchox.Jaraday_advex 2270488_2449486_Chuchox.Jaraday_advex.c [["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["break", 4, "BreakStmt"], ["printf", 4, "DeclRefExpr"], ["0", 9, "IntegerLiteral"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["gnri_Var", 7, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["int [100]", 1, "Type"], ["int [100][100]", 1, "Type"], ["pasto", 6, "Var__DeclRefExpr"], ["continue", 4, "ContinueStmt"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int a_ poder;", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["lcji_Var", 6, "Var__DeclRefExpr"], ["\"Case #%d: YES\\n\"", 3, "StringLiteral"], ["int ryji_Var_ ryfi_Var_ nmji_Var_ lcji_Var_ m;", 1, "DeclStmt"], ["ryji_Var", 3, "Var__DeclRefExpr"], ["ryfi_Var", 11, "Var__DeclRefExpr"], ["int pasto[100][100];", 1, "DeclStmt"], ["int", 10, "Type"], ["nmji_Var", 13, "Var__DeclRefExpr"], ["m", 6, "Var__DeclRefExpr"], ["a", 9, "Var__DeclRefExpr"], ["poder", 9, "Var__DeclRefExpr"]] 
Chuchox.Jaraday_advex 2270488_2453486_Chuchox.Jaraday_advex.c [["\"Case #%d: O won\\n\"", 4, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["continue", 5, "ContinueStmt"], ["printf", 11, "DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["omgi_Var", 38, "Var__DeclRefExpr"], ["int", 13, "Type"], ["gymi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["o", 3, "Var__DeclRefExpr"], ["blanco", 4, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["ysxi_Var", 20, "Var__DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 2, "StringLiteral"], ["1", 10, "IntegerLiteral"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["int ganax_ ganao_ encontrado;", 1, "DeclStmt"], ["t", 4, "Var__DeclRefExpr"], ["int x_ o_ t_ blanco;", 1, "DeclStmt"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["deci_Var", 14, "Var__DeclRefExpr"], ["'X'", 5, "CharacterLiteral"], ["0", 15, "IntegerLiteral"], ["int gymi_Var_ omgi_Var_ ysxi_Var;", 1, "DeclStmt"], ["ganax", 17, "Var__DeclRefExpr"], ["ganao", 17, "Var__DeclRefExpr"], ["4", 18, "IntegerLiteral"], ["\"Case #%d: X won\\n\"", 4, "StringLiteral"], ["encontrado", 14, "Var__DeclRefExpr"], ["char tablero[4][4];", 1, "DeclStmt"], ["char [4][4]", 1, "Type"], ["char [4]", 1, "Type"], ["getchar", 3, "DeclRefExpr"], ["tablero", 17, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["char", 1, "Type"], ["scanf", 1, "DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["'.'", 1, "CharacterLiteral"], ["'O'", 5, "CharacterLiteral"]] 
Chuchox.Jaraday_advex 2270488_2463486_Chuchox.Jaraday_advex.c [["10", 2, "IntegerLiteral"], ["cadena", 4, "Var__DeclRefExpr"], ["long long cadena[110];", 1, "DeclStmt"], ["long long [110]", 1, "Type"], ["printf", 1, "DeclRefExpr"], ["sitl_Var", 17, "Var__DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["sqrt", 2, "DeclRefExpr"], ["\"%I64d %I64d\"", 1, "StringLiteral"], ["long", 2, "Type"], ["dtgl_Var", 4, "Var__DeclRefExpr"], ["gibl_Var", 5, "ParmVar__DeclRefExpr"], ["\"Case #%I64d: %I64d\\n\"", 1, "StringLiteral"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["int", 3, "Type"], ["maximo", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["long long", 12, "Type"], ["long long a_ b_ minimo_ maximo_ sect_Var;", 1, "DeclStmt"], ["int (long long)", 2, "Type"], ["long long cases_ j;", 1, "DeclStmt"], ["long long sitl_Var_ sect_Var;", 1, "DeclStmt"], ["110", 1, "IntegerLiteral"], ["a", 4, "Var__DeclRefExpr"], ["cases", 3, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["j", 1, "Var"], ["\"%I64d\"", 1, "StringLiteral"], ["minimo", 6, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["espalindromo", 4, "Function__DeclRefExpr"], ["sect_Var", 8, "Var__DeclRefExpr"]] 
Chuchox.Jaraday_advex 2974486_5709773144064000_Chuchox.Jaraday_advex.c [["0", 1, "IntegerLiteral"], ["0.0", 3, "FloatingLiteral"], ["2.0", 1, "FloatingLiteral"], ["total", 5, "Var__DeclRefExpr"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["tiempo2", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["tiempo1", 3, "Var__DeclRefExpr"], ["vel", 5, "Var__DeclRefExpr"], ["break", 1, "BreakStmt"], ["double vel_ tiempo1_ tiempo2_ acumulado_ total_ totalant;", 1, "DeclStmt"], ["int", 5, "Type"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"r\"", 1, "StringLiteral"], ["totalant", 5, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["acumulado", 5, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["unki_Var", 4, "Var__DeclRefExpr"], ["\"replace-me.out\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["ojdi_Var", 1, "Var"], ["int t_ ojdi_Var_ jzxi_Var;", 1, "DeclStmt"], ["jzxi_Var", 1, "Var"], ["c", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["x", 4, "Var__DeclRefExpr"], ["double c_ f_ x;", 1, "DeclStmt"], ["double", 9, "Type"], ["t", 3, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["f", 3, "Var__DeclRefExpr"]] 
Chuchox.Jaraday_advex 2974486_5756407898963968_Chuchox.Jaraday_advex.c [["0", 9, "IntegerLiteral"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["casos", 6, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["c2", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 10, "IntegerLiteral"], ["int c1[4][4]_ c2[4][4];", 1, "DeclStmt"], ["int", 11, "Type"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["coincidencias", 5, "Var__DeclRefExpr"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int vcmi_Var_ n_ m_ ojzi_Var_ dvci_Var_ coincidencias_ ganador;", 1, "DeclStmt"], ["1", 5, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["int (void)", 1, "Type"], ["int [4]", 2, "Type"], ["dvci_Var", 13, "Var__DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["ganador", 3, "Var__DeclRefExpr"], ["\"replace-me.out\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["n", 4, "Var__DeclRefExpr"], ["c1", 4, "Var__DeclRefExpr"], ["vcmi_Var", 3, "Var__DeclRefExpr"], ["m", 3, "Var__DeclRefExpr"], ["ojzi_Var", 14, "Var__DeclRefExpr"]] 
chuckl0416 1460488_1483485_chuckl0416.c [["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["fclose", 2, "DeclRefExpr"], ["'u'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["10", 1, "IntegerLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["'y'", 2, "CharacterLiteral"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"A-small-attempt1.out\"", 1, "StringLiteral"], ["int i_ L;", 1, "DeclStmt"], ["\"A-small-attempt1.in\"", 1, "StringLiteral"], ["fout", 3, "Var__DeclRefExpr"], ["'j'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["scanf", 1, "DeclRefExpr"], ["FILE", 2, "Type"], ["'n'", 2, "CharacterLiteral"], ["Testcases", 3, "Var__DeclRefExpr"], ["int", 5, "Type"], ["t", 5, "Var__DeclRefExpr"], ["L", 3, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["100000", 1, "IntegerLiteral"], ["FILE *", 2, "Type"], ["break", 26, "BreakStmt"], ["char", 1, "Type"], ["int Testcases_ t;", 1, "DeclStmt"], ["fin", 3, "Var__DeclRefExpr"], ["'w'", 2, "CharacterLiteral"], ["char [100000]", 1, "Type"], ["i", 7, "Var__DeclRefExpr"], ["FILE *fin_ *fout;", 1, "DeclStmt"], ["'a'", 2, "CharacterLiteral"], ["getchar", 1, "DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["'p'", 2, "CharacterLiteral"], ["char Line[100000];", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["Line", 5, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["'b'", 2, "CharacterLiteral"], ["strlen", 1, "DeclRefExpr"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["putchar", 28, "DeclRefExpr"]] 
chuckl0416 1460488_1483488_chuckl0416.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["Answer", 4, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["TestCases", 3, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["continue", 5, "ContinueStmt"], ["fout", 3, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["FILE", 2, "Type"], ["P", 5, "Var__DeclRefExpr"], ["\"C-small-attempt0.out\"", 1, "StringLiteral"], ["Number", 17, "Var__DeclRefExpr"], ["int TestCases_ t_ A_ B_ i_ m_ n_ P10_ P_ Answer_ Number[10];", 1, "DeclStmt"], ["int", 12, "Type"], ["t", 6, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["FILE *fin_ *fout;", 1, "DeclStmt"], ["FILE *", 2, "Type"], ["fin", 3, "Var__DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["m", 16, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["P10", 7, "Var__DeclRefExpr"], ["A", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["B", 5, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["n", 12, "Var__DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["0", 12, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["21", 1, "IntegerLiteral"], ["printf", 2, "DeclRefExpr"], ["\"Case #%d: 0\\n\"", 1, "StringLiteral"]] 
chuckl0416 1460488_1595491_chuckl0416.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["3", 6, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["Highest", 11, "Var__DeclRefExpr"], ["Score", 10, "Var__DeclRefExpr"], ["Answer", 9, "Var__DeclRefExpr"], ["StdScore", 8, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["Surprise", 6, "Var__DeclRefExpr"], ["Number", 5, "Var__DeclRefExpr"], ["int Number_ Surprise_ StdScore_ Answer_ Score[100000]_ Highest;", 1, "DeclStmt"], ["\"%d\"", 2, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["TestCases", 3, "Var__DeclRefExpr"], ["Merge", 2, "Function__DeclRefExpr"], ["100000", 1, "IntegerLiteral"], ["FILE *", 2, "Type"], ["int [n1 + 1]", 1, "Type"], ["continue", 4, "ContinueStmt"], ["k", 8, "Var__DeclRefExpr"], ["n2", 4, "Var__DeclRefExpr"], ["0", 12, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["n1", 5, "Var__DeclRefExpr"], ["q", 8, "ParmVar__DeclRefExpr"], ["int TestCases_ t_ i;", 1, "DeclStmt"], ["r", 8, "ParmVar__DeclRefExpr"], ["int []", 2, "Type"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["p", 9, "ParmVar__DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["int [n2 + 1]", 1, "Type"], ["int i_ j_ k;", 1, "DeclStmt"], ["2", 3, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"B-small-attempt0.out\"", 1, "StringLiteral"], ["void (int *_ int_ int_ int)", 1, "Type"], ["A", 11, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["int", 25, "Type"], ["R", 5, "Var__DeclRefExpr"], ["i", 29, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["int [100000]", 1, "Type"], ["Partition", 4, "Function__DeclRefExpr"], ["void (int *_ int_ int)", 1, "Type"], ["int ()", 1, "Type"], ["FILE *fin_ *fout;", 1, "DeclStmt"], ["fin", 3, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["FILE", 2, "Type"], ["fout", 3, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["L", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"]] 
chuckl0416 2270488_2449486_chuckl0416.c [["\"YES\\n\"", 1, "StringLiteral"], ["x", 50, "Var__DeclRefExpr"], ["TryMin", 6, "Var__DeclRefExpr"], ["TCCount", 5, "Var__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["TryX", 10, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["Rows", 16, "Var__DeclRefExpr"], ["continue", 3, "ContinueStmt"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["1000", 16, "IntegerLiteral"], ["MinY", 14, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["TestCases", 3, "Var__DeclRefExpr"], ["int", 15, "Type"], ["int [120][120]", 1, "Type"], ["Columns", 16, "Var__DeclRefExpr"], ["break", 3, "BreakStmt"], ["TryY", 10, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["Min", 6, "Var__DeclRefExpr"], ["int [120]", 3, "Type"], ["int ()", 2, "Type"], ["0", 20, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["MinX", 14, "Var__DeclRefExpr"], ["Ans", 2, "Function__DeclRefExpr"], ["\"B-small-attempt0.out\"", 1, "StringLiteral"], ["Map", 16, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["120", 4, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["y", 50, "Var__DeclRefExpr"], ["\"NO\\n\"", 1, "StringLiteral"]] 
chuckl0416 2270488_2453486_chuckl0416.c [["\"%s\"", 1, "StringLiteral"], ["0", 38, "IntegerLiteral"], ["int ()", 2, "Type"], ["Ans", 37, "Var__DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["x", 29, "Var__DeclRefExpr"], ["char [10]", 1, "Type"], ["10", 2, "IntegerLiteral"], ["y", 31, "Var__DeclRefExpr"], ["TestCases", 3, "Var__DeclRefExpr"], ["Solve", 2, "Function__DeclRefExpr"], ["char", 1, "Type"], ["\"X won\\n\"", 4, "StringLiteral"], ["int", 9, "Type"], ["TCCount", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["T", 13, "Var__DeclRefExpr"], ["printf", 11, "DeclRefExpr"], ["i", 1, "Var"], ["4", 16, "IntegerLiteral"], ["\"A-small-attempt0.out\"", 1, "StringLiteral"], ["'O'", 4, "CharacterLiteral"], ["1", 5, "IntegerLiteral"], ["\"O won\\n\"", 4, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["Map", 15, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["char [10][10]", 1, "Type"], ["\"Game has not completed\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["'X'", 4, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"]] 
chuckl0416 2270488_2463486_chuckl0416.c [[";", 2, "NullStmt"], ["0", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"C-small-attempt0.out\"", 1, "StringLiteral"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["S", 6, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["9", 2, "IntegerLiteral"], ["B", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["1200", 2, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["A", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["TCCount", 5, "Var__DeclRefExpr"], ["int", 8, "Type"], ["TestCases", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["E", 5, "Var__DeclRefExpr"], ["Ans", 3, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["1", 3, "IntegerLiteral"], ["10", 1, "IntegerLiteral"], ["4", 2, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["484", 2, "IntegerLiteral"]] 
chuckl0416 2974486_5709773144064000_chuckl0416.c [["\"%.7lf\\n\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["0", 2, "IntegerLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"B-small-attempt0.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["C", 5, "Var__DeclRefExpr"], ["F", 5, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["X", 5, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["TC", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["double", 9, "Type"], ["int", 3, "Type"], ["i", 1, "Var"], ["x", 1, "Var"], ["y", 1, "Var"], ["\"w\"", 1, "StringLiteral"], ["Time", 5, "Var__DeclRefExpr"], ["Produce", 9, "Var__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["Ans", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"]] 
chuckl0416 2974486_5756407898963968_chuckl0416.c [["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["i", 9, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["0", 7, "IntegerLiteral"], ["puts", 2, "DeclRefExpr"], ["FAns", 6, "Var__DeclRefExpr"], ["Ans", 5, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["y", 5, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["int", 11, "Type"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["Row", 3, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["Check", 2, "Function__DeclRefExpr"], ["TC", 3, "Var__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["x", 9, "Var__DeclRefExpr"], ["int [10][10]", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["Map", 3, "Var__DeclRefExpr"], ["int ()", 2, "Type"], ["1", 4, "IntegerLiteral"], ["int [20]", 1, "Type"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["\"A-small-attempt0.out\"", 1, "StringLiteral"], ["4", 3, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"]] 
chuckl0416_advex 1460488_1483485_chuckl0416_advex.c [["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["fclose", 1, "DeclRefExpr"], ["'u'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["10", 1, "IntegerLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["char [100000]", 1, "Type"], ["int Testcases_ t;", 1, "DeclStmt"], ["t", 5, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["'n'", 2, "CharacterLiteral"], ["Testcases", 3, "Var__DeclRefExpr"], ["int", 5, "Type"], ["'h'", 2, "CharacterLiteral"], ["\"A-small-attempt1.out\"", 1, "StringLiteral"], ["int i_ L;", 1, "DeclStmt"], ["fout", 3, "Var__DeclRefExpr"], ["100000", 1, "IntegerLiteral"], ["FILE *", 1, "Type"], ["'j'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["FILE", 1, "Type"], ["scanf", 1, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["L", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["'y'", 2, "CharacterLiteral"], ["i", 7, "Var__DeclRefExpr"], ["FILE *fout;", 1, "DeclStmt"], ["'a'", 2, "CharacterLiteral"], ["getchar", 1, "DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["'p'", 2, "CharacterLiteral"], ["char Line[100000];", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["Line", 5, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["'b'", 2, "CharacterLiteral"], ["strlen", 1, "DeclRefExpr"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["putchar", 28, "DeclRefExpr"], ["char", 1, "Type"], ["break", 26, "BreakStmt"]] 
chuckl0416_advex 1460488_1483488_chuckl0416_advex.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["Answer", 4, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["TestCases", 3, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["continue", 5, "ContinueStmt"], ["fout", 3, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["FILE", 2, "Type"], ["P", 5, "Var__DeclRefExpr"], ["\"C-small-attempt0.out\"", 1, "StringLiteral"], ["Number", 17, "Var__DeclRefExpr"], ["int TestCases_ t_ A_ B_ i_ m_ n_ P10_ P_ Answer_ Number[10];", 1, "DeclStmt"], ["int", 12, "Type"], ["t", 6, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["FILE *fin_ *fout;", 1, "DeclStmt"], ["FILE *", 2, "Type"], ["fin", 3, "Var__DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["m", 16, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["P10", 7, "Var__DeclRefExpr"], ["A", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["B", 5, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["n", 12, "Var__DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["0", 12, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["21", 1, "IntegerLiteral"], ["printf", 2, "DeclRefExpr"], ["\"Case #%d: 0\\n\"", 1, "StringLiteral"]] 
chuckl0416_advex 1460488_1595491_chuckl0416_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["3", 6, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["Highest", 11, "Var__DeclRefExpr"], ["Score", 10, "Var__DeclRefExpr"], ["Answer", 9, "Var__DeclRefExpr"], ["StdScore", 8, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["Surprise", 6, "Var__DeclRefExpr"], ["Number", 5, "Var__DeclRefExpr"], ["int Number_ Surprise_ StdScore_ Answer_ Score[100000]_ Highest;", 1, "DeclStmt"], ["\"%d\"", 2, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["TestCases", 3, "Var__DeclRefExpr"], ["Merge", 2, "Function__DeclRefExpr"], ["100000", 1, "IntegerLiteral"], ["FILE *", 2, "Type"], ["int [n1 + 1]", 1, "Type"], ["continue", 4, "ContinueStmt"], ["k", 8, "Var__DeclRefExpr"], ["n2", 4, "Var__DeclRefExpr"], ["0", 12, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["n1", 5, "Var__DeclRefExpr"], ["q", 8, "ParmVar__DeclRefExpr"], ["int TestCases_ t_ i;", 1, "DeclStmt"], ["r", 8, "ParmVar__DeclRefExpr"], ["int []", 2, "Type"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["p", 9, "ParmVar__DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["int [n2 + 1]", 1, "Type"], ["int i_ j_ k;", 1, "DeclStmt"], ["2", 3, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"B-small-attempt0.out\"", 1, "StringLiteral"], ["void (int *_ int_ int_ int)", 1, "Type"], ["A", 11, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["int", 25, "Type"], ["R", 5, "Var__DeclRefExpr"], ["i", 29, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["int [100000]", 1, "Type"], ["Partition", 4, "Function__DeclRefExpr"], ["void (int *_ int_ int)", 1, "Type"], ["int ()", 1, "Type"], ["FILE *fin_ *fout;", 1, "DeclStmt"], ["fin", 3, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["FILE", 2, "Type"], ["fout", 3, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["L", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"]] 
chuckl0416_advex 2270488_2449486_chuckl0416_advex.c [["\"NO\\n\"", 1, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"B-small-attempt0.out\"", 1, "StringLiteral"], ["1", 3, "IntegerLiteral"], ["\"YES\\n\"", 1, "StringLiteral"], ["0", 20, "IntegerLiteral"], ["int ()", 2, "Type"], ["y", 50, "Var__DeclRefExpr"], ["int [120]", 3, "Type"], ["Min", 6, "Var__DeclRefExpr"], ["TryY", 10, "Var__DeclRefExpr"], ["int [120][120]", 1, "Type"], ["int", 15, "Type"], ["break", 3, "BreakStmt"], ["Map", 16, "Var__DeclRefExpr"], ["TestCases", 3, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["MinY", 14, "Var__DeclRefExpr"], ["1000", 16, "IntegerLiteral"], ["Ans", 2, "Function__DeclRefExpr"], ["120", 4, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["continue", 3, "ContinueStmt"], ["Rows", 16, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["Columns", 16, "Var__DeclRefExpr"], ["TryX", 10, "Var__DeclRefExpr"], ["MinX", 14, "Var__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["TCCount", 5, "Var__DeclRefExpr"], ["TryMin", 6, "Var__DeclRefExpr"], ["x", 50, "Var__DeclRefExpr"]] 
chuckl0416_advex 2270488_2453486_chuckl0416_advex.c [["\"Case #%d: \"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["\"Game has not completed\\n\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["scanf", 2, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"O won\\n\"", 4, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["'O'", 4, "CharacterLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["'X'", 4, "CharacterLiteral"], ["\"%s\"", 1, "StringLiteral"], ["\"A-small-attempt0.out\"", 1, "StringLiteral"], ["4", 16, "IntegerLiteral"], ["char [10][10]", 1, "Type"], ["i", 1, "Var"], ["printf", 11, "DeclRefExpr"], ["'T'", 4, "CharacterLiteral"], ["TCCount", 5, "Var__DeclRefExpr"], ["int", 9, "Type"], ["\"X won\\n\"", 4, "StringLiteral"], ["char", 1, "Type"], ["Map", 15, "Var__DeclRefExpr"], ["TestCases", 3, "Var__DeclRefExpr"], ["y", 31, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["char [10]", 1, "Type"], ["x", 29, "Var__DeclRefExpr"], ["T", 13, "Var__DeclRefExpr"], ["Ans", 37, "Var__DeclRefExpr"], ["Solve", 2, "Function__DeclRefExpr"], ["int ()", 2, "Type"], ["0", 38, "IntegerLiteral"]] 
chuckl0416_advex 2270488_2463486_chuckl0416_advex.c [[";", 2, "NullStmt"], ["scanf", 2, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"C-small-attempt0.out\"", 1, "StringLiteral"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["S", 6, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["9", 2, "IntegerLiteral"], ["B", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["1200", 2, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["A", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["TCCount", 5, "Var__DeclRefExpr"], ["int", 9, "Type"], ["TestCases", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["E", 5, "Var__DeclRefExpr"], ["Ans", 3, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["1", 3, "IntegerLiteral"], ["10", 1, "IntegerLiteral"], ["4", 2, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["484", 2, "IntegerLiteral"]] 
chuckl0416_advex 2974486_5709773144064000_chuckl0416_advex.c [["\"%.7lf\\n\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["0", 2, "IntegerLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"B-small-attempt0.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["C", 5, "Var__DeclRefExpr"], ["F", 5, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["X", 5, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["TC", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["double", 9, "Type"], ["int", 3, "Type"], ["i", 1, "Var"], ["x", 1, "Var"], ["y", 1, "Var"], ["\"w\"", 1, "StringLiteral"], ["Time", 5, "Var__DeclRefExpr"], ["Produce", 9, "Var__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["Ans", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"]] 
chuckl0416_advex 2974486_5756407898963968_chuckl0416_advex.c [["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["4", 3, "IntegerLiteral"], ["\"A-small-attempt0.out\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["16", 1, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["int ()", 2, "Type"], ["Map", 3, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["int [10][10]", 1, "Type"], ["printf", 2, "DeclRefExpr"], ["TC", 3, "Var__DeclRefExpr"], ["Check", 2, "Function__DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["Row", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["int [10]", 1, "Type"], ["memset", 1, "DeclRefExpr"], ["FAns", 6, "Var__DeclRefExpr"], ["puts", 2, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["int [20]", 1, "Type"], ["10", 2, "IntegerLiteral"], ["y", 5, "Var__DeclRefExpr"], ["T", 5, "Var__DeclRefExpr"], ["Ans", 5, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["i", 9, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["x", 9, "Var__DeclRefExpr"]] 
Citachi 1460488_1483485_Citachi.c [["' '", 1, "CharacterLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"A-small-attempt1.in\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["f2", 4, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["FILE *f1_ *f2;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["'k'", 2, "CharacterLiteral"], ["f1", 4, "Var__DeclRefExpr"], ["j", 1, "Var"], ["'b'", 2, "CharacterLiteral"], ["fclose", 2, "DeclRefExpr"], ["'u'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["c", 2, "Var__DeclRefExpr"], ["'n'", 2, "CharacterLiteral"], ["26", 2, "IntegerLiteral"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["char [26]", 1, "Type"], ["main", 1, "Function"], ["fscanf", 1, "DeclRefExpr"], ["int", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["char", 6, "Type"], ["'m'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["'d'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["FILE", 2, "Type"], ["'j'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["cs", 5, "Var__DeclRefExpr"], ["'h'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'a'", 2, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["ch", 5, "Var__DeclRefExpr"]] 
Citachi 1460488_1483488_Citachi.c [["10", 4, "IntegerLiteral"], ["\"output.txt\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"C-small-attempt2.in\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["f1", 5, "Var__DeclRefExpr"], ["FILE *f1_ *f2;", 1, "DeclStmt"], ["fclose", 2, "DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["a", 7, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["unsigned int", 11, "Type"], ["n", 4, "Var__DeclRefExpr"], ["int", 1, "Type"], ["count", 4, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["temp", 5, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["fscanf", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["temp1", 7, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["tdigit", 4, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["digits", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["fprintf", 1, "DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["f2", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"]] 
Citachi 1460488_1595491_Citachi.c [["fprintf", 1, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["10", 1, "IntegerLiteral"], ["2", 8, "IntegerLiteral"], ["N", 5, "Var__DeclRefExpr"], ["count", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["f2", 3, "Var__DeclRefExpr"], ["p", 8, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["i", 38, "Var__DeclRefExpr"], ["3", 6, "IntegerLiteral"], ["b", 21, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["r", 1, "Var"], ["abs", 2, "DeclRefExpr"], ["main", 1, "Function"], ["temp", 1, "Var"], ["int [3]", 1, "Type"], ["FILE *", 2, "Type"], ["fscanf", 3, "DeclRefExpr"], ["int", 14, "Type"], ["a", 11, "Var__DeclRefExpr"], ["int [200]", 1, "Type"], ["200", 2, "IntegerLiteral"], ["0", 24, "IntegerLiteral"], ["int [200][3]", 1, "Type"], ["m", 4, "Var__DeclRefExpr"], ["q", 1, "Var"], ["S", 7, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["1", 11, "IntegerLiteral"], ["j", 13, "Var__DeclRefExpr"], ["f1", 5, "Var__DeclRefExpr"], ["FILE *f1_ *f2;", 1, "DeclStmt"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["FILE", 2, "Type"], ["break", 4, "BreakStmt"], ["\"output.txt\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"%d %d %d\"", 1, "StringLiteral"]] 
Citachi 2270488_2449486_Citachi.c [["\"pause\"", 1, "StringLiteral"], ["system", 1, "DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["i", 35, "Var__DeclRefExpr"], ["FILE *fp_in_ *fp_out;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["j", 35, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["N", 9, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["fopen", 2, "DeclRefExpr"], ["fp_out", 5, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["int ()", 1, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["continue", 2, "ContinueStmt"], ["fscanf", 3, "DeclRefExpr"], ["int", 14, "Type"], ["fp_in", 6, "Var__DeclRefExpr"], ["a", 19, "Var__DeclRefExpr"], ["c", 6, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["n", 11, "Var__DeclRefExpr"], ["flag", 4, "Var__DeclRefExpr"], ["int [10][10]", 1, "Type"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["0", 22, "IntegerLiteral"], ["\"B-small-attempt1.in\"", 1, "StringLiteral"], ["M", 9, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["fprintf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["abs", 4, "DeclRefExpr"], ["\"output.txt\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"]] 
Citachi 2270488_2453486_Citachi.c [["\"pause\"", 1, "StringLiteral"], ["system", 1, "DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["'.'", 1, "CharacterLiteral"], ["continue", 6, "ContinueStmt"], ["\"Case #%d: O won\\n\"", 4, "StringLiteral"], ["\"Case #%d: X won\\n\"", 4, "StringLiteral"], ["fprintf", 10, "DeclRefExpr"], ["c", 14, "Var__DeclRefExpr"], ["flagd_o", 7, "Var__DeclRefExpr"], ["flag_x", 9, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 26, "Var__DeclRefExpr"], ["FILE *fp_in_ *fp_out;", 1, "DeclStmt"], ["char t[4][4];", 1, "DeclStmt"], ["fp_out", 13, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["flagd_x", 7, "Var__DeclRefExpr"], ["char [4][4]", 1, "Type"], ["i", 30, "Var__DeclRefExpr"], ["flag_o", 9, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 10, "Type"], ["fp_in", 5, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["flag", 4, "Var__DeclRefExpr"], ["0", 19, "IntegerLiteral"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["t", 19, "Var__DeclRefExpr"], ["char [4]", 1, "Type"], ["4", 11, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["\"A-small-attempt1(1).in\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["break", 4, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 11, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["'X'", 4, "CharacterLiteral"], ["'T'", 8, "CharacterLiteral"], ["'O'", 4, "CharacterLiteral"]] 
Citachi 2270488_2463486_Citachi.c [["t1", 4, "Var__DeclRefExpr"], ["temp", 3, "Var__DeclRefExpr"], ["n", 6, "ParmVar__DeclRefExpr"], ["\"pause\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["\"C-small-attempt0(1).in\"", 1, "StringLiteral"], ["fclose", 2, "DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["is_palindrome", 5, "Function__DeclRefExpr"], ["\"output.txt\"", 1, "StringLiteral"], ["i", 8, "Var__DeclRefExpr"], ["FILE *fp_in_ *fp_out;", 1, "DeclStmt"], ["fp_out", 4, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["T", 3, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["int ()", 1, "Type"], ["", 1, "ParmVar"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["t", 11, "Var__DeclRefExpr"], ["120", 1, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["int", 16, "Type"], ["fscanf", 2, "DeclRefExpr"], ["sqrt", 1, "DeclRefExpr"], ["system", 1, "DeclRefExpr"], ["fp_in", 5, "Var__DeclRefExpr"], ["count", 5, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["int (int)", 2, "Type"], ["double", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"]] 
Citachi 2974486_5709773144064000_Citachi.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %f\\n\"", 1, "StringLiteral"], ["fprintf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["\"Case #%d: %f\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["prev_time", 5, "Var__DeclRefExpr"], ["float", 9, "Type"], ["float time_ x_bak_ x;", 1, "DeclStmt"], ["x", 7, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["FILE *fp1_ *fp2;", 1, "DeclStmt"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["fp1", 5, "Var__DeclRefExpr"], ["float f_ time_tot_ prev_time;", 1, "DeclStmt"], ["main", 1, "Function"], ["time", 11, "Var__DeclRefExpr"], ["float C_ F_ X;", 1, "DeclStmt"], ["fopen", 2, "DeclRefExpr"], ["x_bak", 2, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 4, "Type"], ["time_tot", 7, "Var__DeclRefExpr"], ["t", 7, "Var__DeclRefExpr"], ["F", 5, "Var__DeclRefExpr"], ["C", 8, "Var__DeclRefExpr"], ["f", 10, "Var__DeclRefExpr"], ["int brk_ t_ T;", 1, "DeclStmt"], ["brk", 4, "Var__DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["\"%f %f %f\"", 1, "StringLiteral"], ["FILE *", 2, "Type"], ["fp2", 5, "Var__DeclRefExpr"], ["X", 8, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"cookie_out.txt\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["0.0", 1, "FloatingLiteral"], ["2.0", 1, "FloatingLiteral"]] 
Citachi 2974486_5756407898963968_Citachi.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["\"Case #%d: Volunteer cheated!\"", 1, "StringLiteral"], ["\"Case #%d: Bad magician!\"", 1, "StringLiteral"], ["\"Case #%d: %d\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["fp2", 9, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["FILE", 2, "Type"], ["b", 6, "Var__DeclRefExpr"], ["i", 20, "Var__DeclRefExpr"], ["4", 8, "IntegerLiteral"], ["FILE *fp1_ *fp2;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int [4]", 2, "Type"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["int [4][4]", 2, "Type"], ["1", 10, "IntegerLiteral"], ["fprintf", 6, "DeclRefExpr"], ["fscanf", 5, "DeclRefExpr"], ["int", 11, "Type"], ["a", 7, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"A-small-attempt2.in\"", 1, "StringLiteral"], ["\"%d\"", 3, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["\"magic_out.txt\"", 1, "StringLiteral"], ["y", 4, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["t", 11, "Var__DeclRefExpr"], ["int r1_ r2_ i_ j_ count_ y_ t_ T;", 1, "DeclStmt"], ["r2", 3, "Var__DeclRefExpr"], ["r1", 4, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["fp1", 8, "Var__DeclRefExpr"], ["count", 7, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["\"%d %d %d %d\"", 2, "StringLiteral"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int a[4][4]_ b[4][4];", 1, "DeclStmt"], ["3", 2, "IntegerLiteral"]] 
Citachi_advex 1460488_1483485_Citachi_advex.c [["' '", 1, "CharacterLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"A-small-attempt1.in\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["ldoF_Var", 4, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["FILE *zglF_Var_ *ldoF_Var;", 1, "DeclStmt"], ["ch", 5, "Var__DeclRefExpr"], ["'q'", 2, "CharacterLiteral"], ["zglF_Var", 4, "Var__DeclRefExpr"], ["'a'", 2, "CharacterLiteral"], ["cs", 5, "Var__DeclRefExpr"], ["'h'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["26", 2, "IntegerLiteral"], ["0", 3, "IntegerLiteral"], ["\"output.txt\"", 1, "StringLiteral"], ["char", 6, "Type"], ["ezhc_Var", 2, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["vabc_Var", 4, "Var__DeclRefExpr"], ["fscanf", 1, "DeclRefExpr"], ["int", 2, "Type"], ["'r'", 2, "CharacterLiteral"], ["main", 1, "Function"], ["char [26]", 1, "Type"], ["td_FILEF", 1, "Typedef"], ["td_FILE", 1, "Typedef"], ["'b'", 2, "CharacterLiteral"], ["fclose", 2, "DeclRefExpr"], ["'u'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["td_F", 1, "Typedef"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["ekpc_Var", 3, "Var__DeclRefExpr"], ["'n'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["td_FI", 1, "Typedef"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["secc_Var", 1, "Var"], ["'k'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["FILE", 7, "Type"], ["td_FIL", 1, "Typedef"], ["'j'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["'d'", 2, "CharacterLiteral"]] 
Citachi_advex 1460488_1483488_Citachi_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["unsigned int iebu_Var;", 1, "DeclStmt"], ["10", 4, "IntegerLiteral"], ["\"output.txt\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["kwsF_Var", 5, "Var__DeclRefExpr"], ["ceoF_Var", 4, "Var__DeclRefExpr"], ["FILE *kwsF_Var_ *ceoF_Var;", 1, "DeclStmt"], ["gvhu_Var", 7, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["fclose", 2, "DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["int", 2, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["wluu_Var", 4, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["unsigned int", 11, "Type"], ["\"C-small-attempt2.in\"", 1, "StringLiteral"], ["ieru_Var", 5, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["dtmu_Var", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["temp1", 7, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["tdigit", 4, "Var__DeclRefExpr"], ["iebu_Var", 4, "Var__DeclRefExpr"], ["rpku_Var", 4, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["digits", 5, "Var__DeclRefExpr"], ["ysju_Var", 5, "Var__DeclRefExpr"], ["fprintf", 1, "DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["kbyu_Var", 4, "Var__DeclRefExpr"]] 
Citachi_advex 1460488_1595491_Citachi_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["10", 1, "IntegerLiteral"], ["2", 9, "IntegerLiteral"], ["p", 8, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["ysji_Var", 42, "Var__DeclRefExpr"], ["N", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["200", 2, "IntegerLiteral"], ["fhoi_Var", 12, "Var__DeclRefExpr"], ["r", 1, "Var"], ["gnxi_Var", 3, "Var__DeclRefExpr"], ["cdci_Var", 24, "Var__DeclRefExpr"], ["abs", 2, "DeclRefExpr"], ["main", 1, "Function"], ["ahlF_Var", 3, "Var__DeclRefExpr"], ["int [3]", 1, "Type"], ["FILE *", 2, "Type"], ["vyxi_Var", 16, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 15, "Type"], ["ret_val", 2, "Var__DeclRefExpr"], ["3", 7, "IntegerLiteral"], ["0", 25, "IntegerLiteral"], ["irmi_Var", 6, "Var__DeclRefExpr"], ["suii_Var", 1, "Var"], ["\"%d %d %d\"", 1, "StringLiteral"], ["int [200][3]", 1, "Type"], ["m", 4, "Var__DeclRefExpr"], ["q", 1, "Var"], ["S", 7, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["1", 12, "IntegerLiteral"], ["int [200]", 1, "Type"], ["FILE *znlF_Var_ *ahlF_Var;", 1, "DeclStmt"], ["znlF_Var", 5, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["break", 5, "BreakStmt"], ["\"output.txt\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"]] 
Citachi_advex 2270488_2449486_Citachi_advex.c [["\"pause\"", 1, "StringLiteral"], ["system", 1, "DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["i", 36, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["rffF_Var", 5, "Var__DeclRefExpr"], ["N", 9, "Var__DeclRefExpr"], ["dtgF_Var", 6, "Var__DeclRefExpr"], ["wlyi_Var", 3, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["fopen", 2, "DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["continue", 2, "ContinueStmt"], ["FILE", 2, "Type"], ["FILE *dtgF_Var_ *rffF_Var;", 1, "DeclStmt"], ["zjfi_Var", 11, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int", 14, "Type"], ["fscanf", 3, "DeclRefExpr"], ["a", 19, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["j", 36, "Var__DeclRefExpr"], ["flag", 4, "Var__DeclRefExpr"], ["int [10][10]", 1, "Type"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["0", 22, "IntegerLiteral"], ["\"B-small-attempt1.in\"", 1, "StringLiteral"], ["M", 9, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["qnhi_Var", 5, "Var__DeclRefExpr"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["fprintf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["abs", 4, "DeclRefExpr"], ["\"output.txt\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"]] 
Citachi_advex 2270488_2453486_Citachi_advex.c [["system", 1, "DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["'.'", 1, "CharacterLiteral"], ["continue", 7, "ContinueStmt"], ["\"Case #%d: O won\\n\"", 4, "StringLiteral"], ["\"Case #%d: X won\\n\"", 4, "StringLiteral"], ["fprintf", 10, "DeclRefExpr"], ["'O'", 4, "CharacterLiteral"], ["'T'", 8, "CharacterLiteral"], ["\"%s\"", 1, "StringLiteral"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 15, "IntegerLiteral"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["esdi_Var", 13, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["'X'", 4, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["fscanf", 2, "DeclRefExpr"], ["int", 10, "Type"], ["main", 1, "Function"], ["td_FILEFI", 1, "Typedef"], ["ojdi_Var", 30, "Var__DeclRefExpr"], ["FILE *dyaF_Var_ *fp_out;", 1, "DeclStmt"], ["td_FILEFIL", 1, "Typedef"], ["4", 11, "IntegerLiteral"], ["td_FILEFILEFIL", 1, "Typedef"], ["break", 4, "BreakStmt"], ["char", 1, "Type"], ["\"output.txt\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["\"pause\"", 1, "StringLiteral"], ["td_FILEFILEFI", 1, "Typedef"], ["flagd_x", 7, "Var__DeclRefExpr"], ["char [4][4]", 1, "Type"], ["FILE", 11, "Type"], ["td_FIL", 1, "Typedef"], ["flag_o", 10, "Var__DeclRefExpr"], ["char hgec_Var[4][4];", 1, "DeclStmt"], ["td_FILE", 1, "Typedef"], ["td_FILEFILE", 1, "Typedef"], ["td_FILEFILEF", 1, "Typedef"], ["0", 20, "IntegerLiteral"], ["fp_out", 13, "Var__DeclRefExpr"], ["dyaF_Var", 5, "Var__DeclRefExpr"], ["svzi_Var", 26, "Var__DeclRefExpr"], ["flag_x", 11, "Var__DeclRefExpr"], ["flagd_o", 8, "Var__DeclRefExpr"], ["td_FILEF", 1, "Typedef"], ["flag", 4, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["hgec_Var", 19, "Var__DeclRefExpr"], ["char [4]", 1, "Type"], ["fopen", 2, "DeclRefExpr"], ["\"A-small-attempt1(1).in\"", 1, "StringLiteral"], ["sjbi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"]] 
Citachi_advex 2270488_2463486_Citachi_advex.c [["ret_val", 4, "Var__DeclRefExpr"], ["t1", 4, "Var__DeclRefExpr"], ["temp", 3, "Var__DeclRefExpr"], ["n", 6, "ParmVar__DeclRefExpr"], ["\"pause\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["\"C-small-attempt0(1).in\"", 1, "StringLiteral"], ["fclose", 2, "DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["is_palindrome", 5, "Function__DeclRefExpr"], ["\"output.txt\"", 1, "StringLiteral"], ["fp_out", 4, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["FILE *fp_in_ *fp_out;", 1, "DeclStmt"], ["i", 7, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["int ()", 1, "Type"], ["", 1, "ParmVar"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["t", 11, "Var__DeclRefExpr"], ["120", 1, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["qkki_Var", 3, "Var__DeclRefExpr"], ["int", 18, "Type"], ["fscanf", 2, "DeclRefExpr"], ["sqrt", 1, "DeclRefExpr"], ["system", 1, "DeclRefExpr"], ["fp_in", 5, "Var__DeclRefExpr"], ["count", 5, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["int (int)", 2, "Type"], ["double", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"]] 
Citachi_advex 2974486_5709773144064000_Citachi_advex.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %f\\n\"", 1, "StringLiteral"], ["fprintf", 2, "DeclRefExpr"], ["2.0", 1, "FloatingLiteral"], ["0.0", 1, "FloatingLiteral"], ["\"%f %f %f\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["main", 1, "Function"], ["td_FI", 1, "Typedef"], ["\"cookie_out.txt\"", 1, "StringLiteral"], ["td_f C_ F_ X;", 1, "DeclStmt"], ["x_bak", 2, "Var__DeclRefExpr"], ["break", 1, "BreakStmt"], ["int brk_ ceti_Var_ duai_Var;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["td_FILEF", 1, "Typedef"], ["td_FILE", 1, "Typedef"], ["brk", 4, "Var__DeclRefExpr"], ["float", 1, "Type"], ["prev_time", 5, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 5, "Type"], ["\"Case #%d: %f\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["td_f", 10, "Typedef"], ["td_F", 1, "Typedef"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["td_FILEFIL", 1, "Typedef"], ["td_FIL", 1, "Typedef"], ["FILE", 9, "Type"], ["X", 8, "Var__DeclRefExpr"], ["FILE *fp1_ *fp2;", 1, "DeclStmt"], ["td_FILEFI", 1, "Typedef"], ["C", 8, "Var__DeclRefExpr"], ["time_tot", 7, "Var__DeclRefExpr"], ["F", 5, "Var__DeclRefExpr"], ["td_f time_ x_bak_ x;", 1, "DeclStmt"], ["x", 7, "Var__DeclRefExpr"], ["time", 11, "Var__DeclRefExpr"], ["fp1", 5, "Var__DeclRefExpr"], ["td_f f_ time_tot_ prev_time;", 1, "DeclStmt"], ["ceti_Var", 7, "Var__DeclRefExpr"], ["f", 10, "Var__DeclRefExpr"], ["duai_Var", 4, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["fp2", 5, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"]] 
Citachi_advex 2974486_5756407898963968_Citachi_advex.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["\"Case #%d: Volunteer cheated!\"", 1, "StringLiteral"], ["\"Case #%d: Bad magician!\"", 1, "StringLiteral"], ["\"Case #%d: %d\"", 1, "StringLiteral"], ["fp2", 9, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["FILE", 2, "Type"], ["int emqi_Var[4][4]_ jzxi_Var[4][4];", 1, "DeclStmt"], ["jzxi_Var", 6, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["fp1", 8, "Var__DeclRefExpr"], ["4", 8, "IntegerLiteral"], ["FILE *fp1_ *fp2;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int [4]", 2, "Type"], ["int ()", 1, "Type"], ["int [4][4]", 2, "Type"], ["1", 10, "IntegerLiteral"], ["main", 1, "Function"], ["emqi_Var", 7, "Var__DeclRefExpr"], ["fscanf", 5, "DeclRefExpr"], ["int", 12, "Type"], ["0", 8, "IntegerLiteral"], ["fopen", 2, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"A-small-attempt2.in\"", 1, "StringLiteral"], ["\"%d\"", 3, "StringLiteral"], ["gbmi_Var", 20, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"magic_out.txt\"", 1, "StringLiteral"], ["int r1_ r2_ gbmi_Var_ ddfi_Var_ y_ opvi_Var_ zhzi_Var;", 1, "DeclStmt"], ["y", 4, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["zhzi_Var", 4, "Var__DeclRefExpr"], ["r1", 4, "Var__DeclRefExpr"], ["r2", 3, "Var__DeclRefExpr"], ["ddfi_Var", 7, "Var__DeclRefExpr"], ["opvi_Var", 11, "Var__DeclRefExpr"], ["\"%d %d %d %d\"", 2, "StringLiteral"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["fprintf", 6, "DeclRefExpr"], ["rffi_Var", 4, "Var__DeclRefExpr"]] 
cloudzfy 1460488_1483485_cloudzfy.c [["'a'", 2, "CharacterLiteral"], ["continue", 1, "ContinueStmt"], ["getchar", 1, "DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int t_ T_ i;", 1, "DeclStmt"], ["' '", 1, "CharacterLiteral"], ["\"A-small-attempt0.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["23", 2, "IntegerLiteral"], ["21", 2, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["11", 2, "IntegerLiteral"], ["14", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["4", 2, "IntegerLiteral"], ["str", 7, "Var__DeclRefExpr"], ["20", 2, "IntegerLiteral"], ["int [26]", 1, "Type"], ["int", 5, "Type"], ["x", 2, "Var__DeclRefExpr"], ["8", 2, "IntegerLiteral"], ["26", 1, "IntegerLiteral"], ["6", 2, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["5", 2, "IntegerLiteral"], ["17", 2, "IntegerLiteral"], ["24", 2, "IntegerLiteral"], ["7", 2, "IntegerLiteral"], ["18", 2, "IntegerLiteral"], ["12", 2, "IntegerLiteral"], ["gets", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["int ()", 1, "Type"], ["22", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["25", 2, "IntegerLiteral"], ["200", 1, "IntegerLiteral"], ["19", 2, "IntegerLiteral"], ["16", 2, "IntegerLiteral"], ["main", 1, "Function"], ["13", 2, "IntegerLiteral"], ["9", 2, "IntegerLiteral"], ["15", 2, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["char [200]", 1, "Type"], ["char", 1, "Type"]] 
cloudzfy 1460488_1483488_cloudzfy.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["num", 4, "Var__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"C-small-attempt0.out\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["result", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["tmp2", 8, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"w\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["int", 14, "Type"], ["int ()", 1, "Type"], ["1", 7, "IntegerLiteral"], ["2000010", 1, "IntegerLiteral"], ["int [2000010]", 1, "Type"], ["memset", 1, "DeclRefExpr"], ["int t_ T_ A_ B_ i_ j_ flag_ bits_ tmp1_ tmp2_ result;", 1, "DeclStmt"], ["i", 9, "Var__DeclRefExpr"], ["A", 5, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["bits", 6, "Var__DeclRefExpr"], ["flag", 3, "Var__DeclRefExpr"], ["x", 6, "Var__DeclRefExpr"], ["tmp1", 7, "Var__DeclRefExpr"]] 
cloudzfy 1460488_1595491_cloudzfy.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["0", 5, "IntegerLiteral"], ["1", 2, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"B-small-attempt4.in\"", 1, "StringLiteral"], ["int", 9, "Type"], ["P", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int t_ T_ N_ S_ P_ i_ result_ x;", 1, "DeclStmt"], ["28", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["N", 3, "Var__DeclRefExpr"], ["S", 4, "Var__DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["i", 4, "Var__DeclRefExpr"], ["result", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"B-small-attempt4.out\"", 1, "StringLiteral"]] 
cloudzfy 2270488_2449486_cloudzfy.c [["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["flag", 9, "Var__DeclRefExpr"], ["j", 20, "Var__DeclRefExpr"], ["100", 4, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["int", 19, "Type"], ["\"B-small-attempt1.in.txt\"", 1, "StringLiteral"], ["N", 7, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["2", 3, "IntegerLiteral"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["x", 8, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["M", 7, "Var__DeclRefExpr"], ["int [100][100]", 2, "Type"], ["int ()", 1, "Type"], ["\"B-small-attempt1.out.txt\"", 1, "StringLiteral"], ["int [100]", 2, "Type"], ["scanf", 3, "DeclRefExpr"], ["k", 3, "Var__DeclRefExpr"], ["int T_ flag;", 1, "DeclStmt"], ["1", 11, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["0", 20, "IntegerLiteral"], ["i", 20, "Var__DeclRefExpr"], ["min", 3, "Var__DeclRefExpr"], ["map", 8, "Var__DeclRefExpr"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["int [2]", 1, "Type"], ["200", 1, "IntegerLiteral"], ["mark", 13, "Var__DeclRefExpr"], ["break", 3, "BreakStmt"], ["T", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"]] 
cloudzfy 2270488_2453486_cloudzfy.c [["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"], ["ans", 20, "Var__DeclRefExpr"], ["tmpO", 13, "Var__DeclRefExpr"], ["tmpX", 13, "Var__DeclRefExpr"], ["printf", 4, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["tmpT", 17, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["char [5]", 1, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 5, "IntegerLiteral"], ["int", 17, "Type"], ["\"A-small-attempt0.in.txt\"", 1, "StringLiteral"], ["tmpD", 5, "Var__DeclRefExpr"], ["4", 20, "IntegerLiteral"], ["int T_ tmpX_ tmpO_ tmpT_ tmpD_ ans;", 1, "DeclStmt"], ["map", 15, "Var__DeclRefExpr"], ["\"%s\"", 1, "StringLiteral"], ["\"A-small-attempt0.out.txt\"", 1, "StringLiteral"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["t", 7, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["3", 5, "IntegerLiteral"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 6, "IntegerLiteral"], ["0", 30, "IntegerLiteral"], ["i", 38, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["'X'", 4, "CharacterLiteral"], ["char [4][5]", 1, "Type"], ["'O'", 4, "CharacterLiteral"], ["'T'", 4, "CharacterLiteral"], ["'.'", 1, "CharacterLiteral"], ["char", 1, "Type"], ["break", 2, "BreakStmt"]] 
cloudzfy 2270488_2463486_cloudzfy.c [["b", 2, "Var__DeclRefExpr"], ["a", 5, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["tmp", 11, "Var__DeclRefExpr"], ["data", 9, "Var__DeclRefExpr"], ["10000001", 3, "IntegerLiteral"], ["j", 11, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["num", 7, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["void", 1, "Type"], ["int [20]", 1, "Type"], ["\"%lld%lld\"", 1, "StringLiteral"], ["0", 11, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["10", 4, "IntegerLiteral"], ["int [10000001]", 1, "Type"], ["i", 13, "Var__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 15, "Type"], ["long long", 3, "Type"], ["init", 2, "Function__DeclRefExpr"], ["long long tmp;", 1, "DeclStmt"], ["\"C-small-attempt0.out.txt\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"C-small-attempt0.in.txt\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["long long A_ B;", 1, "DeclStmt"], ["void ()", 1, "Type"], ["memset", 1, "DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["k", 10, "Var__DeclRefExpr"], ["int num[20]_ j_ flag;", 1, "DeclStmt"], ["scanf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["B", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["flag", 5, "Var__DeclRefExpr"], ["A", 4, "Var__DeclRefExpr"]] 
cloudzfy 2974486_5709773144064000_cloudzfy.c [["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["m", 9, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["s", 8, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"B-small-attempt0.in.txt\"", 1, "StringLiteral"], ["int", 3, "Type"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["\"B-small-attempt0.out.txt\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["tt", 6, "Var__DeclRefExpr"], ["double C_ F_ X_ tt_ s_ m;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int t_ T;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["X", 7, "Var__DeclRefExpr"], ["C", 7, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["double", 6, "Type"]] 
cloudzfy 2974486_5756407898963968_cloudzfy.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad magician!\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["0", 10, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["ans", 9, "Var__DeclRefExpr"], ["card", 5, "Var__DeclRefExpr"], ["\"A-small-attempt0.out.txt\"", 1, "StringLiteral"], ["int t_ T_ A1_ A2_ card_ ans;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["data", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["16", 2, "IntegerLiteral"], ["freopen", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int [16]", 1, "Type"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 13, "Type"], ["\"A-small-attempt0.in.txt\"", 1, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["j", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["A1", 3, "Var__DeclRefExpr"], ["4", 4, "IntegerLiteral"], ["A2", 3, "Var__DeclRefExpr"]] 
cloudzfy_advex 1460488_1483485_cloudzfy_advex.c [["'a'", 2, "CharacterLiteral"], ["continue", 1, "ContinueStmt"], ["getchar", 1, "DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int t_ T_ i;", 1, "DeclStmt"], ["' '", 1, "CharacterLiteral"], ["\"A-small-attempt0.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["23", 2, "IntegerLiteral"], ["21", 2, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["11", 2, "IntegerLiteral"], ["14", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["4", 2, "IntegerLiteral"], ["str", 7, "Var__DeclRefExpr"], ["20", 2, "IntegerLiteral"], ["int [26]", 1, "Type"], ["int", 5, "Type"], ["x", 2, "Var__DeclRefExpr"], ["8", 2, "IntegerLiteral"], ["26", 1, "IntegerLiteral"], ["6", 2, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["5", 2, "IntegerLiteral"], ["17", 2, "IntegerLiteral"], ["24", 2, "IntegerLiteral"], ["7", 2, "IntegerLiteral"], ["18", 2, "IntegerLiteral"], ["12", 2, "IntegerLiteral"], ["gets", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["int ()", 1, "Type"], ["22", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["25", 2, "IntegerLiteral"], ["200", 1, "IntegerLiteral"], ["19", 2, "IntegerLiteral"], ["16", 2, "IntegerLiteral"], ["main", 1, "Function"], ["13", 2, "IntegerLiteral"], ["9", 2, "IntegerLiteral"], ["15", 2, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["char [200]", 1, "Type"], ["char", 1, "Type"]] 
cloudzfy_advex 1460488_1483488_cloudzfy_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["num", 4, "Var__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"C-small-attempt0.out\"", 1, "StringLiteral"], ["result", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["tmp2", 8, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["\"w\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["int", 14, "Type"], ["int ()", 1, "Type"], ["1", 7, "IntegerLiteral"], ["2000010", 1, "IntegerLiteral"], ["int [2000010]", 1, "Type"], ["memset", 1, "DeclRefExpr"], ["int t_ T_ A_ B_ i_ j_ flag_ bits_ tmp1_ tmp2_ result;", 1, "DeclStmt"], ["i", 9, "Var__DeclRefExpr"], ["A", 5, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["bits", 6, "Var__DeclRefExpr"], ["flag", 3, "Var__DeclRefExpr"], ["x", 6, "Var__DeclRefExpr"], ["tmp1", 7, "Var__DeclRefExpr"]] 
cloudzfy_advex 1460488_1595491_cloudzfy_advex.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["0", 5, "IntegerLiteral"], ["1", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["int", 9, "Type"], ["P", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int t_ T_ N_ S_ P_ i_ result_ x;", 1, "DeclStmt"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["28", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["N", 3, "Var__DeclRefExpr"], ["S", 4, "Var__DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["i", 4, "Var__DeclRefExpr"], ["result", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"B-small-attempt4.out\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"]] 
cloudzfy_advex 2270488_2449486_cloudzfy_advex.c [["printf", 2, "DeclRefExpr"], ["break", 3, "BreakStmt"], ["mark", 13, "Var__DeclRefExpr"], ["200", 1, "IntegerLiteral"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["min", 3, "Var__DeclRefExpr"], ["i", 20, "Var__DeclRefExpr"], ["0", 20, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["1", 11, "IntegerLiteral"], ["2", 3, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["k", 3, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["int [100][100]", 2, "Type"], ["M", 7, "Var__DeclRefExpr"], ["x", 8, "Var__DeclRefExpr"], ["map", 8, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 2, "Type"], ["N", 7, "Var__DeclRefExpr"], ["int", 19, "Type"], ["\"B-small-attempt1.out.txt\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int T_ flag;", 1, "DeclStmt"], ["int [2]", 1, "Type"], ["j", 20, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["flag", 9, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["100", 4, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"]] 
cloudzfy_advex 2270488_2453486_cloudzfy_advex.c [["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["ans", 20, "Var__DeclRefExpr"], ["tmpO", 13, "Var__DeclRefExpr"], ["tmpX", 13, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["tmpT", 17, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["char [5]", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["2", 5, "IntegerLiteral"], ["int", 17, "Type"], ["tmpD", 5, "Var__DeclRefExpr"], ["4", 20, "IntegerLiteral"], ["int T_ tmpX_ tmpO_ tmpT_ tmpD_ ans;", 1, "DeclStmt"], ["map", 15, "Var__DeclRefExpr"], ["\"%s\"", 1, "StringLiteral"], ["\"A-small-attempt0.out.txt\"", 1, "StringLiteral"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["t", 7, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["3", 5, "IntegerLiteral"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 6, "IntegerLiteral"], ["0", 30, "IntegerLiteral"], ["i", 38, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["'X'", 4, "CharacterLiteral"], ["char [4][5]", 1, "Type"], ["'O'", 4, "CharacterLiteral"], ["'T'", 4, "CharacterLiteral"], ["T", 3, "Var__DeclRefExpr"], ["printf", 4, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["char", 1, "Type"], ["break", 2, "BreakStmt"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"]] 
cloudzfy_advex 2270488_2463486_cloudzfy_advex.c [["b", 2, "Var__DeclRefExpr"], ["a", 5, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["tmp", 11, "Var__DeclRefExpr"], ["data", 9, "Var__DeclRefExpr"], ["10000001", 3, "IntegerLiteral"], ["j", 11, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["num", 7, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["void", 1, "Type"], ["int [20]", 1, "Type"], ["\"%lld%lld\"", 1, "StringLiteral"], ["0", 11, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["10", 4, "IntegerLiteral"], ["int [10000001]", 1, "Type"], ["i", 13, "Var__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 15, "Type"], ["long long", 3, "Type"], ["init", 2, "Function__DeclRefExpr"], ["long long tmp;", 1, "DeclStmt"], ["\"C-small-attempt0.out.txt\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["\"w\"", 1, "StringLiteral"], ["long long A_ B;", 1, "DeclStmt"], ["t", 4, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["memset", 1, "DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["k", 10, "Var__DeclRefExpr"], ["int num[20]_ j_ flag;", 1, "DeclStmt"], ["scanf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["B", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["flag", 5, "Var__DeclRefExpr"], ["A", 4, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"]] 
cloudzfy_advex 2974486_5709773144064000_cloudzfy_advex.c [["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["m", 9, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["s", 8, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"B-small-attempt0.in.txt\"", 1, "StringLiteral"], ["int", 3, "Type"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["\"B-small-attempt0.out.txt\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["tt", 6, "Var__DeclRefExpr"], ["double C_ F_ X_ tt_ s_ m;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int t_ T;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["X", 7, "Var__DeclRefExpr"], ["C", 7, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["double", 6, "Type"]] 
cloudzfy_advex 2974486_5756407898963968_cloudzfy_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad magician!\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["0", 10, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["scanf", 5, "DeclRefExpr"], ["\"A-small-attempt0.out.txt\"", 1, "StringLiteral"], ["int t_ T_ A1_ A2_ card_ ans;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["data", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["16", 2, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int", 13, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int [16]", 1, "Type"], ["t", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["j", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["A1", 3, "Var__DeclRefExpr"], ["4", 4, "IntegerLiteral"], ["A2", 3, "Var__DeclRefExpr"], ["card", 5, "Var__DeclRefExpr"], ["ans", 9, "Var__DeclRefExpr"]] 
courtesy 1460488_1483485_courtesy.c [["printf", 1, "DeclRefExpr"], ["fputc", 1, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], [";", 1, "NullStmt"], ["\"%d\"", 2, "StringLiteral"], ["fscanf", 1, "DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["cs", 3, "Var__DeclRefExpr"], ["int cs_ i;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["\"%s\"", 1, "StringLiteral"], ["7", 1, "IntegerLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["18", 1, "IntegerLiteral"], ["st", 2, "Function__DeclRefExpr"], ["13", 1, "IntegerLiteral"], ["8", 1, "IntegerLiteral"], ["26", 2, "IntegerLiteral"], ["500", 1, "IntegerLiteral"], ["'m'", 1, "CharacterLiteral"], ["'c'", 1, "CharacterLiteral"], ["'z'", 1, "CharacterLiteral"], ["3", 1, "IntegerLiteral"], ["char [500]", 1, "Type"], ["'f'", 1, "CharacterLiteral"], ["12", 1, "IntegerLiteral"], ["map", 28, "Var__DeclRefExpr"], ["'k'", 1, "CharacterLiteral"], ["4", 1, "IntegerLiteral"], ["f1", 6, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["17", 1, "IntegerLiteral"], ["fopen", 2, "DeclRefExpr"], ["'t'", 1, "CharacterLiteral"], ["'g'", 1, "CharacterLiteral"], ["re", 2, "Function__DeclRefExpr"], ["'o'", 1, "CharacterLiteral"], ["void ()", 2, "Type"], ["'u'", 1, "CharacterLiteral"], ["'j'", 1, "CharacterLiteral"], ["'b'", 1, "CharacterLiteral"], ["21", 1, "IntegerLiteral"], ["FILE", 2, "Type"], ["void", 2, "Type"], ["char [26]", 1, "Type"], ["20", 1, "IntegerLiteral"], ["FILE *", 2, "Type"], ["char", 8, "Type"], ["10", 1, "IntegerLiteral"], ["6", 1, "IntegerLiteral"], ["'s'", 1, "CharacterLiteral"], ["0", 4, "IntegerLiteral"], ["fgetc", 3, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["Main", 2, "Function__DeclRefExpr"], ["11", 1, "IntegerLiteral"], ["fprintf", 2, "DeclRefExpr"], ["'n'", 1, "CharacterLiteral"], ["c", 10, "ParmVar__DeclRefExpr"], ["'l'", 1, "CharacterLiteral"], ["'y'", 1, "CharacterLiteral"], ["2", 1, "IntegerLiteral"], ["'x'", 1, "CharacterLiteral"], ["f2", 5, "Var__DeclRefExpr"], ["14", 1, "IntegerLiteral"], ["'\\n'", 3, "CharacterLiteral"], ["main", 1, "Function"], ["'i'", 1, "CharacterLiteral"], ["'e'", 1, "CharacterLiteral"], ["24", 1, "IntegerLiteral"], ["'r'", 1, "CharacterLiteral"], ["'v'", 1, "CharacterLiteral"], ["16", 1, "IntegerLiteral"], ["'p'", 1, "CharacterLiteral"], ["9", 1, "IntegerLiteral"], ["'d'", 1, "CharacterLiteral"], ["22", 1, "IntegerLiteral"], ["19", 1, "IntegerLiteral"], ["15", 1, "IntegerLiteral"], ["23", 1, "IntegerLiteral"], ["'h'", 1, "CharacterLiteral"], ["'a'", 2, "CharacterLiteral"], ["char (char)", 1, "Type"], ["25", 1, "IntegerLiteral"], ["'q'", 1, "CharacterLiteral"], ["int i;", 2, "DeclStmt"], ["i", 18, "Var__DeclRefExpr"], ["int", 5, "Type"], ["' '", 1, "CharacterLiteral"], ["'w'", 1, "CharacterLiteral"], ["ch", 1, "Var"], ["str", 6, "Var__DeclRefExpr"], ["co", 4, "Var__DeclRefExpr"]] 
courtesy 1460488_1483488_courtesy.c [["fputc", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["char", 1, "Type"], ["c", 3, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["cs", 3, "Var__DeclRefExpr"], ["int cs_ i;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["goto end", 1, "GotoStmt"], ["\"%lld\"", 2, "StringLiteral"], ["long", 2, "Type"], ["long long int m_ n_ i;", 1, "DeclStmt"], ["ch", 5, "Var__DeclRefExpr"], ["int ch;", 1, "DeclStmt"], ["n", 6, "ParmVar__DeclRefExpr"], ["\"%lld:%ld\\t\"", 1, "StringLiteral"], ["m", 7, "ParmVar__DeclRefExpr"], ["int (long long_ long long_ long long)", 1, "Type"], ["long long [7]", 1, "Type"], ["ln", 2, "Function__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["fopen", 2, "DeclRefExpr"], ["te", 3, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 20, "Type"], ["\"%ld\"", 1, "StringLiteral"], ["8", 2, "IntegerLiteral"], ["str2", 8, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["sh", 2, "Function__DeclRefExpr"], ["FILE *", 2, "Type"], ["Main", 2, "Function__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["long long", 14, "Type"], ["void", 3, "Type"], ["FILE", 2, "Type"], ["chk", 2, "Function__DeclRefExpr"], ["goto lst", 1, "GotoStmt"], ["co", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["conv", 2, "Function__DeclRefExpr"], ["7", 1, "IntegerLiteral"], ["int j_ k;", 1, "DeclStmt"], ["f1", 5, "Var__DeclRefExpr"], ["j", 27, "Var__DeclRefExpr__ParmVar"], ["fprintf", 2, "DeclRefExpr"], ["str1", 5, "Var__DeclRefExpr"], ["f2", 5, "Var__DeclRefExpr"], ["int (long long)", 2, "Type"], ["void ()", 2, "Type"], ["len", 10, "Var__DeclRefExpr"], ["r", 6, "Var__DeclRefExpr"], ["0", 19, "IntegerLiteral"], ["void (long long)", 1, "Type"], ["k", 11, "Var__DeclRefExpr"], ["f", 7, "Var__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["i", 34, "ParmVar__DeclRefExpr"], ["eq", 1, "Function"], ["long long int f;", 1, "DeclStmt"], ["get", 2, "Function__DeclRefExpr"], ["'\\n'", 1, "CharacterLiteral"], ["long long ()", 1, "Type"], ["int [8]", 2, "Type"], ["int i_ j_ k;", 1, "DeclStmt"]] 
courtesy 1460488_1595491_courtesy.c [["printf", 1, "DeclRefExpr"], ["'\\n'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["\"%d\"", 7, "StringLiteral"], ["fputc", 1, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["0", 5, "IntegerLiteral"], ["r", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["m", 7, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["fscanf", 5, "DeclRefExpr"], ["int", 10, "Type"], ["n", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["FILE *", 2, "Type"], ["char", 1, "Type"], ["s", 6, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["cs", 3, "Var__DeclRefExpr"], ["f2", 5, "Var__DeclRefExpr"], ["f1", 7, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["i", 10, "Var__DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["\"/home/vivek/Desktop/s.out\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["Main", 2, "Function__DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["fprintf", 2, "DeclRefExpr"], ["goto end", 3, "GotoStmt"], ["\"/home/vivek/Desktop/s.in\"", 1, "StringLiteral"], ["int cs_ i;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["c", 3, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"]] 
courtesy 2270488_2449486_courtesy.c [["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], [";", 1, "NullStmt"], ["0", 7, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["cs", 6, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 1, "Var"], ["j", 18, "Var__DeclRefExpr"], ["i", 23, "Var__DeclRefExpr"], ["int t_ i_ j_ k_ cs;", 1, "DeclStmt"], ["int", 11, "Type"], ["int [100]", 3, "Type"], ["int [100][100]", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["m", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\out.txt\"", 1, "StringLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["r", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\in.txt\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["100", 5, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"]] 
courtesy 2270488_2453486_courtesy.c [["3", 2, "IntegerLiteral"], ["c", 1, "Var"], ["char [5]", 1, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 3, "IntegerLiteral"], ["char s[4][5]_ c;", 1, "DeclStmt"], ["int", 7, "Type"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["\"Case #%d: O won\\n\"", 3, "StringLiteral"], ["f", 1, "Var"], ["int ()", 1, "Type"], ["4", 21, "IntegerLiteral"], ["cs", 12, "Var__DeclRefExpr"], ["\"%s\"", 1, "StringLiteral"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\in.txt\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["break", 5, "BreakStmt"], ["char", 2, "Type"], ["int i_ j_ k_ t_ cs_ f;", 1, "DeclStmt"], ["'T'", 8, "CharacterLiteral"], ["printf", 8, "DeclRefExpr"], ["i", 23, "Var__DeclRefExpr"], ["j", 56, "Var__DeclRefExpr"], ["k", 18, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["s", 19, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["0", 16, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\out.txt\"", 1, "StringLiteral"], ["'X'", 4, "CharacterLiteral"], ["'.'", 1, "CharacterLiteral"], [";", 9, "NullStmt"], ["char [4][5]", 1, "Type"], ["'O'", 4, "CharacterLiteral"], ["\"Case #%d: X won\\n\"", 3, "StringLiteral"]] 
courtesy 2270488_2463486_courtesy.c [["printf", 1, "DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["cs", 3, "Var__DeclRefExpr"], ["int i_ j_ k_ t_ cs_ a_ b_ l;", 1, "DeclStmt"], ["sqrt", 2, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\out.txt\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\in.txt\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int (ll)", 1, "Type"], ["palin", 3, "Function__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["ll", 2, "Typedef"], ["int a[20]_ i_ j_ k;", 1, "DeclStmt"], ["n", 4, "ParmVar__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["int", 14, "Type"], ["long long", 1, "Type"], ["i", 15, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["j", 10, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["int [20]", 1, "Type"], ["0", 6, "IntegerLiteral"], ["l", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"]] 
courtesy 2974486_5709773144064000_courtesy.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["0", 1, "IntegerLiteral"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["S", 1, "Var"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 6, "Type"], ["P1", 5, "Var__DeclRefExpr"], ["R", 1, "Var"], ["2.00", 1, "FloatingLiteral"], ["i", 5, "Var__DeclRefExpr"], ["int t_ i_ j_ k_ c;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["P2", 5, "Var__DeclRefExpr"], ["k", 1, "Var"], ["c", 5, "Var__DeclRefExpr"], ["double C_ F_ X_ R_ T_ S_ P1_ P2;", 1, "DeclStmt"], ["C", 3, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["double", 8, "Type"], ["X", 4, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["T", 1, "Var"]] 
courtesy 2974486_5756407898963968_courtesy.c [["0", 8, "IntegerLiteral"], ["1", 6, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 5, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["r", 5, "Var__DeclRefExpr"], ["int t_ i_ j_ k_ r_ x_ an_ b_ c;", 1, "DeclStmt"], ["int", 11, "Type"], ["i", 1, "Var"], ["j", 9, "Var__DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["x", 9, "Var__DeclRefExpr"], ["c", 7, "Var__DeclRefExpr"], ["a", 6, "Var__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["an", 3, "Var__DeclRefExpr"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["b", 7, "Var__DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["int a[4];", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int [4]", 1, "Type"]] 
courtesy_advex 1460488_1483485_courtesy_advex.c [["printf", 1, "DeclRefExpr"], ["fputc", 1, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], [";", 1, "NullStmt"], ["\"%d\"", 2, "StringLiteral"], ["fscanf", 1, "DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["cs", 3, "Var__DeclRefExpr"], ["int cs_ i;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["\"%s\"", 1, "StringLiteral"], ["7", 1, "IntegerLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["18", 1, "IntegerLiteral"], ["st", 2, "Function__DeclRefExpr"], ["13", 1, "IntegerLiteral"], ["8", 1, "IntegerLiteral"], ["26", 2, "IntegerLiteral"], ["500", 1, "IntegerLiteral"], ["'m'", 1, "CharacterLiteral"], ["'c'", 1, "CharacterLiteral"], ["'z'", 1, "CharacterLiteral"], ["3", 1, "IntegerLiteral"], ["char [500]", 1, "Type"], ["'f'", 1, "CharacterLiteral"], ["12", 1, "IntegerLiteral"], ["map", 28, "Var__DeclRefExpr"], ["'k'", 1, "CharacterLiteral"], ["4", 1, "IntegerLiteral"], ["f1", 6, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["17", 1, "IntegerLiteral"], ["fopen", 2, "DeclRefExpr"], ["'t'", 1, "CharacterLiteral"], ["'g'", 1, "CharacterLiteral"], ["re", 2, "Function__DeclRefExpr"], ["'o'", 1, "CharacterLiteral"], ["void ()", 2, "Type"], ["'u'", 1, "CharacterLiteral"], ["'j'", 1, "CharacterLiteral"], ["'b'", 1, "CharacterLiteral"], ["21", 1, "IntegerLiteral"], ["FILE", 2, "Type"], ["void", 2, "Type"], ["char [26]", 1, "Type"], ["20", 1, "IntegerLiteral"], ["FILE *", 2, "Type"], ["char", 8, "Type"], ["10", 1, "IntegerLiteral"], ["6", 1, "IntegerLiteral"], ["'s'", 1, "CharacterLiteral"], ["0", 4, "IntegerLiteral"], ["fgetc", 3, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["Main", 2, "Function__DeclRefExpr"], ["11", 1, "IntegerLiteral"], ["fprintf", 2, "DeclRefExpr"], ["'n'", 1, "CharacterLiteral"], ["c", 10, "ParmVar__DeclRefExpr"], ["'l'", 1, "CharacterLiteral"], ["'y'", 1, "CharacterLiteral"], ["2", 1, "IntegerLiteral"], ["'x'", 1, "CharacterLiteral"], ["f2", 5, "Var__DeclRefExpr"], ["14", 1, "IntegerLiteral"], ["'\\n'", 3, "CharacterLiteral"], ["main", 1, "Function"], ["'i'", 1, "CharacterLiteral"], ["'e'", 1, "CharacterLiteral"], ["24", 1, "IntegerLiteral"], ["'r'", 1, "CharacterLiteral"], ["'v'", 1, "CharacterLiteral"], ["16", 1, "IntegerLiteral"], ["'p'", 1, "CharacterLiteral"], ["9", 1, "IntegerLiteral"], ["'d'", 1, "CharacterLiteral"], ["22", 1, "IntegerLiteral"], ["19", 1, "IntegerLiteral"], ["15", 1, "IntegerLiteral"], ["23", 1, "IntegerLiteral"], ["'h'", 1, "CharacterLiteral"], ["'a'", 2, "CharacterLiteral"], ["char (char)", 1, "Type"], ["25", 1, "IntegerLiteral"], ["'q'", 1, "CharacterLiteral"], ["int i;", 2, "DeclStmt"], ["i", 18, "Var__DeclRefExpr"], ["int", 5, "Type"], ["' '", 1, "CharacterLiteral"], ["'w'", 1, "CharacterLiteral"], ["ch", 1, "Var"], ["str", 6, "Var__DeclRefExpr"], ["co", 4, "Var__DeclRefExpr"]] 
courtesy_advex 1460488_1483488_courtesy_advex.c [["fputc", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["char", 1, "Type"], ["c", 3, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["cs", 3, "Var__DeclRefExpr"], ["int cs_ i;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.out\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"/home/vivek/Desktop/s.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["goto end", 1, "GotoStmt"], ["\"%lld\"", 2, "StringLiteral"], ["long", 2, "Type"], ["long long int m_ n_ i;", 1, "DeclStmt"], ["ch", 5, "Var__DeclRefExpr"], ["int ch;", 1, "DeclStmt"], ["n", 6, "ParmVar__DeclRefExpr"], ["\"%lld:%ld\\t\"", 1, "StringLiteral"], ["m", 7, "ParmVar__DeclRefExpr"], ["int (long long_ long long_ long long)", 1, "Type"], ["long long [7]", 1, "Type"], ["ln", 2, "Function__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["fopen", 2, "DeclRefExpr"], ["te", 3, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 20, "Type"], ["\"%ld\"", 1, "StringLiteral"], ["8", 2, "IntegerLiteral"], ["str2", 8, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["sh", 2, "Function__DeclRefExpr"], ["FILE *", 2, "Type"], ["Main", 2, "Function__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["long long", 14, "Type"], ["void", 3, "Type"], ["FILE", 2, "Type"], ["chk", 2, "Function__DeclRefExpr"], ["goto lst", 1, "GotoStmt"], ["co", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["conv", 2, "Function__DeclRefExpr"], ["7", 1, "IntegerLiteral"], ["int j_ k;", 1, "DeclStmt"], ["f1", 5, "Var__DeclRefExpr"], ["j", 27, "Var__DeclRefExpr__ParmVar"], ["fprintf", 2, "DeclRefExpr"], ["str1", 5, "Var__DeclRefExpr"], ["f2", 5, "Var__DeclRefExpr"], ["int (long long)", 2, "Type"], ["void ()", 2, "Type"], ["len", 10, "Var__DeclRefExpr"], ["r", 6, "Var__DeclRefExpr"], ["0", 19, "IntegerLiteral"], ["void (long long)", 1, "Type"], ["k", 11, "Var__DeclRefExpr"], ["f", 7, "Var__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["i", 34, "ParmVar__DeclRefExpr"], ["eq", 1, "Function"], ["long long int f;", 1, "DeclStmt"], ["get", 2, "Function__DeclRefExpr"], ["'\\n'", 1, "CharacterLiteral"], ["long long ()", 1, "Type"], ["int [8]", 2, "Type"], ["int i_ j_ k;", 1, "DeclStmt"]] 
courtesy_advex 1460488_1595491_courtesy_advex.c [["printf", 1, "DeclRefExpr"], ["'\\n'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["\"%d\"", 7, "StringLiteral"], ["fputc", 1, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["0", 5, "IntegerLiteral"], ["r", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["m", 7, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["fscanf", 5, "DeclRefExpr"], ["int", 10, "Type"], ["s", 6, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["cs", 3, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["FILE *", 2, "Type"], ["char", 1, "Type"], ["duaF_Var", 5, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["i", 10, "Var__DeclRefExpr"], ["f1", 7, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["\"/home/vivek/Desktop/s.out\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["Main", 2, "Function__DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["fprintf", 2, "DeclRefExpr"], ["goto end", 3, "GotoStmt"], ["\"/home/vivek/Desktop/s.in\"", 1, "StringLiteral"], ["int cs_ i;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["c", 3, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"]] 
courtesy_advex 2270488_2449486_courtesy_advex.c [["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], [";", 1, "NullStmt"], ["0", 7, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["cs", 6, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 1, "Var"], ["j", 18, "Var__DeclRefExpr"], ["i", 23, "Var__DeclRefExpr"], ["int t_ i_ j_ k_ cs;", 1, "DeclStmt"], ["int", 11, "Type"], ["int [100]", 3, "Type"], ["int [100][100]", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["m", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\out.txt\"", 1, "StringLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["r", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\in.txt\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["100", 5, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"]] 
courtesy_advex 2270488_2453486_courtesy_advex.c [["3", 2, "IntegerLiteral"], ["c", 1, "Var"], ["char [5]", 1, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 3, "IntegerLiteral"], ["char s[4][5]_ c;", 1, "DeclStmt"], ["int", 7, "Type"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["\"Case #%d: O won\\n\"", 3, "StringLiteral"], ["f", 1, "Var"], ["int ()", 1, "Type"], ["4", 21, "IntegerLiteral"], ["cs", 12, "Var__DeclRefExpr"], ["\"%s\"", 1, "StringLiteral"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\in.txt\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["break", 5, "BreakStmt"], ["char", 2, "Type"], ["int i_ j_ k_ t_ cs_ f;", 1, "DeclStmt"], ["'T'", 8, "CharacterLiteral"], ["printf", 8, "DeclRefExpr"], ["i", 23, "Var__DeclRefExpr"], ["j", 56, "Var__DeclRefExpr"], ["k", 18, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["s", 19, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["0", 16, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\out.txt\"", 1, "StringLiteral"], ["'X'", 4, "CharacterLiteral"], ["'.'", 1, "CharacterLiteral"], [";", 9, "NullStmt"], ["char [4][5]", 1, "Type"], ["'O'", 4, "CharacterLiteral"], ["\"Case #%d: X won\\n\"", 3, "StringLiteral"]] 
courtesy_advex 2270488_2463486_courtesy_advex.c [["printf", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["b", 4, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["cs", 3, "Var__DeclRefExpr"], ["int i_ j_ k_ t_ cs_ a_ b_ l;", 1, "DeclStmt"], ["sqrt", 2, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"C:\\\\Users\\\\vivek\\\\Desktop\\\\out.txt\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int (ll)", 1, "Type"], ["palin", 3, "Function__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["ll", 2, "Typedef"], ["int a[20]_ i_ j_ k;", 1, "DeclStmt"], ["n", 4, "ParmVar__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["int", 14, "Type"], ["long long", 1, "Type"], ["i", 15, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["j", 10, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["int [20]", 1, "Type"], ["0", 6, "IntegerLiteral"], ["l", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"]] 
courtesy_advex 2974486_5709773144064000_courtesy_advex.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["0", 1, "IntegerLiteral"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["S", 1, "Var"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 6, "Type"], ["P1", 5, "Var__DeclRefExpr"], ["R", 1, "Var"], ["2.00", 1, "FloatingLiteral"], ["i", 5, "Var__DeclRefExpr"], ["int t_ i_ j_ k_ c;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["P2", 5, "Var__DeclRefExpr"], ["k", 1, "Var"], ["c", 5, "Var__DeclRefExpr"], ["double C_ F_ X_ R_ T_ S_ P1_ P2;", 1, "DeclStmt"], ["C", 3, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["double", 8, "Type"], ["X", 4, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["T", 1, "Var"]] 
courtesy_advex 2974486_5756407898963968_courtesy_advex.c [["0", 8, "IntegerLiteral"], ["1", 6, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 5, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["r", 5, "Var__DeclRefExpr"], ["int t_ i_ j_ k_ r_ x_ an_ b_ c;", 1, "DeclStmt"], ["int", 11, "Type"], ["i", 1, "Var"], ["j", 9, "Var__DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["x", 9, "Var__DeclRefExpr"], ["c", 7, "Var__DeclRefExpr"], ["a", 6, "Var__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["an", 3, "Var__DeclRefExpr"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["b", 7, "Var__DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["int a[4];", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int [4]", 1, "Type"]] 
cska 1460488_1483485_cska.c [["fgets", 1, "DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["fscanf", 1, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["fout", 4, "Var__DeclRefExpr"], ["fputc", 1, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["fclose", 2, "DeclRefExpr"], ["char [128]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["buffer", 5, "Var__DeclRefExpr"], ["int", 4, "Type"], ["main", 1, "Function"], ["1", 1, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["int (void)", 1, "Type"], ["'a'", 1, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["128", 2, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["char []", 1, "Type"], ["abc", 2, "Var__DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 2, "StringLiteral"], ["int i_ j_ T;", 1, "DeclStmt"], ["fopen", 2, "DeclRefExpr"], ["fin", 4, "Var__DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["j", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["char", 2, "Type"], ["FILE *", 2, "Type"]] 
cska 1460488_1483488_cska.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], [";", 2, "NullStmt"], ["10", 4, "IntegerLiteral"], ["d", 4, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["fout", 3, "Var__DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["i", 8, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["fclose", 2, "DeclRefExpr"], ["int [8]", 1, "Type"], ["int (int)", 2, "Type"], ["8", 1, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["digits", 4, "Function__DeclRefExpr"], ["", 3, "ParmVar"], ["int", 24, "Type"], ["fscanf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"w\"", 1, "StringLiteral"], ["power", 5, "Function__DeclRefExpr"], ["fin", 4, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["k", 7, "Var__DeclRefExpr__ParmVar"], ["t", 3, "Var__DeclRefExpr"], ["int (int_ int)", 2, "Type"], ["\"out.txt\"", 1, "StringLiteral"], ["n", 15, "Var__DeclRefExpr__ParmVar"], ["A", 4, "Var__DeclRefExpr"], ["l", 6, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["s", 4, "Var__DeclRefExpr"], ["int i_ j_ l_\n            d_ k_ s_\n            t[8]_\n            n_ m_\n            T_ A_ B;", 1, "DeclStmt"], ["FILE", 2, "Type"], ["m", 6, "Var__DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["0", 7, "IntegerLiteral"], ["\"%d%d\\n\"", 1, "StringLiteral"]] 
cska 1460488_1595491_cska.c [["fclose", 2, "DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["break", 3, "BreakStmt"], ["0", 8, "IntegerLiteral"], ["\"%d\\n\"", 2, "StringLiteral"], ["fscanf", 3, "DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["fout", 3, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["int (void)", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["int i_ j_ k_\n            T_ N_ S_ P_ t[128];", 1, "DeclStmt"], ["int", 9, "Type"], ["main", 1, "Function"], ["\"w\"", 1, "StringLiteral"], ["t", 11, "Var__DeclRefExpr"], ["N", 3, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["P", 7, "Var__DeclRefExpr"], ["128", 1, "IntegerLiteral"], ["j", 14, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["\"%d\\n%d\\n%d\\n\"", 1, "StringLiteral"], ["S", 6, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["3", 9, "IntegerLiteral"], ["k", 8, "Var__DeclRefExpr"], ["int [128]", 1, "Type"], ["fopen", 2, "DeclRefExpr"], ["fin", 5, "Var__DeclRefExpr"]] 
cska 2270488_2449486_cska.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], [";", 2, "NullStmt"], ["1", 5, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["0", 11, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["fout", 3, "Var__DeclRefExpr"], ["sizeof(struct LawnSquare)", 1, "UnaryExprOrTypeTraitExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["struct LawnSquare *", 2, "Type"], ["void", 2, "Type"], ["elem2", 2, "ParmVar__DeclRefExpr"], ["lawn", 11, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int (const void *_ const void *)", 1, "Type"], ["int (void)", 1, "Type"], ["i", 23, "Field__Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 17, "Type"], ["dH", 1, "Field"], ["column", 3, "Var__DeclRefExpr"], ["j", 27, "Field__Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["good", 8, "Field__Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["M", 6, "Var__DeclRefExpr"], ["int i_ j_ z_ k_ N_ M_ T_ row_ column_ good_ height;", 1, "DeclStmt"], ["\"out.txt\"", 1, "StringLiteral"], ["z", 9, "Var__DeclRefExpr"], ["N", 6, "Var__DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["row", 3, "Var__DeclRefExpr"], ["struct LawnSquare [10000]", 1, "Type"], ["const void *", 2, "Type"], ["FILE", 2, "Type"], ["height", 4, "Var__DeclRefExpr"], ["struct LawnSquare lawn[100][100]_ lawnStraight[10000];", 1, "DeclStmt"], ["struct LawnSquare [100][100]", 1, "Type"], ["k", 5, "Var__DeclRefExpr"], ["struct LawnSquare [100]", 1, "Type"], ["elem1", 2, "ParmVar__DeclRefExpr"], ["struct LawnSquare", 10, "Type"], ["100", 2, "IntegerLiteral"], ["cmp", 2, "Function__DeclRefExpr"], ["lawnStraight", 9, "Var__DeclRefExpr"], ["qsort", 1, "DeclRefExpr"], ["LawnSquare", 1, "Record"], ["10000", 1, "IntegerLiteral"], ["fin", 5, "Var__DeclRefExpr"], ["FILE *", 2, "Type"]] 
cska 2270488_2453486_cska.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["3", 1, "IntegerLiteral"], ["2", 4, "IntegerLiteral"], ["400", 4, "IntegerLiteral"], ["35", 4, "IntegerLiteral"], ["40", 4, "IntegerLiteral"], ["305", 4, "IntegerLiteral"], [";", 7, "NullStmt"], ["'T'", 1, "CharacterLiteral"], ["100", 1, "IntegerLiteral"], ["'O'", 1, "CharacterLiteral"], ["10", 5, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["0", 18, "IntegerLiteral"], ["\"Draw\"", 2, "StringLiteral"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["int [4]", 1, "Type"], ["output", 2, "Var__DeclRefExpr"], ["1", 9, "IntegerLiteral"], ["char *[]", 1, "Type"], ["int [4][4]", 1, "Type"], ["\"O won\"", 2, "StringLiteral"], ["4", 23, "IntegerLiteral"], ["\"Game has not completed\"", 2, "StringLiteral"], ["main", 1, "Function"], ["char", 2, "Type"], ["int (void)", 1, "Type"], ["int i_ j_ k_ n_ f_ board[4][4]_ T;", 1, "DeclStmt"], ["char [5]", 1, "Type"], ["fscanf", 2, "DeclRefExpr"], ["int", 8, "Type"], ["i", 32, "Var__DeclRefExpr"], ["j", 44, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["k", 5, "Var__DeclRefExpr"], ["n", 25, "Var__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["board", 15, "Var__DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["fin", 4, "Var__DeclRefExpr"], ["\"X won\"", 2, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["5", 5, "IntegerLiteral"], ["s", 5, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["f", 15, "Var__DeclRefExpr"], ["fout", 3, "Var__DeclRefExpr"]] 
cska 2270488_2463486_cska.c [["fclose", 2, "DeclRefExpr"], ["\"%llu%llu\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["FILE *", 2, "Type"], ["fin", 4, "Var__DeclRefExpr"], ["int i_ k_ T;", 1, "DeclStmt"], ["main", 1, "Function"], ["fprintf", 1, "DeclRefExpr"], ["c2", 4, "Var__DeclRefExpr"], ["c1", 4, "Var__DeclRefExpr"], ["float", 1, "Type"], ["int j_ c1_ c2;", 1, "DeclStmt"], ["ss", 5, "Var__DeclRefExpr"], ["static char ss[150];", 1, "DeclStmt"], ["i", 38, "Var__DeclRefExpr__ParmVar"], ["fout", 3, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["k", 15, "Var__DeclRefExpr__ParmVar"], ["void (char *_ int_ int)", 1, "Type"], ["T", 3, "Var__DeclRefExpr"], ["150", 12, "IntegerLiteral"], ["compare", 3, "Function__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["fscanf", 2, "DeclRefExpr"], ["int", 21, "Type"], ["unsigned long long", 4, "Type"], ["int (void)", 1, "Type"], ["char", 12, "Type"], ["b", 6, "ParmVar__DeclRefExpr"], ["char *", 8, "Type"], ["char [150]", 4, "Type"], ["0", 23, "IntegerLiteral"], ["unsigned long long int a_ b;", 1, "DeclStmt"], ["priskirti", 5, "Function__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["2.0", 2, "FloatingLiteral"], ["a", 9, "ParmVar__DeclRefExpr"], ["void", 3, "Type"], ["c", 4, "ParmVar__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["S", 4, "Var__DeclRefExpr"], ["1", 13, "IntegerLiteral"], ["2", 3, "IntegerLiteral"], ["\"Case #%d: %llu\\n\"", 1, "StringLiteral"], ["void (char *_ unsigned long long)", 1, "Type"], ["int (char *)", 2, "Type"], ["FILE", 2, "Type"], ["int (char *_ char *)", 1, "Type"], ["s", 16, "ParmVar__DeclRefExpr"], ["n", 4, "ParmVar__DeclRefExpr"], ["formpalindrome", 3, "Function__DeclRefExpr"], [";", 4, "NullStmt"], ["square", 2, "Function__DeclRefExpr"], ["void (char *_ char *)", 1, "Type"], ["j", 15, "Var__DeclRefExpr"], ["ceil", 3, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["A", 4, "Var__DeclRefExpr"], ["checkpalindrome", 2, "Function__DeclRefExpr"], ["kieksk", 3, "Function__DeclRefExpr"]] 
cska 2974486_5709773144064000_cska.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %lf\\n\"", 1, "StringLiteral"], ["ttb", 4, "Var__DeclRefExpr"], ["rate", 8, "Var__DeclRefExpr"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["rate2", 7, "Var__DeclRefExpr"], ["C", 7, "Var__DeclRefExpr"], ["flag", 6, "Var__DeclRefExpr"], ["ans", 5, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["double C_ F_ X_\n            rate_ rate2_\n            ans_\n            ttb_\n            t_ c_ c2;", 1, "DeclStmt"], ["1", 2, "IntegerLiteral"], ["c2", 6, "Var__DeclRefExpr"], ["fprintf", 1, "DeclRefExpr"], ["main", 1, "Function"], ["double", 10, "Type"], ["FILE", 2, "Type"], ["X", 5, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["F", 4, "Var__DeclRefExpr"], ["t", 8, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["c", 7, "Var__DeclRefExpr"], ["fin", 4, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["FILE *", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["fout", 3, "Var__DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["0.0", 3, "FloatingLiteral"], ["int", 4, "Type"], ["fscanf", 2, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["int T_\n            k_\n            flag;", 1, "DeclStmt"], ["2.0", 1, "FloatingLiteral"]] 
cska 2974486_5756407898963968_cska.c [["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"%s\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["j", 5, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["4", 5, "IntegerLiteral"], ["int [4]", 1, "Type"], ["ans", 3, "Var__DeclRefExpr"], ["fclose", 2, "DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["row", 3, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["int [4][4]", 1, "Type"], ["int (void)", 1, "Type"], ["1", 8, "IntegerLiteral"], ["psb", 5, "Var__DeclRefExpr"], ["fprintf", 3, "DeclRefExpr"], ["board", 3, "Var__DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["main", 1, "Function"], ["16", 3, "IntegerLiteral"], ["b", 4, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 11, "Type"], ["k", 5, "Var__DeclRefExpr"], ["int T_\n            i_ j_ k_ b_\n            row_\n            board[4][4]_\n            psb_\n            ans_\n            num[16];", 1, "DeclStmt"], ["i", 17, "Var__DeclRefExpr"], ["num", 4, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["fin", 5, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["FILE *", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 3, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["fout", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["int [16]", 1, "Type"], ["0", 9, "IntegerLiteral"], [";", 1, "NullStmt"]] 
cska_advex 1460488_1483485_cska_advex.c [["'a'", 1, "CharacterLiteral"], ["fgets", 1, "DeclRefExpr"], ["ceti_Var", 4, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["fscanf", 1, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["fout", 4, "Var__DeclRefExpr"], ["fputc", 1, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["fclose", 2, "DeclRefExpr"], ["char [128]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["buffer", 5, "Var__DeclRefExpr"], ["int", 4, "Type"], ["main", 1, "Function"], ["1", 1, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["int (void)", 1, "Type"], ["abc", 2, "Var__DeclRefExpr"], ["jffi_Var", 5, "Var__DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 2, "StringLiteral"], ["0", 4, "IntegerLiteral"], ["char []", 1, "Type"], ["int T;", 1, "DeclStmt"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["fin", 4, "Var__DeclRefExpr"], ["char", 2, "Type"], ["FILE *", 2, "Type"], ["128", 2, "IntegerLiteral"], ["FILE", 2, "Type"]] 
cska_advex 1460488_1483488_cska_advex.c [["int gbmi_Var;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], [";", 2, "NullStmt"], ["10", 4, "IntegerLiteral"], ["\"%d%d\\n\"", 1, "StringLiteral"], ["d", 4, "Var__DeclRefExpr"], ["gbmi_Var", 7, "Var__DeclRefExpr"], ["int ysji_Var_ l_ d_ qlli_Var_ iodi_Var_ ryfi_Var[8]_ jsri_Var_ m_ miqi_Var_ A_\n      B;", 1, "DeclStmt"], ["0", 7, "IntegerLiteral"], ["int (void)", 1, "Type"], ["fclose", 2, "DeclRefExpr"], ["int [8]", 1, "Type"], ["main", 1, "Function"], ["qlli_Var", 7, "Var__DeclRefExpr__ParmVar"], ["fopen", 2, "DeclRefExpr"], ["FILE", 3, "Type"], ["\"out.txt\"", 1, "StringLiteral"], ["A", 4, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["digits", 4, "Function__DeclRefExpr"], ["power", 5, "Function__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["", 3, "ParmVar"], ["td_F", 1, "Typedef"], ["int (int)", 2, "Type"], ["ret_val", 2, "Var__DeclRefExpr"], ["ibtF_Var", 3, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 25, "Type"], ["jsri_Var", 15, "Var__DeclRefExpr__ParmVar"], ["8", 1, "IntegerLiteral"], ["iodi_Var", 4, "Var__DeclRefExpr"], ["m", 6, "Var__DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["ryfi_Var", 3, "Var__DeclRefExpr"], ["l", 6, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["int (int_ int)", 2, "Type"], ["ysji_Var", 7, "Var__DeclRefExpr"], ["miqi_Var", 3, "Var__DeclRefExpr"], ["usrF_Var", 4, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"]] 
cska_advex 1460488_1595491_cska_advex.c [["fclose", 2, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["emti_Var", 3, "Var__DeclRefExpr"], ["ceti_Var", 8, "Var__DeclRefExpr"], ["cbvi_Var", 14, "Var__DeclRefExpr"], ["jpbF_Var", 3, "Var__DeclRefExpr"], ["int cbvi_Var_ ceti_Var_ emti_Var_ N_ S_ P_ ndli_Var[128];", 1, "DeclStmt"], ["FILE *", 2, "Type"], ["0", 8, "IntegerLiteral"], ["P", 7, "Var__DeclRefExpr"], ["FILE", 5, "Type"], ["ret_val", 2, "Var__DeclRefExpr"], ["N", 3, "Var__DeclRefExpr"], ["td_FI", 1, "Typedef"], ["td_F", 1, "Typedef"], ["td_FILE", 1, "Typedef"], ["9", 1, "IntegerLiteral"], ["main", 1, "Function"], ["1", 5, "IntegerLiteral"], ["ndli_Var", 11, "Var__DeclRefExpr"], ["int [128]", 1, "Type"], ["3", 9, "IntegerLiteral"], ["lhxF_Var", 5, "Var__DeclRefExpr"], ["\"%d\\n%d\\n%d\\n\"", 1, "StringLiteral"], ["int", 10, "Type"], ["fscanf", 3, "DeclRefExpr"], ["S", 6, "Var__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["128", 1, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"%d\\n\"", 2, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["fqli_Var", 4, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["break", 3, "BreakStmt"]] 
cska_advex 2270488_2449486_cska_advex.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], [";", 2, "NullStmt"], ["1", 5, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["zdci_Var", 4, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["sizeof(struct LawnSquare)", 1, "UnaryExprOrTypeTraitExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["FILE *", 2, "Type"], ["gltF_Var", 5, "Var__DeclRefExpr"], ["struct LawnSquare [10000]", 1, "Type"], ["struct LawnSquare *", 2, "Type"], ["void", 2, "Type"], ["elem2", 2, "ParmVar__DeclRefExpr"], ["qsort", 1, "DeclRefExpr"], ["10000", 1, "IntegerLiteral"], ["LawnSquare", 1, "Record"], ["lawn", 11, "Var__DeclRefExpr"], ["int (const void *_ const void *)", 1, "Type"], ["main", 1, "Function"], ["good", 8, "Field__Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 18, "Type"], ["dH", 1, "Field"], ["column", 3, "Var__DeclRefExpr"], ["const void *", 2, "Type"], ["FILE", 3, "Type"], ["fclose", 2, "DeclRefExpr"], ["row", 3, "Var__DeclRefExpr"], ["td_FILE", 1, "Typedef"], ["i", 1, "Field"], ["j", 1, "Field"], ["int (void)", 1, "Type"], ["ret_val", 2, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["int wmei_Var_ tqfi_Var_ z_ N_ M_ sjbi_Var_ row_ column_ good_ height;", 1, "DeclStmt"], ["struct LawnSquare lawn[100][100]_ lawnStraight[10000];", 1, "DeclStmt"], ["wmei_Var", 22, "Var__DeclRefExpr"], ["elem1", 2, "ParmVar__DeclRefExpr"], ["struct LawnSquare", 10, "Type"], ["100", 2, "IntegerLiteral"], ["fxyF_Var", 3, "Var__DeclRefExpr"], ["tqfi_Var", 26, "Var__DeclRefExpr"], ["struct LawnSquare [100][100]", 1, "Type"], ["\"out.txt\"", 1, "StringLiteral"], ["z", 9, "Var__DeclRefExpr"], ["N", 6, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["M", 6, "Var__DeclRefExpr"], ["sjbi_Var", 3, "Var__DeclRefExpr"], ["height", 4, "Var__DeclRefExpr"], ["struct LawnSquare [100]", 1, "Type"], ["cmp", 2, "Function__DeclRefExpr"], ["lawnStraight", 9, "Var__DeclRefExpr"]] 
cska_advex 2270488_2453486_cska_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["3", 1, "IntegerLiteral"], ["40", 4, "IntegerLiteral"], ["2", 8, "IntegerLiteral"], ["305", 4, "IntegerLiteral"], [";", 11, "NullStmt"], ["'T'", 1, "CharacterLiteral"], ["100", 1, "IntegerLiteral"], ["'O'", 1, "CharacterLiteral"], ["\"%s\"", 1, "StringLiteral"], ["0", 22, "IntegerLiteral"], ["\"Draw\"", 2, "StringLiteral"], ["int zcei_Var_ agni_Var_ scti_Var_ f_ board[4][4]_ fbwi_Var;", 1, "DeclStmt"], ["int [4]", 1, "Type"], ["char *", 1, "Type"], ["FILE *", 2, "Type"], ["output", 2, "Var__DeclRefExpr"], ["1", 13, "IntegerLiteral"], ["char", 2, "Type"], ["int (void)", 1, "Type"], ["char *[]", 1, "Type"], ["int [4][4]", 1, "Type"], ["\"Game has not completed\"", 2, "StringLiteral"], ["4", 27, "IntegerLiteral"], ["main", 1, "Function"], ["char [5]", 1, "Type"], ["fscanf", 2, "DeclRefExpr"], ["int", 8, "Type"], ["omgi_Var", 4, "Var__DeclRefExpr"], ["\"O won\"", 2, "StringLiteral"], ["10", 9, "IntegerLiteral"], ["kyuc_Var", 5, "Var__DeclRefExpr"], ["\"X won\"", 2, "StringLiteral"], ["fopen", 2, "DeclRefExpr"], ["agni_Var", 64, "Var__DeclRefExpr"], ["400", 4, "IntegerLiteral"], ["scti_Var", 25, "Var__DeclRefExpr"], ["f", 19, "Var__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["board", 23, "Var__DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["35", 4, "IntegerLiteral"], ["fbwi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["zcei_Var", 40, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["fsqF_Var", 4, "Var__DeclRefExpr"], ["5", 9, "IntegerLiteral"], ["FILE", 2, "Type"], ["fclose", 2, "DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["qwdF_Var", 3, "Var__DeclRefExpr"]] 
cska_advex 2270488_2463486_cska_advex.c [["fclose", 2, "DeclRefExpr"], ["\"%llu%llu\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["ryjF_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["gymF_Var", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int qvni_Var;", 1, "DeclStmt"], ["float", 1, "Type"], ["fprintf", 1, "DeclRefExpr"], ["c2", 6, "Var__DeclRefExpr"], ["c1", 4, "Var__DeclRefExpr"], ["int c1_ c2;", 1, "DeclStmt"], ["static char ss[150];", 1, "DeclStmt"], ["void (char *_ int_ int)", 1, "Type"], ["formpalindrome", 3, "Function__DeclRefExpr"], ["int (char *)", 2, "Type"], ["compare", 3, "Function__DeclRefExpr"], ["2.0", 2, "FloatingLiteral"], ["a", 9, "ParmVar__DeclRefExpr"], ["ss", 5, "Var__DeclRefExpr"], ["td_FI", 1, "Typedef"], ["void", 3, "Type"], ["ogsc_Var", 16, "ParmVar__DeclRefExpr"], ["c", 4, "ParmVar__DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["S", 7, "Var__DeclRefExpr"], ["0", 24, "IntegerLiteral"], ["priskirti", 5, "Function__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["char [150]", 4, "Type"], ["int (void)", 1, "Type"], ["char", 12, "Type"], ["td_F", 1, "Typedef"], ["checkpalindrome", 2, "Function__DeclRefExpr"], ["kieksk", 3, "Function__DeclRefExpr"], ["A", 4, "Var__DeclRefExpr"], ["unsigned long long", 3, "Type"], ["FILE *", 2, "Type"], ["td_ull", 3, "Typedef"], ["int gami_Var_ qkki_Var;", 1, "DeclStmt"], ["int (char *_ char *)", 1, "Type"], ["FILE", 4, "Type"], ["char *", 8, "Type"], ["b", 6, "ParmVar__DeclRefExpr"], ["ret_val", 6, "Var__DeclRefExpr"], ["ceil", 3, "DeclRefExpr"], ["int uiwi_Var;", 2, "DeclStmt"], ["uiwi_Var", 38, "Var__DeclRefExpr__ParmVar"], ["1", 17, "IntegerLiteral"], ["2", 3, "IntegerLiteral"], ["\"Case #%d: %llu\\n\"", 1, "StringLiteral"], ["void (char *_ unsigned long long)", 1, "Type"], ["td_ull a_ b;", 1, "DeclStmt"], ["10", 5, "IntegerLiteral"], ["grdu_Var", 4, "ParmVar__DeclRefExpr"], [";", 4, "NullStmt"], ["square", 2, "Function__DeclRefExpr"], ["void (char *_ char *)", 1, "Type"], ["fscanf", 2, "DeclRefExpr"], ["qkki_Var", 3, "Var__DeclRefExpr"], ["int", 24, "Type"], ["gami_Var", 15, "Var__DeclRefExpr__ParmVar"], ["150", 12, "IntegerLiteral"], ["qvni_Var", 15, "Var__DeclRefExpr"], ["gibi_Var", 5, "Var__DeclRefExpr"]] 
cska_advex 2974486_5709773144064000_cska_advex.c [["fclose", 2, "DeclRefExpr"], ["hbpd_Var", 8, "Var__DeclRefExpr"], ["ttb", 4, "Var__DeclRefExpr"], ["rate", 8, "Var__DeclRefExpr"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["\"Case #%d: %lf\\n\"", 1, "StringLiteral"], ["zhzF_Var", 4, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["F", 4, "Var__DeclRefExpr"], ["C", 7, "Var__DeclRefExpr"], ["flag", 6, "Var__DeclRefExpr"], ["double C_ F_ X_ rate_ rate2_ ans_ ttb_ hbpd_Var_ c_ c2;", 1, "DeclStmt"], ["int (void)", 1, "Type"], ["zvmi_Var", 4, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["ans", 5, "Var__DeclRefExpr"], ["X", 5, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["main", 1, "Function"], ["double", 10, "Type"], ["int fbwi_Var_ flag;", 1, "DeclStmt"], ["rate2", 7, "Var__DeclRefExpr"], ["fprintf", 1, "DeclRefExpr"], ["c2", 6, "Var__DeclRefExpr"], ["fbwi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["c", 7, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["fopen", 2, "DeclRefExpr"], ["nxrF_Var", 3, "Var__DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["0.0", 3, "FloatingLiteral"], ["\"w\"", 1, "StringLiteral"], ["int", 4, "Type"], ["fscanf", 2, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["2.0", 1, "FloatingLiteral"]] 
cska_advex 2974486_5756407898963968_cska_advex.c [["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"%s\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["4", 5, "IntegerLiteral"], ["int [4][4]", 1, "Type"], ["zvmi_Var", 17, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["\"out.txt\"", 1, "StringLiteral"], ["int [4]", 1, "Type"], ["main", 1, "Function"], ["16", 3, "IntegerLiteral"], ["fprintf", 3, "DeclRefExpr"], ["board", 3, "Var__DeclRefExpr"], ["psb", 5, "Var__DeclRefExpr"], ["taqi_Var", 5, "Var__DeclRefExpr"], ["FILE", 3, "Type"], ["fclose", 2, "DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["row", 3, "Var__DeclRefExpr"], ["ans", 3, "Var__DeclRefExpr"], ["td_F", 1, "Typedef"], ["0", 9, "IntegerLiteral"], ["int [16]", 1, "Type"], ["glti_Var", 3, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int", 12, "Type"], ["num", 4, "Var__DeclRefExpr"], ["qksF_Var", 5, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["fopen", 2, "DeclRefExpr"], ["int glti_Var_ zvmi_Var_ row_ board[4][4]_ psb_ ans_ num[16];", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 3, "StringLiteral"], ["2", 2, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["int iodi_Var;", 1, "DeclStmt"], ["\"Bad magician!\"", 1, "StringLiteral"], ["ykdF_Var", 5, "Var__DeclRefExpr"], ["int taqi_Var;", 1, "DeclStmt"], ["iodi_Var", 5, "Var__DeclRefExpr"], [";", 1, "NullStmt"]] 
dahlukeh 1460488_1483485_dahlukeh.c [["char [2000]", 1, "Type"], ["char line[2000];", 1, "DeclStmt"], ["\" \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["printf", 4, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["'\\0'", 2, "CharacterLiteral"], ["\"%d \"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["'v'", 2, "CharacterLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["\"\\n\"", 1, "StringLiteral"], ["'u'", 2, "CharacterLiteral"], ["void", 2, "Type"], ["'b'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["\"%c\"", 3, "StringLiteral"], ["map", 2, "Var__DeclRefExpr"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["void ()", 2, "Type"], ["'a'", 4, "CharacterLiteral"], ["i", 15, "Var__DeclRefExpr"], ["char []", 1, "Type"], ["char", 3, "Type"], ["line", 7, "Var__DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["'k'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 3, "CharacterLiteral"], ["\"in.txt\"", 1, "StringLiteral"], ["handleCase", 3, "Function__DeclRefExpr"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["c", 5, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["'n'", 2, "CharacterLiteral"], ["scanf", 3, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["main", 1, "Function"], ["2000", 1, "IntegerLiteral"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["int", 4, "Type"], ["'e'", 2, "CharacterLiteral"], ["int n;", 1, "DeclStmt"]] 
dahlukeh 1460488_1483488_dahlukeh.c [["back", 2, "Var__DeclRefExpr"], ["front", 2, "Var__DeclRefExpr"], ["curN", 8, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["modA", 3, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["int (int)", 2, "Type"], ["others", 3, "Var__DeclRefExpr"], ["d", 5, "Var__DeclRefExpr"], ["added", 4, "Var__DeclRefExpr"], ["n", 7, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["a", 4, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["int n;", 1, "DeclStmt"], ["int", 23, "Type"], ["howManyPairs", 3, "Function__DeclRefExpr"], ["valid", 4, "Var__DeclRefExpr"], ["void ()", 2, "Type"], ["i", 17, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"in.txt\"", 1, "StringLiteral"], ["handleCase", 3, "Function__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["\"%d \"", 1, "StringLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["int [10]", 1, "Type"], ["0", 10, "IntegerLiteral"], ["mult", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["\"%d %d \"", 1, "StringLiteral"], ["total", 6, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["10", 5, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["int others[10];", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"]] 
dahlukeh 1460488_1595491_dahlukeh.c [["2", 2, "IntegerLiteral"], ["bestP", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["void ()", 2, "Type"], ["i", 15, "Var__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["main", 1, "Function"], ["int (int)", 4, "Type"], ["freopen", 2, "DeclRefExpr"], ["handleCase", 3, "Function__DeclRefExpr"], ["\"in.txt\"", 1, "StringLiteral"], ["int", 21, "Type"], ["canBeMadeSup", 3, "Function__DeclRefExpr"], ["totalScores", 4, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["score", 9, "ParmVar__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["numP", 4, "Var__DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["canBeMadeNorm", 3, "Function__DeclRefExpr"], ["numS", 4, "Var__DeclRefExpr"], ["void", 2, "Type"], ["1000", 1, "IntegerLiteral"], ["above", 4, "Var__DeclRefExpr"], ["int n;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"%d \"", 2, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int [1000]", 1, "Type"], ["total", 4, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["\"%d %d %d \"", 1, "StringLiteral"], ["rem", 5, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"]] 
dahlukeh 2270488_2449486_dahlukeh.c [["\"YES\\n\"", 1, "StringLiteral"], ["allLess", 8, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["int (int_ int)", 2, "Type"], ["int [100][100]", 1, "Type"], ["doesWork", 3, "Function__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["int n;", 1, "DeclStmt"], ["grid", 5, "Var__DeclRefExpr"], ["num", 3, "Var__DeclRefExpr"], ["x", 4, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["handleCase", 3, "Function__DeclRefExpr"], ["int [100]", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["void ()", 2, "Type"], ["h", 5, "Var__DeclRefExpr"], ["i", 23, "Var__DeclRefExpr"], ["int", 17, "Type"], ["w", 5, "Var__DeclRefExpr"], ["0", 10, "IntegerLiteral"], ["100", 2, "IntegerLiteral"], ["\"bin.txt\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"bout.txt\"", 1, "StringLiteral"], ["j", 9, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["\"%d \"", 2, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["\"%d %d \"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["y", 4, "ParmVar__DeclRefExpr"], ["\"NO\\n\"", 1, "StringLiteral"], ["return", 1, "ReturnStmt"]] 
dahlukeh 2270488_2453486_dahlukeh.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["return", 2, "ReturnStmt"], ["'O'", 1, "CharacterLiteral"], ["int type;", 1, "DeclStmt"], ["char", 1, "Type"], ["cur", 5, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["0", 17, "IntegerLiteral"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["dx", 2, "Var__DeclRefExpr"], ["full", 3, "Var__DeclRefExpr"], ["4", 10, "IntegerLiteral"], ["result", 3, "Var__DeclRefExpr"], ["grid", 6, "Var__DeclRefExpr"], ["int [4]", 1, "Type"], ["int ()", 1, "Type"], ["int []", 2, "Type"], ["y", 9, "ParmVar__DeclRefExpr"], ["void ()", 2, "Type"], ["dy", 2, "Var__DeclRefExpr"], ["i", 18, "Var__DeclRefExpr"], ["x", 9, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["\"ain.txt\"", 1, "StringLiteral"], ["t", 4, "ParmVar__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["int (int_ int_ int)", 2, "Type"], ["handleCase", 3, "Function__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["type", 6, "Var__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["k", 5, "Var__DeclRefExpr"], ["int [4][4]", 1, "Type"], ["\"%c \"", 1, "StringLiteral"], ["1", 16, "IntegerLiteral"], ["2", 7, "IntegerLiteral"], ["getResult", 3, "Function__DeclRefExpr"], ["int", 22, "Type"], ["\"r\"", 1, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["\"aout.txt\"", 1, "StringLiteral"], ["int n;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["\"%d \"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["'T'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["j", 9, "Var__DeclRefExpr"]] 
dahlukeh 2270488_2463486_dahlukeh.c [["numDig", 4, "Var__DeclRefExpr"], ["10ll", 7, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["j", 4, "Var__DeclRefExpr"], ["total", 4, "Var__DeclRefExpr"], ["0ll", 2, "IntegerLiteral"], ["long long cur;", 1, "DeclStmt"], ["result", 2, "Var__DeclRefExpr"], ["dig", 5, "Var__DeclRefExpr"], ["\"%I64d %I64d \"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["end", 2, "Var__DeclRefExpr"], ["1ll", 1, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["'0'", 2, "CharacterLiteral"], ["int i;", 5, "DeclStmt"], ["scanf", 2, "DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["int (long long)", 4, "Type"], ["start", 3, "ParmVar__DeclRefExpr"], ["i", 35, "Var__DeclRefExpr"], ["numDigits", 4, "Function__DeclRefExpr"], ["long long (long long)", 2, "Type"], ["int", 18, "Type"], ["writeNumber", 4, "Function__DeclRefExpr"], ["char", 6, "Type"], ["1", 10, "IntegerLiteral"], ["digits", 5, "ParmVar__DeclRefExpr"], ["base", 3, "ParmVar__DeclRefExpr"], ["readNumber", 3, "Function__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["cur", 10, "Var__DeclRefExpr"], ["numSmall", 9, "Var__DeclRefExpr"], ["main", 1, "Function"], ["buf", 8, "ParmVar__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["\"cout.txt\"", 1, "StringLiteral"], ["void ()", 2, "Type"], ["pal", 5, "Var__DeclRefExpr"], ["void", 4, "Type"], ["\"%I64d\\n\"", 1, "StringLiteral"], ["a", 3, "Var__DeclRefExpr"], ["findNum", 4, "Function__DeclRefExpr"], ["char *", 4, "Type"], ["b", 3, "Var__DeclRefExpr"], ["handleCase", 3, "Function__DeclRefExpr"], ["200", 1, "IntegerLiteral"], ["num", 16, "ParmVar__DeclRefExpr"], ["int n;", 1, "DeclStmt"], ["char [200]", 1, "Type"], ["long long (long long_ int)", 2, "Type"], ["void (long long_ char *)", 2, "Type"], ["'\\0'", 3, "CharacterLiteral"], ["\"%d \"", 1, "StringLiteral"], ["long long", 25, "Type"], ["long long (char *)", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["isPal", 3, "Function__DeclRefExpr"], ["getPal", 3, "Function__DeclRefExpr"], ["int ()", 1, "Type"], ["\"cin.txt\"", 1, "StringLiteral"]] 
dahlukeh 2974486_5709773144064000_dahlukeh.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["\"%d \"", 1, "StringLiteral"], ["int", 3, "Type"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["i", 5, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["double", 6, "Type"], ["X", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["\"%lf %lf %lf \"", 1, "StringLiteral"], ["F", 5, "Var__DeclRefExpr"], ["C", 5, "Var__DeclRefExpr"], ["void", 1, "Type"], ["handle", 2, "Function__DeclRefExpr"], ["0.0", 1, "FloatingLiteral"], ["\"%.7f\\n\"", 1, "StringLiteral"], ["p", 2, "Var__DeclRefExpr"], ["2.0", 1, "FloatingLiteral"], ["res", 4, "Var__DeclRefExpr"], ["curR", 5, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"]] 
dahlukeh 2974486_5756407898963968_dahlukeh.c [["1", 7, "IntegerLiteral"], ["101", 4, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["int *", 1, "Type"], ["i", 29, "Var__DeclRefExpr"], ["isValid2", 3, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["grid", 4, "Var__DeclRefExpr"], ["4", 5, "IntegerLiteral"], ["void", 2, "Type"], ["void (int *)", 1, "Type"], ["isValid1", 3, "Var__DeclRefExpr"], ["int", 14, "Type"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int [101][101]", 1, "Type"], ["\"Bad magician!\\n\"", 1, "StringLiteral"], ["found", 4, "Var__DeclRefExpr"], ["int [101]", 3, "Type"], ["an", 4, "Var__DeclRefExpr"], ["16", 2, "IntegerLiteral"], ["main", 1, "Function"], ["find", 3, "Function__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["handle", 2, "Function__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["ans", 3, "Var__DeclRefExpr"], ["j", 9, "Var__DeclRefExpr"], ["\"%d \"", 5, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["mult", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int t_ i;", 1, "DeclStmt"], ["ar", 3, "ParmVar__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"]] 
dahlukeh_advex 1460488_1483485_dahlukeh_advex.c [["char [2000]", 1, "Type"], ["char line[2000];", 1, "DeclStmt"], ["\" \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["printf", 4, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["'\\0'", 2, "CharacterLiteral"], ["\"%d \"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["'v'", 2, "CharacterLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["\"\\n\"", 1, "StringLiteral"], ["'u'", 2, "CharacterLiteral"], ["void", 2, "Type"], ["'b'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["\"%c\"", 3, "StringLiteral"], ["map", 2, "Var__DeclRefExpr"], ["'y'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'h'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["void ()", 2, "Type"], ["'a'", 4, "CharacterLiteral"], ["i", 15, "Var__DeclRefExpr"], ["char []", 1, "Type"], ["char", 3, "Type"], ["line", 7, "Var__DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["'k'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 3, "CharacterLiteral"], ["\"in.txt\"", 1, "StringLiteral"], ["handleCase", 3, "Function__DeclRefExpr"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["c", 5, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["'n'", 2, "CharacterLiteral"], ["scanf", 3, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["main", 1, "Function"], ["2000", 1, "IntegerLiteral"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["int", 4, "Type"], ["'e'", 2, "CharacterLiteral"], ["int n;", 1, "DeclStmt"]] 
dahlukeh_advex 1460488_1483488_dahlukeh_advex.c [["back", 2, "Var__DeclRefExpr"], ["front", 2, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["modA", 4, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["int (int)", 2, "Type"], ["others", 3, "Var__DeclRefExpr"], ["d", 5, "Var__DeclRefExpr"], ["added", 4, "Var__DeclRefExpr"], ["n", 7, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["a", 4, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["int n;", 1, "DeclStmt"], ["int", 23, "Type"], ["howManyPairs", 3, "Function__DeclRefExpr"], ["valid", 4, "Var__DeclRefExpr"], ["void ()", 2, "Type"], ["i", 16, "Var__DeclRefExpr"], ["handleCase", 3, "Function__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["\"%d \"", 1, "StringLiteral"], ["\"out.txt\"", 1, "StringLiteral"], ["int [10]", 1, "Type"], ["0", 10, "IntegerLiteral"], ["mult", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["\"%d %d \"", 1, "StringLiteral"], ["total", 6, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["curN", 8, "Var__DeclRefExpr"], ["int modA;", 1, "DeclStmt"], ["10", 5, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["int others[10];", 1, "DeclStmt"], ["j", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"]] 
dahlukeh_advex 1460488_1595491_dahlukeh_advex.c [["2", 2, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"%d %d %d \"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["hihi_Var", 15, "Var__DeclRefExpr"], ["bestP", 7, "Var__DeclRefExpr"], ["\"%d \"", 2, "StringLiteral"], ["qbni_Var", 3, "Var__DeclRefExpr"], ["above", 4, "Var__DeclRefExpr"], ["1000", 1, "IntegerLiteral"], ["void", 2, "Type"], ["int qbni_Var;", 1, "DeclStmt"], ["ret_val", 2, "Var__DeclRefExpr"], ["canBeMadeNorm", 3, "Function__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["score", 9, "ParmVar__DeclRefExpr"], ["totalScores", 4, "Var__DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["numP", 4, "Var__DeclRefExpr"], ["canBeMadeSup", 3, "Function__DeclRefExpr"], ["int", 22, "Type"], ["numS", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int hihi_Var;", 2, "DeclStmt"], ["do_voigrd_fct", 3, "Function__DeclRefExpr"], ["int [1000]", 1, "Type"], ["void ()", 2, "Type"], ["hfhi_Var", 4, "Var__DeclRefExpr"], ["int (int)", 4, "Type"], ["rem", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"]] 
dahlukeh_advex 2270488_2449486_dahlukeh_advex.c [["allLess", 8, "Var__DeclRefExpr"], ["int ryfi_Var;", 1, "DeclStmt"], ["num", 3, "Var__DeclRefExpr"], ["return", 1, "ReturnStmt"], ["ceti_Var", 9, "Var__DeclRefExpr"], ["int ryfi_Var_ ceti_Var;", 1, "DeclStmt"], ["1", 4, "IntegerLiteral"], ["\"%d %d \"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["ryfi_Var", 22, "Var__DeclRefExpr"], ["\"%d \"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["brpi_Var", 3, "Var__DeclRefExpr"], ["\"YES\\n\"", 1, "StringLiteral"], ["0", 10, "IntegerLiteral"], ["int brpi_Var;", 1, "DeclStmt"], ["w", 5, "Var__DeclRefExpr"], ["int", 17, "Type"], ["h", 5, "Var__DeclRefExpr"], ["void ()", 2, "Type"], ["do_voiiod_fct", 3, "Function__DeclRefExpr"], ["void", 2, "Type"], ["x", 4, "ParmVar__DeclRefExpr"], ["\"NO\\n\"", 1, "StringLiteral"], ["lrfi_Var", 5, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["100", 2, "IntegerLiteral"], ["doesWork", 3, "Function__DeclRefExpr"], ["int [100][100]", 1, "Type"], ["int (int_ int)", 2, "Type"], ["y", 4, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"]] 
dahlukeh_advex 2270488_2453486_dahlukeh_advex.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["return", 2, "ReturnStmt"], ["'O'", 1, "CharacterLiteral"], ["int type;", 1, "DeclStmt"], ["char", 1, "Type"], ["0", 17, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["dx", 2, "Var__DeclRefExpr"], ["result", 3, "Var__DeclRefExpr"], ["grid", 6, "Var__DeclRefExpr"], ["int [4]", 1, "Type"], ["int ()", 1, "Type"], ["int []", 2, "Type"], ["y", 9, "ParmVar__DeclRefExpr"], ["void ()", 2, "Type"], ["dy", 2, "Var__DeclRefExpr"], ["i", 18, "Var__DeclRefExpr"], ["x", 9, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["t", 4, "ParmVar__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["cur", 5, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["int (int_ int_ int)", 2, "Type"], ["handleCase", 3, "Function__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["type", 6, "Var__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["k", 5, "Var__DeclRefExpr"], ["int [4][4]", 1, "Type"], ["\"%c \"", 1, "StringLiteral"], ["1", 16, "IntegerLiteral"], ["2", 7, "IntegerLiteral"], ["getResult", 3, "Function__DeclRefExpr"], ["int", 22, "Type"], ["\"aout.txt\"", 1, "StringLiteral"], ["int n;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["\"%d \"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["'T'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["j", 9, "Var__DeclRefExpr"], ["4", 10, "IntegerLiteral"], ["full", 3, "Var__DeclRefExpr"]] 
dahlukeh_advex 2270488_2463486_dahlukeh_advex.c [["numDig", 4, "Var__DeclRefExpr"], ["10ll", 7, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["gnri_Var", 3, "Var__DeclRefExpr"], ["0ll", 2, "IntegerLiteral"], ["long long cur;", 1, "DeclStmt"], ["result", 2, "Var__DeclRefExpr"], ["dig", 5, "Var__DeclRefExpr"], ["\"%I64d %I64d \"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["'0'", 2, "CharacterLiteral"], ["int i;", 5, "DeclStmt"], ["int (long long)", 4, "Type"], ["bpvl_Var", 4, "Var__DeclRefExpr"], ["start", 3, "ParmVar__DeclRefExpr"], ["i", 34, "Var__DeclRefExpr"], ["numDigits", 4, "Function__DeclRefExpr"], ["long long (long long)", 2, "Type"], ["int", 21, "Type"], ["do_voiuue_fct", 3, "Function__DeclRefExpr"], ["writeNumber", 4, "Function__DeclRefExpr"], ["char", 6, "Type"], ["buf", 8, "ParmVar__DeclRefExpr"], ["1", 11, "IntegerLiteral"], ["digits", 5, "ParmVar__DeclRefExpr"], ["base", 3, "ParmVar__DeclRefExpr"], ["readNumber", 3, "Function__DeclRefExpr"], ["cur", 10, "Var__DeclRefExpr"], ["numSmall", 9, "Var__DeclRefExpr"], ["main", 1, "Function"], ["void ()", 2, "Type"], ["pal", 5, "Var__DeclRefExpr"], ["void", 4, "Type"], ["\"%I64d\\n\"", 1, "StringLiteral"], ["a", 3, "Var__DeclRefExpr"], ["findNum", 4, "Function__DeclRefExpr"], ["end", 2, "Var__DeclRefExpr"], ["1ll", 1, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["char *", 4, "Type"], ["b", 3, "Var__DeclRefExpr"], ["ret_val", 6, "Var__DeclRefExpr"], ["200", 1, "IntegerLiteral"], ["num", 16, "ParmVar__DeclRefExpr"], ["int n;", 1, "DeclStmt"], ["char [200]", 1, "Type"], ["long long (long long_ int)", 2, "Type"], ["void (long long_ char *)", 2, "Type"], ["isPal", 3, "Function__DeclRefExpr"], ["getPal", 3, "Function__DeclRefExpr"], ["int ()", 1, "Type"], ["n", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["'\\0'", 3, "CharacterLiteral"], ["long long", 25, "Type"], ["long long (char *)", 2, "Type"], ["\"%d \"", 1, "StringLiteral"]] 
dahlukeh_advex 2974486_5709773144064000_dahlukeh_advex.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["\"%d \"", 1, "StringLiteral"], ["int", 3, "Type"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["i", 5, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["double", 6, "Type"], ["X", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["\"%lf %lf %lf \"", 1, "StringLiteral"], ["F", 5, "Var__DeclRefExpr"], ["C", 5, "Var__DeclRefExpr"], ["void", 1, "Type"], ["handle", 2, "Function__DeclRefExpr"], ["0.0", 1, "FloatingLiteral"], ["\"%.7f\\n\"", 1, "StringLiteral"], ["p", 2, "Var__DeclRefExpr"], ["2.0", 1, "FloatingLiteral"], ["res", 4, "Var__DeclRefExpr"], ["curR", 5, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"]] 
dahlukeh_advex 2974486_5756407898963968_dahlukeh_advex.c [["int t_ i;", 1, "DeclStmt"], ["\"w\"", 1, "StringLiteral"], ["1", 7, "IntegerLiteral"], ["101", 4, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["int *", 1, "Type"], ["i", 29, "Var__DeclRefExpr"], ["isValid2", 3, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["t", 3, "Var__DeclRefExpr"], ["ar", 3, "ParmVar__DeclRefExpr"], ["grid", 4, "Var__DeclRefExpr"], ["4", 5, "IntegerLiteral"], ["void", 2, "Type"], ["void (int *)", 1, "Type"], ["isValid1", 3, "Var__DeclRefExpr"], ["int", 14, "Type"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int [101][101]", 1, "Type"], ["\"Bad magician!\\n\"", 1, "StringLiteral"], ["found", 4, "Var__DeclRefExpr"], ["int [101]", 3, "Type"], ["an", 4, "Var__DeclRefExpr"], ["16", 2, "IntegerLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["find", 3, "Function__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["handle", 2, "Function__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["ans", 3, "Var__DeclRefExpr"], ["j", 9, "Var__DeclRefExpr"], ["\"%d \"", 5, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["mult", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["\"replace-me.out\"", 1, "StringLiteral"]] 
Explorers 1460488_1483485_Explorers.c [["printf", 1, "DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["96", 1, "IntegerLiteral"], ["continue", 1, "ContinueStmt"], ["' '", 1, "CharacterLiteral"], ["0", 3, "IntegerLiteral"], ["\"%d \"", 1, "StringLiteral"], ["gets", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["6", 2, "IntegerLiteral"], ["16", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["23", 2, "IntegerLiteral"], ["14", 2, "IntegerLiteral"], ["20", 2, "IntegerLiteral"], ["strlen", 1, "DeclRefExpr"], ["21", 2, "IntegerLiteral"], ["char [30][105]", 2, "Type"], ["char str[30][105];", 1, "DeclStmt"], ["len", 3, "Var__DeclRefExpr"], ["24", 2, "IntegerLiteral"], ["12", 2, "IntegerLiteral"], ["puts", 1, "DeclRefExpr"], ["105", 2, "IntegerLiteral"], ["j", 7, "Var__DeclRefExpr"], ["char output[30][105];", 1, "DeclStmt"], ["str", 7, "Var__DeclRefExpr"], ["4", 2, "IntegerLiteral"], ["i", 14, "Var__DeclRefExpr"], ["30", 2, "IntegerLiteral"], ["13", 2, "IntegerLiteral"], ["9", 2, "IntegerLiteral"], ["main", 1, "Function"], ["int []", 1, "Type"], ["19", 2, "IntegerLiteral"], ["11", 2, "IntegerLiteral"], ["int ntest_ i_ j_ len;", 1, "DeclStmt"], ["ntest", 4, "Var__DeclRefExpr"], ["char", 2, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["char [105]", 2, "Type"], ["25", 2, "IntegerLiteral"], ["int", 6, "Type"], ["26", 2, "IntegerLiteral"], ["8", 2, "IntegerLiteral"], ["18", 2, "IntegerLiteral"], ["7", 2, "IntegerLiteral"], ["output", 1, "Var"], ["mapping", 2, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["17", 2, "IntegerLiteral"], ["5", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["15", 2, "IntegerLiteral"], ["int ()", 1, "Type"], ["22", 2, "IntegerLiteral"]] 
Explorers 1460488_1483488_Explorers.c [["n", 3, "ParmVar__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["10", 4, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["pairnum", 5, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["multiplier", 3, "Var__DeclRefExpr"], ["divider", 4, "Var__DeclRefExpr"], ["ntest", 4, "Var__DeclRefExpr"], ["int (long)", 1, "Type"], ["j", 7, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["pow", 2, "DeclRefExpr"], ["main", 1, "Function"], ["len", 5, "Var__DeclRefExpr"], ["i", 10, "Var__DeclRefExpr"], ["npairs", 3, "Var__DeclRefExpr"], ["divisor", 3, "Var__DeclRefExpr"], ["remainder", 3, "Var__DeclRefExpr"], ["long la_ lb_ j_ divider_ multiplier_ remainder_ divisor_ pairnum;", 1, "DeclStmt"], ["numlen", 4, "DeclRefExpr__Function"], ["int ()", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["int [50]", 1, "Type"], ["50", 1, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["la", 4, "Var__DeclRefExpr"], ["\"%ld %ld\"", 1, "StringLiteral"], ["int", 7, "Type"], ["lb", 4, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["long", 9, "Type"]] 
Explorers 1460488_1595491_Explorers.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["10", 3, "IntegerLiteral"], ["1", 7, "IntegerLiteral"], ["2", 3, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["remaining", 6, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["int remaining;", 1, "DeclStmt"], ["ntest", 4, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["int sjscore;", 1, "DeclStmt"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["bscore", 8, "Var__DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["int", 11, "Type"], ["nparticipant", 3, "Var__DeclRefExpr"], ["sjscore", 11, "Var__DeclRefExpr"], ["int ntest_ i_ j_ nparticipant_ nsurprising_ bscore_ pscore;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["nsurprising", 6, "Var__DeclRefExpr"], ["ngoogle", 7, "Var__DeclRefExpr"], ["pscore", 4, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["0", 11, "IntegerLiteral"]] 
Explorers 2270488_2449486_Explorers.c [["int i;", 2, "DeclStmt"], ["c", 3, "ParmVar__DeclRefExpr"], ["r", 3, "ParmVar__DeclRefExpr"], ["int (int_ int_ int_ int_ int (*)[10])", 2, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["100", 1, "IntegerLiteral"], ["vertCheck", 2, "DeclRefExpr__Function"], ["char *res[100];", 1, "DeclStmt"], ["int [10][10]", 3, "Type"], ["scanf", 3, "DeclRefExpr"], ["i", 21, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["k", 11, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["int data[10][10];", 1, "DeclStmt"], ["0", 12, "IntegerLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["char *[100]", 1, "Type"], ["data", 9, "Var__DeclRefExpr__ParmVar"], ["j", 11, "Var__DeclRefExpr"], ["ntest", 4, "Var__DeclRefExpr"], ["int", 23, "Type"], ["res", 4, "Var__DeclRefExpr"], ["int i_ k_ j;", 1, "DeclStmt"], ["row", 9, "Var__DeclRefExpr__ParmVar"], ["int [10]", 3, "Type"], ["char *", 1, "Type"], ["flagNo", 5, "Var__DeclRefExpr"], ["10", 6, "IntegerLiteral"], ["char", 1, "Type"], ["break", 2, "BreakStmt"], ["int row_ col;", 1, "DeclStmt"], ["col", 9, "Var__DeclRefExpr__ParmVar"], ["\"%d\"", 2, "StringLiteral"], ["1", 11, "IntegerLiteral"], ["\"NO\"", 1, "StringLiteral"], ["horizCheck", 2, "DeclRefExpr__Function"], ["int ntest;", 1, "DeclStmt"], ["\"YES\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"]] 
Explorers 2270488_2453486_Explorers.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["'D'", 2, "CharacterLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 9, "IntegerLiteral"], ["1", 25, "IntegerLiteral"], ["'.'", 4, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["ntest", 4, "Var__DeclRefExpr"], ["'X'", 9, "CharacterLiteral"], ["int flagDot;", 1, "DeclStmt"], ["'G'", 2, "CharacterLiteral"], ["int flagWin;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["char [5]", 1, "Type"], ["4", 16, "IntegerLiteral"], ["char [10]", 2, "Type"], ["int ntest;", 1, "DeclStmt"], ["res", 12, "Var__DeclRefExpr"], ["\"%s\"", 1, "StringLiteral"], ["'O'", 9, "CharacterLiteral"], ["char [4][5]", 1, "Type"], ["testcase", 6, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["nX", 17, "Var__DeclRefExpr"], ["nDot", 1, "Var"], ["flagWin", 14, "Var__DeclRefExpr"], ["char res[10];", 1, "DeclStmt"], ["char testcase[4][5];", 1, "DeclStmt"], ["k", 9, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["i", 19, "Var__DeclRefExpr"], ["int i_ j_ k_ nX_ nO_ nT_ nDot;", 1, "DeclStmt"], ["nline", 1, "Var"], ["j", 23, "Var__DeclRefExpr"], ["int", 11, "Type"], ["char nline[10];", 1, "DeclStmt"], ["nO", 17, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["nT", 17, "Var__DeclRefExpr"], ["flagDot", 7, "Var__DeclRefExpr"], ["0", 24, "IntegerLiteral"], ["char", 3, "Type"], ["break", 27, "BreakStmt"]] 
Explorers 2270488_2463486_Explorers.c [["0.0", 1, "FloatingLiteral"], ["denom", 3, "Var__DeclRefExpr"], ["double", 2, "Type"], ["rev", 4, "Var__DeclRefExpr"], ["int (int)", 2, "Type"], ["1", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["res", 3, "Var__DeclRefExpr"], ["i", 10, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int ntest;", 1, "DeclStmt"], ["remnm", 4, "Var__DeclRefExpr"], ["int", 15, "Type"], ["ntest", 4, "Var__DeclRefExpr"], ["j", 6, "Var__DeclRefExpr"], ["nm", 5, "ParmVar__DeclRefExpr"], ["continue", 2, "ContinueStmt"], ["pald", 3, "DeclRefExpr__Function"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["sqroot", 5, "Var__DeclRefExpr"], ["double sqroot_ denom;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int [100]", 1, "Type"], ["sqnm", 3, "Var__DeclRefExpr"], ["sqrt", 1, "DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["0", 11, "IntegerLiteral"], ["sqrtInt", 2, "DeclRefExpr__Function"], ["start", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["int start_ end_ sqnm_ i_ j;", 1, "DeclStmt"], ["10", 3, "IntegerLiteral"], ["end", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"]] 
Explorers 2974486_5709773144064000_Explorers.c [["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["int ncase_ i;", 1, "DeclStmt"], ["c", 3, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["ncase", 3, "Var__DeclRefExpr"], ["int", 3, "Type"], ["main", 1, "Function"], ["i", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["double c_ f_ x_ init_ mintime_ caltime_ timetillfarm;", 1, "DeclStmt"], ["double", 7, "Type"], ["timetillfarm", 4, "Var__DeclRefExpr"], ["f", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["init", 6, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["caltime", 5, "Var__DeclRefExpr"], ["mintime", 5, "Var__DeclRefExpr"]] 
Explorers 2974486_5756407898963968_Explorers.c [["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 2, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["tmp3", 2, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["tmp2", 2, "Var__DeclRefExpr"], ["tmp1", 2, "Var__DeclRefExpr"], ["int tmp1_ tmp2_ tmp3_ tmp4;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int num;", 1, "DeclStmt"], ["flag2", 6, "Var__DeclRefExpr"], ["b", 6, "ParmVar__DeclRefExpr"], ["n2rval4", 3, "Var__DeclRefExpr"], ["0", 17, "IntegerLiteral"], ["num", 6, "Var__DeclRefExpr"], ["d", 6, "ParmVar__DeclRefExpr"], ["flag1", 10, "Var__DeclRefExpr"], ["int ncase;", 1, "DeclStmt"], ["res", 6, "Var__DeclRefExpr"], ["h", 5, "ParmVar__DeclRefExpr"], ["g", 5, "ParmVar__DeclRefExpr"], ["e", 5, "ParmVar__DeclRefExpr"], ["2", 6, "IntegerLiteral"], ["int (int_ int_ int_ int_ int_ int_ int_ int)", 1, "Type"], ["int ()", 1, "Type"], ["int", 31, "Type"], ["4", 1, "IntegerLiteral"], ["tmp4", 2, "Var__DeclRefExpr"], ["n1rval4", 3, "Var__DeclRefExpr"], ["n2rval2", 3, "Var__DeclRefExpr"], ["c", 6, "ParmVar__DeclRefExpr"], ["a", 6, "ParmVar__DeclRefExpr"], ["f", 5, "ParmVar__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["ncase", 3, "Var__DeclRefExpr"], ["int res;", 1, "DeclStmt"], ["checkCard", 2, "Function__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["main", 1, "Function"], ["n2rval1", 3, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["int i_ j_ k_ nans_ n1rval1_ n1rval2_ n1rval3_ n1rval4_ n2rval1_ n2rval2_ n2rval3_ n2rval4;", 1, "DeclStmt"], ["j", 5, "Var__DeclRefExpr"], ["nans", 3, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["n1rval1", 3, "Var__DeclRefExpr"], ["n1rval2", 3, "Var__DeclRefExpr"], ["n1rval3", 3, "Var__DeclRefExpr"], ["\"%d %d %d %d\"", 3, "StringLiteral"], ["n2rval3", 3, "Var__DeclRefExpr"]] 
Explorers_advex 1460488_1483485_Explorers_advex.c [["printf", 1, "DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["96", 1, "IntegerLiteral"], ["continue", 1, "ContinueStmt"], ["' '", 1, "CharacterLiteral"], ["0", 3, "IntegerLiteral"], ["\"%d \"", 1, "StringLiteral"], ["gets", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["6", 2, "IntegerLiteral"], ["16", 2, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["23", 2, "IntegerLiteral"], ["14", 2, "IntegerLiteral"], ["20", 2, "IntegerLiteral"], ["strlen", 1, "DeclRefExpr"], ["21", 2, "IntegerLiteral"], ["char [30][105]", 2, "Type"], ["char str[30][105];", 1, "DeclStmt"], ["len", 3, "Var__DeclRefExpr"], ["24", 2, "IntegerLiteral"], ["12", 2, "IntegerLiteral"], ["puts", 1, "DeclRefExpr"], ["105", 2, "IntegerLiteral"], ["j", 7, "Var__DeclRefExpr"], ["char output[30][105];", 1, "DeclStmt"], ["str", 7, "Var__DeclRefExpr"], ["4", 2, "IntegerLiteral"], ["i", 14, "Var__DeclRefExpr"], ["30", 2, "IntegerLiteral"], ["13", 2, "IntegerLiteral"], ["9", 2, "IntegerLiteral"], ["main", 1, "Function"], ["int []", 1, "Type"], ["19", 2, "IntegerLiteral"], ["11", 2, "IntegerLiteral"], ["int ntest_ i_ j_ len;", 1, "DeclStmt"], ["ntest", 4, "Var__DeclRefExpr"], ["char", 2, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["char [105]", 2, "Type"], ["25", 2, "IntegerLiteral"], ["int", 6, "Type"], ["26", 2, "IntegerLiteral"], ["8", 2, "IntegerLiteral"], ["18", 2, "IntegerLiteral"], ["7", 2, "IntegerLiteral"], ["output", 1, "Var"], ["mapping", 2, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["17", 2, "IntegerLiteral"], ["5", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["15", 2, "IntegerLiteral"], ["int ()", 1, "Type"], ["22", 2, "IntegerLiteral"]] 
Explorers_advex 1460488_1483488_Explorers_advex.c [["n", 3, "ParmVar__DeclRefExpr"], ["int (long)", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["10", 4, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["pairnum", 5, "Var__DeclRefExpr"], ["divisor", 3, "Var__DeclRefExpr"], ["remainder", 3, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["multiplier", 3, "Var__DeclRefExpr"], ["divider", 4, "Var__DeclRefExpr"], ["dual_Var", 7, "Var__DeclRefExpr"], ["numlen", 4, "DeclRefExpr__Function"], ["int ()", 1, "Type"], ["\"%ld %ld\"", 1, "StringLiteral"], ["lb", 4, "Var__DeclRefExpr"], ["int", 7, "Type"], ["continue", 1, "ContinueStmt"], ["pow", 2, "DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["long", 9, "Type"], ["\"r\"", 1, "StringLiteral"], ["long la_ lb_ dual_Var_ divider_ multiplier_ remainder_ divisor_ pairnum;", 1, "DeclStmt"], ["ntest", 4, "Var__DeclRefExpr"], ["i", 10, "Var__DeclRefExpr"], ["npairs", 3, "Var__DeclRefExpr"], ["len", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["int [50]", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["50", 1, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["la", 4, "Var__DeclRefExpr"]] 
Explorers_advex 1460488_1595491_Explorers_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["10", 3, "IntegerLiteral"], ["1", 7, "IntegerLiteral"], ["j", 3, "Var__DeclRefExpr"], ["remaining", 6, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["int remaining;", 1, "DeclStmt"], ["int sjscore;", 1, "DeclStmt"], ["0", 12, "IntegerLiteral"], ["2", 3, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["sjscore", 11, "Var__DeclRefExpr"], ["nsurprising", 6, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["bscore", 8, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["int [100]", 1, "Type"], ["\"replace-me.out\"", 1, "StringLiteral"], ["100", 1, "IntegerLiteral"], ["pscore", 4, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["int gbmi_Var_ ryji_Var_ nparticipant_ nsurprising_ bscore_ pscore;", 1, "DeclStmt"], ["gbmi_Var", 4, "Var__DeclRefExpr"], ["ryji_Var", 14, "Var__DeclRefExpr"], ["int", 11, "Type"], ["nparticipant", 3, "Var__DeclRefExpr"], ["ngoogle", 7, "Var__DeclRefExpr"]] 
Explorers_advex 2270488_2449486_Explorers_advex.c [["int duai_Var;", 2, "DeclStmt"], ["c", 3, "ParmVar__DeclRefExpr"], ["r", 3, "ParmVar__DeclRefExpr"], ["int (int_ int_ int_ int_ int (*)[10])", 2, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["res", 4, "Var__DeclRefExpr"], ["int [10][10]", 3, "Type"], ["scanf", 3, "DeclRefExpr"], ["duai_Var", 21, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["vertCheck", 2, "DeclRefExpr__Function"], ["data", 9, "Var__DeclRefExpr__ParmVar"], ["j", 11, "Var__DeclRefExpr"], ["\"YES\"", 1, "StringLiteral"], ["int ntest;", 1, "DeclStmt"], ["ntest", 4, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["char *[100]", 1, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["k", 11, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["int", 23, "Type"], ["int duai_Var_ k_ j;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["char *res[100];", 1, "DeclStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["int data[10][10];", 1, "DeclStmt"], ["0", 12, "IntegerLiteral"], ["int [10]", 3, "Type"], ["char *", 1, "Type"], ["flagNo", 5, "Var__DeclRefExpr"], ["10", 6, "IntegerLiteral"], ["char", 1, "Type"], ["break", 2, "BreakStmt"], ["int row_ col;", 1, "DeclStmt"], ["row", 9, "Var__DeclRefExpr__ParmVar"], ["col", 9, "Var__DeclRefExpr__ParmVar"], ["1", 11, "IntegerLiteral"], ["horizCheck", 2, "DeclRefExpr__Function"]] 
Explorers_advex 2270488_2453486_Explorers_advex.c [["\"Game has not completed\\n\"", 1, "StringLiteral"], ["\"X won\\n\"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["'D'", 2, "CharacterLiteral"], ["\"Draw\\n\"", 1, "StringLiteral"], ["3", 9, "IntegerLiteral"], ["1", 25, "IntegerLiteral"], ["'.'", 4, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["'X'", 9, "CharacterLiteral"], ["int flagDot;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["'G'", 2, "CharacterLiteral"], ["int flagWin;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["char [5]", 1, "Type"], ["char res[10];", 1, "DeclStmt"], ["char testcase[4][5];", 1, "DeclStmt"], ["k", 9, "Var__DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["char [10]", 2, "Type"], ["int ntest;", 1, "DeclStmt"], ["4", 16, "IntegerLiteral"], ["'O'", 9, "CharacterLiteral"], ["char [4][5]", 1, "Type"], ["ntest", 4, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["nX", 17, "Var__DeclRefExpr"], ["nDot", 1, "Var"], ["flagWin", 14, "Var__DeclRefExpr"], ["break", 27, "BreakStmt"], ["char", 3, "Type"], ["testcase", 6, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"O won\\n\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"%s\"", 1, "StringLiteral"], ["res", 12, "Var__DeclRefExpr"], ["nline", 1, "Var"], ["int i_ duai_Var_ k_ nX_ nO_ nT_ nDot;", 1, "DeclStmt"], ["i", 19, "Var__DeclRefExpr"], ["duai_Var", 23, "Var__DeclRefExpr"], ["int", 11, "Type"], ["char nline[10];", 1, "DeclStmt"], ["nO", 17, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["nT", 17, "Var__DeclRefExpr"], ["flagDot", 7, "Var__DeclRefExpr"], ["0", 24, "IntegerLiteral"]] 
Explorers_advex 2270488_2463486_Explorers_advex.c [["0.0", 1, "FloatingLiteral"], ["start", 3, "Var__DeclRefExpr"], ["10", 3, "IntegerLiteral"], ["sqrtInt", 2, "DeclRefExpr__Function"], ["end", 3, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["duai_Var", 6, "Var__DeclRefExpr"], ["sqnm", 3, "Var__DeclRefExpr"], ["res", 3, "Var__DeclRefExpr"], ["int ntest;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["100", 1, "IntegerLiteral"], ["pald", 3, "DeclRefExpr__Function"], ["continue", 2, "ContinueStmt"], ["nm", 5, "ParmVar__DeclRefExpr"], ["i", 10, "Var__DeclRefExpr"], ["sqrt", 1, "DeclRefExpr"], ["int", 15, "Type"], ["remnm", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["sqroot", 5, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["int [100]", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["double sqroot_ denom;", 1, "DeclStmt"], ["1", 2, "IntegerLiteral"], ["rev", 4, "Var__DeclRefExpr"], ["ntest", 4, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["int (int)", 2, "Type"], ["double", 2, "Type"], ["int start_ end_ sqnm_ i_ duai_Var;", 1, "DeclStmt"], ["denom", 3, "Var__DeclRefExpr"]] 
Explorers_advex 2974486_5709773144064000_Explorers_advex.c [["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["timetillfarm", 4, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int", 3, "Type"], ["1", 2, "IntegerLiteral"], ["ncase", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int ncase_ i;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["double duad_Var_ f_ x_ init_ mintime_ caltime_ timetillfarm;", 1, "DeclStmt"], ["double", 7, "Type"], ["f", 3, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["init", 6, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["caltime", 5, "Var__DeclRefExpr"], ["duad_Var", 3, "Var__DeclRefExpr"], ["mintime", 5, "Var__DeclRefExpr"]] 
Explorers_advex 2974486_5756407898963968_Explorers_advex.c [["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 2, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["tmp3", 2, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["tmp2", 2, "Var__DeclRefExpr"], ["tmp1", 2, "Var__DeclRefExpr"], ["int tmp1_ tmp2_ tmp3_ tmp4;", 1, "DeclStmt"], ["n2rval4", 3, "Var__DeclRefExpr"], ["\"%d %d %d %d\"", 3, "StringLiteral"], ["n2rval3", 3, "Var__DeclRefExpr"], ["n2rval2", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int num;", 1, "DeclStmt"], ["b", 6, "ParmVar__DeclRefExpr"], ["0", 17, "IntegerLiteral"], ["num", 6, "Var__DeclRefExpr"], ["d", 6, "ParmVar__DeclRefExpr"], ["flag1", 10, "Var__DeclRefExpr"], ["int ncase;", 1, "DeclStmt"], ["res", 6, "Var__DeclRefExpr"], ["h", 5, "ParmVar__DeclRefExpr"], ["g", 5, "ParmVar__DeclRefExpr"], ["e", 5, "ParmVar__DeclRefExpr"], ["2", 6, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["int (int_ int_ int_ int_ int_ int_ int_ int)", 1, "Type"], ["int ()", 1, "Type"], ["int", 31, "Type"], ["4", 1, "IntegerLiteral"], ["tmp4", 2, "Var__DeclRefExpr"], ["n1rval4", 3, "Var__DeclRefExpr"], ["c", 6, "ParmVar__DeclRefExpr"], ["a", 6, "ParmVar__DeclRefExpr"], ["int duai_Var_ j_ k_ nans_ n1rval1_ n1rval2_ n1rval3_ n1rval4_ n2rval1_\n      n2rval2_ n2rval3_ n2rval4;", 1, "DeclStmt"], ["f", 5, "ParmVar__DeclRefExpr"], ["flag2", 6, "Var__DeclRefExpr"], ["duai_Var", 7, "Var__DeclRefExpr"], ["1", 8, "IntegerLiteral"], ["ncase", 3, "Var__DeclRefExpr"], ["int res;", 1, "DeclStmt"], ["checkCard", 2, "Function__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["n2rval1", 3, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["j", 5, "Var__DeclRefExpr"], ["nans", 3, "Var__DeclRefExpr"], ["n1rval1", 3, "Var__DeclRefExpr"], ["n1rval2", 3, "Var__DeclRefExpr"], ["n1rval3", 3, "Var__DeclRefExpr"]] 
float 1460488_1483485_float.c [["\"%c\"", 2, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["atoi", 1, "DeclRefExpr"], ["int", 4, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["cas", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int cas_ i_ j;", 1, "DeclStmt"], ["char str[150];", 1, "DeclStmt"], ["'a'", 2, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["'z'", 1, "CharacterLiteral"], ["str", 11, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"\\n\"", 1, "StringLiteral"], ["j", 8, "Var__DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["char", 2, "Type"], ["char [150]", 1, "Type"], ["150", 1, "IntegerLiteral"], ["tars", 2, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["fgets", 2, "DeclRefExpr"]] 
float 1460488_1483488_float.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"], ["tmp", 8, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["next", 2, "Function__DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["n", 9, "ParmVar__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["int", 11, "Type"], ["cas", 3, "Var__DeclRefExpr"], ["int (int)", 1, "Type"], ["10", 6, "IntegerLiteral"], ["0", 3, "IntegerLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["b", 4, "Var__DeclRefExpr"], ["int cas_ a_ b_ i_ j_ tmp_ ans;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"]] 
float 1460488_1595491_float.c [["printf", 1, "DeclRefExpr"], ["break", 3, "BreakStmt"], ["9", 1, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["29", 1, "IntegerLiteral"], ["30", 1, "IntegerLiteral"], ["\"%d %d %d\"", 1, "StringLiteral"], ["int T_ N_ S_ p_ i_ j;", 1, "DeclStmt"], ["int", 9, "Type"], ["N", 3, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["j", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["score", 13, "Var__DeclRefExpr"], ["3", 8, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["continue", 3, "ContinueStmt"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["S", 6, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 11, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int score_ ans;", 1, "DeclStmt"], ["ans", 11, "Var__DeclRefExpr"]] 
float 2270488_2449486_float.c [["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["0", 8, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["goto CHECK_END", 1, "GotoStmt"], ["128", 2, "IntegerLiteral"], ["cas_n", 3, "Var__DeclRefExpr"], ["int cas_ cas_n_ N_ M_ i_ j_ k_ flag;", 1, "DeclStmt"], ["int", 10, "Type"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["cas", 6, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["N", 6, "Var__DeclRefExpr"], ["j", 12, "Var__DeclRefExpr"], ["M", 6, "Var__DeclRefExpr"], ["int [128][128]", 1, "Type"], ["i", 12, "Var__DeclRefExpr"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["flag", 6, "Var__DeclRefExpr"], ["int lawn[128][128];", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["k", 9, "Var__DeclRefExpr"], ["int [128]", 1, "Type"], ["lawn", 6, "Var__DeclRefExpr"]] 
float 2270488_2453486_float.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["continue", 2, "ContinueStmt"], ["\"X won\"", 1, "StringLiteral"], ["puts", 4, "DeclRefExpr"], ["8", 1, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["fgets", 1, "DeclRefExpr"], ["4", 8, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int cas_n_ cas_ row_ col_ index_ i_ tmp_ flag;", 1, "DeclStmt"], ["'.'", 2, "CharacterLiteral"], ["tmp", 13, "Var__DeclRefExpr"], ["2", 3, "IntegerLiteral"], ["'O'", 1, "CharacterLiteral"], ["0", 17, "IntegerLiteral"], ["\"O won\"", 1, "StringLiteral"], ["int (char)", 1, "Type"], ["index", 12, "Var__DeclRefExpr"], ["i", 13, "Var__DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["main", 1, "Function"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["conv", 5, "Function__DeclRefExpr"], ["int", 11, "Type"], ["break", 7, "BreakStmt"], ["char", 3, "Type"], ["int [3]", 1, "Type"], ["c", 3, "ParmVar__DeclRefExpr"], ["1", 9, "IntegerLiteral"], ["'X'", 1, "CharacterLiteral"], ["cas", 6, "Var__DeclRefExpr"], ["row", 9, "Var__DeclRefExpr"], ["col", 5, "Var__DeclRefExpr"], ["cas_n", 3, "Var__DeclRefExpr"], ["int sum[10][3];", 1, "DeclStmt"], ["flag", 8, "Var__DeclRefExpr"], ["int [10][3]", 1, "Type"], ["char [5][5]", 1, "Type"], ["3", 2, "IntegerLiteral"], ["5", 2, "IntegerLiteral"], ["sum", 11, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["char board[5][5]_ c;", 1, "DeclStmt"], ["board", 8, "Var__DeclRefExpr"], ["char [5]", 1, "Type"]] 
float 2270488_2463486_float.c [["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["121", 1, "IntegerLiteral"], ["9", 1, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["is", 9, "Var__DeclRefExpr"], ["cas_n", 3, "Var__DeclRefExpr"], ["int", 8, "Type"], ["484", 1, "IntegerLiteral"], ["memset", 2, "DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["count", 7, "Var__DeclRefExpr"], ["int [1024]", 2, "Type"], ["int is[1024]_ count[1024];", 1, "DeclStmt"], ["cas", 5, "Var__DeclRefExpr"], ["A", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1024", 3, "IntegerLiteral"], ["B", 3, "Var__DeclRefExpr"], ["int cas_n_ cas_ i_ A_ B;", 1, "DeclStmt"], ["i", 7, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"]] 
float 2974486_5709773144064000_float.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["time", 5, "Var__DeclRefExpr"], ["int T_ t;", 1, "DeclStmt"], ["int", 3, "Type"], ["T", 3, "Var__DeclRefExpr"], ["X", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["ntime", 4, "Var__DeclRefExpr"], ["C", 4, "Var__DeclRefExpr"], ["double C_ F_ X_ speed_ time_ ntime_ ans;", 1, "DeclStmt"], ["F", 4, "Var__DeclRefExpr"], ["double", 7, "Type"], ["1", 1, "IntegerLiteral"], ["speed", 7, "Var__DeclRefExpr"], ["ans", 5, "Var__DeclRefExpr"]] 
float 2974486_5756407898963968_float.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["break", 3, "BreakStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["tmp", 9, "Var__DeclRefExpr"], ["count", 4, "Var__DeclRefExpr"], ["ans", 3, "Var__DeclRefExpr"], ["int T_ t_ row_ r_ tmp_ i;", 1, "DeclStmt"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["r", 9, "Var__DeclRefExpr"], ["cmp", 2, "Function__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int *", 2, "Type"], ["\"%d\"", 3, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["printf", 4, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["b", 2, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["int (const void *_ const void *)", 1, "Type"], ["int", 14, "Type"], ["a", 2, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["int ()", 1, "Type"], ["int num[8]_ count_ ans;", 1, "DeclStmt"], ["i", 7, "Var__DeclRefExpr"], ["8", 3, "IntegerLiteral"], ["num", 13, "Var__DeclRefExpr"], ["qsort", 1, "DeclRefExpr"], ["row", 5, "Var__DeclRefExpr"], ["int [8]", 1, "Type"], ["1", 7, "IntegerLiteral"], ["5", 1, "IntegerLiteral"], ["const void *", 2, "Type"], ["scanf", 7, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["4", 3, "IntegerLiteral"], ["\"%d %d %d %d\"", 4, "StringLiteral"], ["6", 1, "IntegerLiteral"], ["7", 1, "IntegerLiteral"]] 
float_advex 1460488_1483485_float_advex.c [["\"%c\"", 2, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["atoi", 1, "DeclRefExpr"], ["int", 4, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["cas", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int cas_ i_ j;", 1, "DeclStmt"], ["char str[150];", 1, "DeclStmt"], ["'a'", 2, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["'z'", 1, "CharacterLiteral"], ["str", 11, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"\\n\"", 1, "StringLiteral"], ["j", 8, "Var__DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["char", 2, "Type"], ["char [150]", 1, "Type"], ["150", 1, "IntegerLiteral"], ["tars", 2, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["fgets", 2, "DeclRefExpr"]] 
float_advex 1460488_1483488_float_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"], ["tmp", 8, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["next", 2, "Function__DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["n", 9, "ParmVar__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["int", 11, "Type"], ["cas", 3, "Var__DeclRefExpr"], ["int (int)", 1, "Type"], ["10", 6, "IntegerLiteral"], ["0", 3, "IntegerLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["b", 4, "Var__DeclRefExpr"], ["int cas_ a_ b_ i_ j_ tmp_ ans;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"]] 
float_advex 1460488_1595491_float_advex.c [["printf", 1, "DeclRefExpr"], ["break", 3, "BreakStmt"], ["9", 1, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["29", 1, "IntegerLiteral"], ["30", 1, "IntegerLiteral"], ["\"%d %d %d\"", 1, "StringLiteral"], ["int T_ N_ S_ p_ i_ j;", 1, "DeclStmt"], ["int", 9, "Type"], ["N", 3, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["j", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["score", 13, "Var__DeclRefExpr"], ["3", 8, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["continue", 3, "ContinueStmt"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["S", 6, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 11, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int score_ ans;", 1, "DeclStmt"], ["ans", 11, "Var__DeclRefExpr"]] 
float_advex 2270488_2449486_float_advex.c [["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["0", 8, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["goto CHECK_END", 1, "GotoStmt"], ["128", 2, "IntegerLiteral"], ["cas_n", 3, "Var__DeclRefExpr"], ["int cas_ cas_n_ N_ M_ i_ j_ k_ flag;", 1, "DeclStmt"], ["int", 10, "Type"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["cas", 6, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["N", 6, "Var__DeclRefExpr"], ["j", 12, "Var__DeclRefExpr"], ["M", 6, "Var__DeclRefExpr"], ["int [128][128]", 1, "Type"], ["i", 12, "Var__DeclRefExpr"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["flag", 6, "Var__DeclRefExpr"], ["int lawn[128][128];", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["k", 9, "Var__DeclRefExpr"], ["int [128]", 1, "Type"], ["lawn", 6, "Var__DeclRefExpr"]] 
float_advex 2270488_2453486_float_advex.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["continue", 2, "ContinueStmt"], ["\"X won\"", 1, "StringLiteral"], ["puts", 4, "DeclRefExpr"], ["8", 1, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["fgets", 1, "DeclRefExpr"], ["4", 8, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int cas_n_ cas_ row_ col_ index_ i_ tmp_ flag;", 1, "DeclStmt"], ["'.'", 2, "CharacterLiteral"], ["tmp", 13, "Var__DeclRefExpr"], ["2", 3, "IntegerLiteral"], ["'O'", 1, "CharacterLiteral"], ["0", 17, "IntegerLiteral"], ["\"O won\"", 1, "StringLiteral"], ["int (char)", 1, "Type"], ["index", 12, "Var__DeclRefExpr"], ["i", 13, "Var__DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["main", 1, "Function"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["conv", 5, "Function__DeclRefExpr"], ["int", 11, "Type"], ["break", 7, "BreakStmt"], ["char", 3, "Type"], ["int [3]", 1, "Type"], ["c", 3, "ParmVar__DeclRefExpr"], ["1", 9, "IntegerLiteral"], ["'X'", 1, "CharacterLiteral"], ["cas", 6, "Var__DeclRefExpr"], ["row", 9, "Var__DeclRefExpr"], ["col", 5, "Var__DeclRefExpr"], ["cas_n", 3, "Var__DeclRefExpr"], ["int sum[10][3];", 1, "DeclStmt"], ["flag", 8, "Var__DeclRefExpr"], ["int [10][3]", 1, "Type"], ["char [5][5]", 1, "Type"], ["3", 2, "IntegerLiteral"], ["5", 2, "IntegerLiteral"], ["sum", 11, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["char board[5][5]_ c;", 1, "DeclStmt"], ["board", 8, "Var__DeclRefExpr"], ["char [5]", 1, "Type"]] 
float_advex 2270488_2463486_float_advex.c [["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["121", 1, "IntegerLiteral"], ["9", 1, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["is", 9, "Var__DeclRefExpr"], ["cas_n", 3, "Var__DeclRefExpr"], ["int", 8, "Type"], ["484", 1, "IntegerLiteral"], ["memset", 2, "DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["count", 7, "Var__DeclRefExpr"], ["int [1024]", 2, "Type"], ["int is[1024]_ count[1024];", 1, "DeclStmt"], ["cas", 5, "Var__DeclRefExpr"], ["A", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1024", 3, "IntegerLiteral"], ["B", 3, "Var__DeclRefExpr"], ["int cas_n_ cas_ i_ A_ B;", 1, "DeclStmt"], ["i", 7, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"]] 
float_advex 2974486_5709773144064000_float_advex.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["time", 5, "Var__DeclRefExpr"], ["int T_ t;", 1, "DeclStmt"], ["int", 3, "Type"], ["T", 3, "Var__DeclRefExpr"], ["X", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["ntime", 4, "Var__DeclRefExpr"], ["C", 4, "Var__DeclRefExpr"], ["double C_ F_ X_ speed_ time_ ntime_ ans;", 1, "DeclStmt"], ["F", 4, "Var__DeclRefExpr"], ["double", 7, "Type"], ["1", 1, "IntegerLiteral"], ["speed", 7, "Var__DeclRefExpr"], ["ans", 5, "Var__DeclRefExpr"]] 
float_advex 2974486_5756407898963968_float_advex.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["break", 3, "BreakStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["tmp", 9, "Var__DeclRefExpr"], ["count", 4, "Var__DeclRefExpr"], ["ans", 3, "Var__DeclRefExpr"], ["int T_ t_ row_ r_ tmp_ i;", 1, "DeclStmt"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["r", 9, "Var__DeclRefExpr"], ["cmp", 2, "Function__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int *", 2, "Type"], ["\"%d\"", 3, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["printf", 4, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["b", 2, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["int (const void *_ const void *)", 1, "Type"], ["int", 14, "Type"], ["a", 2, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["int ()", 1, "Type"], ["int num[8]_ count_ ans;", 1, "DeclStmt"], ["i", 7, "Var__DeclRefExpr"], ["8", 3, "IntegerLiteral"], ["num", 13, "Var__DeclRefExpr"], ["qsort", 1, "DeclRefExpr"], ["row", 5, "Var__DeclRefExpr"], ["int [8]", 1, "Type"], ["1", 7, "IntegerLiteral"], ["5", 1, "IntegerLiteral"], ["const void *", 2, "Type"], ["scanf", 7, "DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["4", 3, "IntegerLiteral"], ["\"%d %d %d %d\"", 4, "StringLiteral"], ["6", 1, "IntegerLiteral"], ["7", 1, "IntegerLiteral"]] 
goober 1460488_1483485_goober.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["'z'", 1, "CharacterLiteral"], ["'a'", 2, "CharacterLiteral"], ["i", 7, "Var__DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["main", 1, "Function"], ["t", 4, "Var__DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["101", 1, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["int", 4, "Type"], ["char buf[101];", 1, "DeclStmt"], ["int ()", 1, "Type"], ["map", 2, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["int T;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["\"%d \"", 1, "StringLiteral"], ["char", 2, "Type"], ["buf", 8, "Var__DeclRefExpr"], ["char [101]", 1, "Type"]] 
goober 1460488_1483488_goober.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], [";", 1, "NullStmt"], ["goto bad", 1, "GotoStmt"], ["d", 5, "Var__DeclRefExpr"], ["previous", 3, "Var__DeclRefExpr"], ["m", 9, "Var__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["x", 4, "Var__DeclRefExpr"], ["digs", 4, "Var__DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["int [digs]", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int", 14, "Type"], ["\"%d\"", 1, "StringLiteral"], ["digmul", 4, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 3, "IntegerLiteral"], ["int a_ b;", 1, "DeclStmt"], ["a", 4, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["b", 4, "Var__DeclRefExpr"], ["res", 3, "Var__DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["0", 5, "IntegerLiteral"]] 
goober 1460488_1595491_goober.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["v", 5, "Var__DeclRefExpr"], ["int v;", 1, "DeclStmt"], ["i", 3, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int", 9, "Type"], ["main", 1, "Function"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["res", 4, "Var__DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["0", 4, "IntegerLiteral"]] 
goober 2270488_2449486_goober.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["m", 5, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 10, "Var__DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["t", 4, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["int [100]", 1, "Type"], ["i", 10, "Var__DeclRefExpr"], ["a", 6, "Var__DeclRefExpr"], ["\"YES\"", 1, "StringLiteral"], ["int [100][100]", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["int", 14, "Type"], ["check", 2, "Function__DeclRefExpr"], ["int ()", 2, "Type"], ["int T;", 1, "DeclStmt"], ["0", 10, "IntegerLiteral"], ["good", 8, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["continue", 2, "ContinueStmt"]] 
goober 2270488_2453486_goober.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["i", 29, "Var__DeclRefExpr"], ["cnt", 16, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["c", 5, "ParmVar__DeclRefExpr"], ["a", 11, "Var__DeclRefExpr"], ["check", 3, "Function__DeclRefExpr"], ["int", 14, "Type"], ["'T'", 4, "CharacterLiteral"], ["char [5]", 1, "Type"], ["0", 15, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["char", 3, "Type"], ["4", 13, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["j", 14, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int cnt;", 1, "DeclStmt"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["t", 4, "Var__DeclRefExpr"], ["msg", 5, "Var__DeclRefExpr"], ["const char *", 1, "Type"], ["\"Draw\"", 1, "StringLiteral"], ["'X'", 1, "CharacterLiteral"], ["\"X won\"", 1, "StringLiteral"], ["char [4][5]", 1, "Type"], ["'O'", 1, "CharacterLiteral"], ["int (char)", 1, "Type"], ["\"O won\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"]] 
goober 2270488_2463486_goober.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["\"%lld %lld\"", 1, "StringLiteral"], ["t", 4, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["j", 3, "Var__DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["0", 6, "IntegerLiteral"], ["x", 4, "ParmVar__DeclRefExpr"], ["10000000", 1, "IntegerLiteral"], ["long long", 8, "Type"], ["rev", 3, "Function__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 3, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["res", 4, "Var__DeclRefExpr"], ["i", 14, "Var__DeclRefExpr"], ["long long (long long)", 1, "Type"], ["long long [39]", 1, "Type"], ["10", 3, "IntegerLiteral"], ["int", 6, "Type"], ["cnt", 3, "Var__DeclRefExpr"], ["v", 4, "Var__DeclRefExpr"], ["39", 1, "IntegerLiteral"], ["continue", 2, "ContinueStmt"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["1", 2, "IntegerLiteral"]] 
goober 2974486_5709773144064000_goober.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["scanf", 2, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["X", 5, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["int", 3, "Type"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["best", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["cur", 4, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["double C_ F_ X;", 1, "DeclStmt"], ["speed", 6, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["C", 3, "Var__DeclRefExpr"], ["F", 3, "Var__DeclRefExpr"], ["double", 6, "Type"], ["\"%lf %lf %lf\"", 1, "StringLiteral"]] 
goober 2974486_5756407898963968_goober.c [["\"Bad magician!\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["x", 3, "Var__DeclRefExpr"], ["int x;", 1, "DeclStmt"], ["4", 2, "IntegerLiteral"], ["i", 9, "Var__DeclRefExpr"], ["ans", 3, "Var__DeclRefExpr"], ["int ans;", 1, "DeclStmt"], ["bt", 3, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["j", 3, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["char", 1, "Type"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 3, "IntegerLiteral"], ["possible", 3, "Var__DeclRefExpr"], ["char [17]", 1, "Type"], ["17", 1, "IntegerLiteral"], ["twos", 4, "Var__DeclRefExpr"], ["int T;", 1, "DeclStmt"], ["0", 7, "IntegerLiteral"], ["q", 3, "Var__DeclRefExpr"], ["\"%d\"", 4, "StringLiteral"], ["2", 3, "IntegerLiteral"]] 
goober_advex 1460488_1483485_goober_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["'z'", 1, "CharacterLiteral"], ["'a'", 2, "CharacterLiteral"], ["i", 7, "Var__DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["main", 1, "Function"], ["t", 4, "Var__DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["101", 1, "IntegerLiteral"], ["1", 1, "IntegerLiteral"], ["int", 4, "Type"], ["char buf[101];", 1, "DeclStmt"], ["int ()", 1, "Type"], ["map", 2, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["int dtgi_Var;", 1, "DeclStmt"], ["scanf", 1, "DeclRefExpr"], ["dtgi_Var", 3, "Var__DeclRefExpr"], ["\"%d \"", 1, "StringLiteral"], ["char", 2, "Type"], ["buf", 8, "Var__DeclRefExpr"], ["char [101]", 1, "Type"]] 
goober_advex 1460488_1483488_goober_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], [";", 1, "NullStmt"], ["goto bad", 1, "GotoStmt"], ["ceti_Var", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["fbwi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["int d;", 1, "DeclStmt"], ["0", 5, "IntegerLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["hwyi_Var", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int fbwi_Var;", 1, "DeclStmt"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"%d %d\"", 1, "StringLiteral"], ["continue", 3, "ContinueStmt"], ["ret_val", 2, "Var__DeclRefExpr"], ["\"replace-me.out\"", 1, "StringLiteral"], ["idyi_Var", 3, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["1", 3, "IntegerLiteral"], ["b", 4, "Var__DeclRefExpr"], ["int hfhi_Var;", 1, "DeclStmt"], ["int dtgi_Var_ b;", 1, "DeclStmt"], ["hfhi_Var", 5, "Var__DeclRefExpr"], ["int", 15, "Type"], ["digmul", 4, "Var__DeclRefExpr"], ["dtgi_Var", 4, "Var__DeclRefExpr"], ["digs", 4, "Var__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["m", 9, "Var__DeclRefExpr"], ["int [digs]", 1, "Type"], ["previous", 3, "Var__DeclRefExpr"], ["d", 6, "Var__DeclRefExpr"], ["int igbi_Var;", 1, "DeclStmt"], ["int ceti_Var;", 1, "DeclStmt"], ["igbi_Var", 5, "Var__DeclRefExpr"]] 
goober_advex 1460488_1595491_goober_advex.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["v", 5, "Var__DeclRefExpr"], ["int v;", 1, "DeclStmt"], ["i", 3, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["res", 4, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int sjbi_Var;", 1, "DeclStmt"], ["s", 4, "Var__DeclRefExpr"], ["int", 9, "Type"], ["t", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["sjbi_Var", 3, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"]] 
goober_advex 2270488_2449486_goober_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["int omgi_Var;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["int fbwi_Var;", 1, "DeclStmt"], ["\"%d\"", 2, "StringLiteral"], ["fbwi_Var", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["m", 5, "Var__DeclRefExpr"], ["j", 10, "Var__DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["100", 2, "IntegerLiteral"], ["\"replace-me.out\"", 1, "StringLiteral"], ["int [100]", 1, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["continue", 2, "ContinueStmt"], ["\"YES\"", 1, "StringLiteral"], ["int [100][100]", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["omgi_Var", 5, "Var__DeclRefExpr"], ["int", 14, "Type"], ["check", 2, "Function__DeclRefExpr"], ["chmi_Var", 6, "Var__DeclRefExpr"], ["int ()", 2, "Type"], ["0", 10, "IntegerLiteral"], ["good", 8, "Var__DeclRefExpr"], ["brpi_Var", 10, "Var__DeclRefExpr"], ["xcri_Var", 8, "Var__DeclRefExpr"]] 
goober_advex 2270488_2453486_goober_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["1", 5, "IntegerLiteral"], ["i", 29, "Var__DeclRefExpr"], ["cnt", 16, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["check", 3, "Function__DeclRefExpr"], ["int", 14, "Type"], ["c", 5, "ParmVar__DeclRefExpr"], ["duac_Var", 11, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["'T'", 4, "CharacterLiteral"], ["char [5]", 1, "Type"], ["0", 15, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["char", 3, "Type"], ["4", 13, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["3", 2, "IntegerLiteral"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["j", 14, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int cnt;", 1, "DeclStmt"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["msg", 5, "Var__DeclRefExpr"], ["const char *", 1, "Type"], ["\"Draw\"", 1, "StringLiteral"], ["'X'", 1, "CharacterLiteral"], ["\"X won\"", 1, "StringLiteral"], ["char [4][5]", 1, "Type"], ["'O'", 1, "CharacterLiteral"], ["int (char)", 1, "Type"], ["\"O won\"", 1, "StringLiteral"]] 
goober_advex 2270488_2463486_goober_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["vcmi_Var", 3, "Var__DeclRefExpr"], ["int vcmi_Var;", 1, "DeclStmt"], ["j", 3, "Var__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["gibi_Var", 4, "Var__DeclRefExpr"], ["x", 4, "ParmVar__DeclRefExpr"], ["continue", 2, "ContinueStmt"], ["main", 1, "Function"], ["10000000", 1, "IntegerLiteral"], ["long long", 8, "Type"], ["rev", 3, "Function__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 3, "Var__DeclRefExpr"], ["int jvll_Var;", 1, "DeclStmt"], ["long long (long long)", 1, "Type"], ["long long [39]", 1, "Type"], ["10", 3, "IntegerLiteral"], ["cnt", 3, "Var__DeclRefExpr"], ["qksl_Var", 4, "Var__DeclRefExpr"], ["39", 1, "IntegerLiteral"], ["jvll_Var", 15, "Var__DeclRefExpr"], ["v", 4, "Var__DeclRefExpr"], ["int", 6, "Type"], ["int ()", 1, "Type"], ["1", 2, "IntegerLiteral"]] 
goober_advex 2974486_5709773144064000_goober_advex.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["0", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["X", 5, "Var__DeclRefExpr"], ["int", 3, "Type"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["best", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["cur", 4, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int dtgi_Var;", 1, "DeclStmt"], ["double C_ F_ X;", 1, "DeclStmt"], ["C", 3, "Var__DeclRefExpr"], ["dtgi_Var", 3, "Var__DeclRefExpr"], ["F", 3, "Var__DeclRefExpr"], ["double", 6, "Type"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["speed", 6, "Var__DeclRefExpr"]] 
goober_advex 2974486_5756407898963968_goober_advex.c [["\"Bad magician!\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["x", 3, "Var__DeclRefExpr"], ["int x;", 1, "DeclStmt"], ["\"\\n\"", 1, "StringLiteral"], ["j", 3, "Var__DeclRefExpr"], ["4", 2, "IntegerLiteral"], ["dtgi_Var", 9, "Var__DeclRefExpr"], ["int ans;", 1, "DeclStmt"], ["bt", 3, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["ciri_Var", 3, "Var__DeclRefExpr"], ["ans", 3, "Var__DeclRefExpr"], ["int ciri_Var;", 1, "DeclStmt"], ["int", 11, "Type"], ["char", 1, "Type"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 3, "IntegerLiteral"], ["possible", 3, "Var__DeclRefExpr"], ["char [17]", 1, "Type"], ["17", 1, "IntegerLiteral"], ["twos", 4, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["q", 3, "Var__DeclRefExpr"], ["\"%d\"", 4, "StringLiteral"], ["2", 3, "IntegerLiteral"]] 
HonMing 1460488_1483485_HonMing.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 1, "IntegerLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["strlen", 2, "DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["fgets", 2, "DeclRefExpr"], ["char [1024]", 1, "Type"], ["char line[1024];", 1, "DeclStmt"], ["' '", 1, "CharacterLiteral"], ["1024", 3, "IntegerLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["30", 1, "IntegerLiteral"], ["char", 2, "Type"], ["char [30]", 1, "Type"], ["m", 1, "Var"], ["j", 1, "Var"], ["t", 3, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["int", 8, "Type"], ["int t_ m_ n;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["'a'", 1, "CharacterLiteral"], ["line", 10, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["n", 1, "Var"], ["int nc;", 1, "DeclStmt"], ["scanf", 1, "DeclRefExpr"], ["k", 1, "Var"], ["nc", 5, "Var__DeclRefExpr"], ["map", 2, "Var__DeclRefExpr"]] 
HonMing 1460488_1483488_HonMing.c [["printf", 1, "DeclRefExpr"], ["bdup", 3, "Var__DeclRefExpr"], ["6", 1, "IntegerLiteral"], ["10000000", 1, "IntegerLiteral"], ["4", 1, "IntegerLiteral"], ["3", 1, "IntegerLiteral"], ["sprintf", 1, "DeclRefExpr"], ["10000", 1, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["1000", 1, "IntegerLiteral"], ["0", 7, "IntegerLiteral"], ["temp", 7, "Var__DeclRefExpr"], ["int temp;", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["int ii;", 1, "DeclStmt"], ["k", 10, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["int i_ j_ k;", 1, "DeclStmt"], ["memset", 1, "DeclRefExpr"], ["dup", 4, "Var__DeclRefExpr"], ["ii", 5, "Var__DeclRefExpr"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["n", 1, "Var"], ["int nc;", 1, "DeclStmt"], ["j", 6, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["m", 1, "Var"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["s", 1, "Var"], ["int ()", 1, "Type"], ["p", 1, "Var"], ["int m_ n_ p_ s;", 1, "DeclStmt"], ["int", 21, "Type"], ["main", 1, "Function"], ["atoi", 1, "DeclRefExpr"], ["int a_ b;", 1, "DeclStmt"], ["t", 3, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["x", 3, "Var__DeclRefExpr"], ["10", 5, "IntegerLiteral"], ["1000000", 1, "IntegerLiteral"], ["int [10]", 1, "Type"], ["y", 3, "Var__DeclRefExpr"], ["z", 5, "Var__DeclRefExpr"], ["nc", 5, "Var__DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["\"%d%d\"", 2, "StringLiteral"], ["result", 4, "Var__DeclRefExpr"], ["a", 11, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["100000", 1, "IntegerLiteral"], ["int x_ y_ z;", 1, "DeclStmt"], ["int dup[10];", 1, "DeclStmt"], ["char str[100];", 1, "DeclStmt"], ["str", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 1, "Type"], ["char", 1, "Type"]] 
HonMing 1460488_1595491_HonMing.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["surprise", 5, "Var__DeclRefExpr"], ["int surprise;", 1, "DeclStmt"], ["result", 6, "Var__DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["{\n                }", 1, "CompoundStmt"], ["0", 5, "IntegerLiteral"], ["score", 5, "Var__DeclRefExpr"], ["m", 1, "Var"], ["j", 1, "Var"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 13, "Type"], ["int t_ m_ n_ p_ s;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["int score;", 1, "DeclStmt"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["int i_ j_ k;", 1, "DeclStmt"], ["i", 4, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["int nc;", 1, "DeclStmt"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["k", 1, "Var"], ["nc", 5, "Var__DeclRefExpr"]] 
HonMing 2270488_2449486_HonMing.c [["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["memset", 1, "DeclRefExpr"], ["mm", 3, "Var__DeclRefExpr"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["int mm;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["int res;", 1, "DeclStmt"], ["kk", 1, "Var"], ["0", 13, "IntegerLiteral"], ["end", 1, "Var"], ["int max;", 1, "DeclStmt"], ["ii", 6, "Var__DeclRefExpr"], ["200", 7, "IntegerLiteral"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int dp[200][200];", 1, "DeclStmt"], ["main", 1, "Function"], ["int", 16, "Type"], ["jj", 1, "Var"], ["unsigned long long", 1, "Type"], ["j", 32, "Var__DeclRefExpr"], ["xw", 1, "Var"], ["ow", 1, "Var"], ["1", 1, "IntegerLiteral"], ["int n_ m;", 1, "DeclStmt"], ["n", 8, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["max", 11, "Var__DeclRefExpr"], ["int map[200][200];", 1, "DeclStmt"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["res", 1, "Var"], ["map", 7, "Var__DeclRefExpr"], ["i", 26, "Var__DeclRefExpr"], ["int [200][200]", 2, "Type"], ["int [200]", 2, "Type"], ["dp", 8, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["\"%d%d\"", 1, "StringLiteral"], ["result", 1, "Var"], ["\"%d\"", 2, "StringLiteral"]] 
HonMing 2270488_2453486_HonMing.c [["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["'X'", 4, "CharacterLiteral"], ["'O'", 4, "CharacterLiteral"], ["char map[10][10];", 1, "DeclStmt"], ["break", 10, "BreakStmt"], ["char", 1, "Type"], ["3", 4, "IntegerLiteral"], ["int res;", 1, "DeclStmt"], ["'.'", 1, "CharacterLiteral"], ["kk", 1, "Var"], ["10", 2, "IntegerLiteral"], ["ii", 8, "Var__DeclRefExpr"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["i", 53, "Var__DeclRefExpr"], ["int m;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int", 11, "Type"], ["jj", 1, "Var"], ["unsigned long long", 1, "Type"], ["m", 3, "Var__DeclRefExpr"], ["j", 31, "Var__DeclRefExpr"], ["char [10][10]", 1, "Type"], ["char [10]", 1, "Type"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["xw", 7, "Var__DeclRefExpr"], ["ow", 7, "Var__DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 13, "IntegerLiteral"], ["'T'", 8, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["result", 2, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["end", 4, "Var__DeclRefExpr"], ["0", 17, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["4", 23, "IntegerLiteral"], ["map", 20, "Var__DeclRefExpr"], ["res", 1, "Var"], ["\"%s\"", 1, "StringLiteral"]] 
HonMing 2270488_2463486_HonMing.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%llu%llu\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["2", 4, "IntegerLiteral"], ["10000000", 1, "IntegerLiteral"], ["break", 3, "BreakStmt"], ["char", 1, "Type"], ["char [200]", 1, "Type"], ["line", 13, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["mm", 3, "Var__DeclRefExpr"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["char line[200];", 1, "DeclStmt"], ["int res;", 1, "DeclStmt"], ["kk", 1, "Var"], ["0", 5, "IntegerLiteral"], ["end", 1, "Var"], ["llu", 9, "Var__DeclRefExpr"], ["int max;", 1, "DeclStmt"], ["\"%llu\"", 2, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["ii", 5, "Var__DeclRefExpr"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["strlen", 6, "DeclRefExpr"], ["sprintf", 2, "DeclRefExpr"], ["10000", 1, "IntegerLiteral"], ["res", 1, "Var"], ["int mm;", 1, "DeclStmt"], ["unsigned long long a_ b;", 1, "DeclStmt"], ["b", 4, "Var__DeclRefExpr"], ["i", 19, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 15, "Type"], ["jj", 1, "Var"], ["unsigned long long", 4, "Type"], ["j", 4, "Var__DeclRefExpr"], ["xw", 1, "Var"], ["ow", 1, "Var"], ["int n_ m;", 1, "DeclStmt"], ["m", 1, "Var"], ["max", 1, "Var"], ["unsigned long long dp[10000];", 1, "DeclStmt"], ["dp", 5, "Var__DeclRefExpr"], ["n", 1, "Var"], ["unsigned long long [10000]", 1, "Type"], ["200", 1, "IntegerLiteral"], ["int result;", 1, "DeclStmt"], ["result", 4, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["unsigned long long llu;", 1, "DeclStmt"], ["a", 3, "Var__DeclRefExpr"]] 
HonMing 2974486_5709773144064000_HonMing.c [["continue", 1, "ContinueStmt"], ["printf", 2, "DeclRefExpr"], ["2.0", 1, "FloatingLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["char map[10][10];", 1, "DeclStmt"], ["char", 1, "Type"], ["int res;", 1, "DeclStmt"], ["10", 2, "IntegerLiteral"], ["0", 1, "IntegerLiteral"], ["end", 1, "Var"], ["ii", 6, "Var__DeclRefExpr"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["map", 1, "Var"], ["res", 1, "Var"], ["i", 1, "Var"], ["int m;", 1, "DeclStmt"], ["main", 1, "Function"], ["r", 9, "Var__DeclRefExpr"], ["kk", 1, "Var"], ["temp", 6, "Var__DeclRefExpr"], ["double c_ f_ x_ r;", 1, "DeclStmt"], ["int", 11, "Type"], ["jj", 1, "Var"], ["unsigned long long", 1, "Type"], ["m", 3, "Var__DeclRefExpr"], ["j", 1, "Var"], ["char [10][10]", 1, "Type"], ["char [10]", 1, "Type"], ["x", 7, "Var__DeclRefExpr"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["xw", 1, "Var"], ["\"Case #%d: %.07lf\\n\"", 2, "StringLiteral"], ["ow", 1, "Var"], ["c", 5, "Var__DeclRefExpr"], ["double", 5, "Type"], ["f", 4, "Var__DeclRefExpr"], ["double temp;", 1, "DeclStmt"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["result", 1, "Var"], ["scanf", 2, "DeclRefExpr"]] 
HonMing 2974486_5756407898963968_HonMing.c [["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["4", 6, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["scanf", 5, "DeclRefExpr"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int res;", 1, "DeclStmt"], ["count", 5, "Var__DeclRefExpr"], ["kk", 1, "Var"], ["10", 4, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["end", 1, "Var"], ["unsigned long long", 1, "Type"], ["jj", 1, "Var"], ["ans", 4, "Var__DeclRefExpr"], ["ii", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["map", 5, "Var__DeclRefExpr"], ["res", 1, "Var"], ["int count;", 1, "DeclStmt"], ["i", 18, "Var__DeclRefExpr"], ["int m;", 1, "DeclStmt"], ["p", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 18, "Type"], ["m", 3, "Var__DeclRefExpr"], ["int [10]", 3, "Type"], ["j", 17, "Var__DeclRefExpr"], ["int [10][10]", 1, "Type"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["int p[10];", 1, "DeclStmt"], ["xw", 1, "Var"], ["r1", 3, "Var__DeclRefExpr"], ["int map[10][10];", 1, "DeclStmt"], ["p2", 3, "Var__DeclRefExpr"], ["ow", 1, "Var"], ["int r1_ r2;", 1, "DeclStmt"], ["r2", 3, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["int p2[10];", 1, "DeclStmt"], ["int ans;", 1, "DeclStmt"], ["result", 1, "Var"]] 
HonMing_advex 1460488_1483485_HonMing_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["strlen", 2, "DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["fgets", 2, "DeclRefExpr"], ["char [1024]", 1, "Type"], ["char line[1024];", 1, "DeclStmt"], ["' '", 1, "CharacterLiteral"], ["1024", 3, "IntegerLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["30", 1, "IntegerLiteral"], ["char", 2, "Type"], ["char [30]", 1, "Type"], ["m", 1, "Var"], ["j", 1, "Var"], ["t", 3, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["int", 8, "Type"], ["int t_ m_ n;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["int i_ j_ k;", 1, "DeclStmt"], ["'a'", 1, "CharacterLiteral"], ["line", 10, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["n", 1, "Var"], ["int nc;", 1, "DeclStmt"], ["scanf", 1, "DeclRefExpr"], ["k", 1, "Var"], ["nc", 5, "Var__DeclRefExpr"], ["map", 2, "Var__DeclRefExpr"]] 
HonMing_advex 1460488_1483488_HonMing_advex.c [["bdup", 3, "Var__DeclRefExpr"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["i", 6, "Var__DeclRefExpr"], ["6", 1, "IntegerLiteral"], ["10000000", 1, "IntegerLiteral"], ["4", 1, "IntegerLiteral"], ["3", 1, "IntegerLiteral"], ["unki_Var", 4, "Var__DeclRefExpr"], ["sprintf", 1, "DeclRefExpr"], ["10000", 1, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["1000", 1, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["temp", 7, "Var__DeclRefExpr"], ["int temp;", 1, "DeclStmt"], ["10", 5, "IntegerLiteral"], ["x", 3, "Var__DeclRefExpr"], ["k", 10, "Var__DeclRefExpr"], ["int", 21, "Type"], ["j", 6, "Var__DeclRefExpr"], ["int j_ k;", 1, "DeclStmt"], ["int t;", 1, "DeclStmt"], ["m", 1, "Var"], ["5", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["s", 1, "Var"], ["wnci_Var", 1, "Var"], ["int ()", 1, "Type"], ["printf", 1, "DeclRefExpr"], ["int m_ omgi_Var_ wnci_Var_ s;", 1, "DeclStmt"], ["main", 1, "Function"], ["100", 2, "IntegerLiteral"], ["1000000", 1, "IntegerLiteral"], ["y", 3, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["z", 5, "Var__DeclRefExpr"], ["int nc;", 1, "DeclStmt"], ["nc", 5, "Var__DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["\"%d%d\"", 2, "StringLiteral"], ["result", 4, "Var__DeclRefExpr"], ["atoi", 1, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int a_ b;", 1, "DeclStmt"], ["a", 11, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["100000", 1, "IntegerLiteral"], ["int x_ y_ z;", 1, "DeclStmt"], ["int dup[10];", 1, "DeclStmt"], ["omgi_Var", 1, "Var"], ["char str[100];", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"], ["str", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 1, "Type"], ["char", 1, "Type"], ["memset", 1, "DeclRefExpr"], ["dup", 4, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"]] 
HonMing_advex 1460488_1595491_HonMing_advex.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["{\n        }", 1, "CompoundStmt"], ["1", 1, "IntegerLiteral"], ["surprise", 5, "Var__DeclRefExpr"], ["int surprise;", 1, "DeclStmt"], ["result", 6, "Var__DeclRefExpr"], ["m", 1, "Var"], ["j", 1, "Var"], ["main", 1, "Function"], ["int result;", 1, "DeclStmt"], ["int", 13, "Type"], ["int t_ m_ n_ p_ s;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["int score;", 1, "DeclStmt"], ["int nc;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["zhzi_Var", 4, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int zhzi_Var_ j_ k;", 1, "DeclStmt"], ["3", 2, "IntegerLiteral"], ["nc", 5, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 1, "Var"], ["0", 6, "IntegerLiteral"], ["score", 5, "Var__DeclRefExpr"]] 
HonMing_advex 2270488_2449486_HonMing_advex.c [["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["memset", 1, "DeclRefExpr"], ["mm", 3, "Var__DeclRefExpr"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["int mm;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["xw", 1, "Var"], ["int res;", 1, "DeclStmt"], ["kk", 1, "Var"], ["0", 14, "IntegerLiteral"], ["end", 1, "Var"], ["int max;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int", 16, "Type"], ["jj", 1, "Var"], ["unsigned long long", 1, "Type"], ["j", 32, "Var__DeclRefExpr"], ["ow", 1, "Var"], ["1", 1, "IntegerLiteral"], ["int n_ m;", 1, "DeclStmt"], ["n", 8, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["max", 11, "Var__DeclRefExpr"], ["int map[200][200];", 1, "DeclStmt"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["res", 1, "Var"], ["map", 7, "Var__DeclRefExpr"], ["i", 26, "Var__DeclRefExpr"], ["int [200][200]", 2, "Type"], ["int [200]", 2, "Type"], ["200", 7, "IntegerLiteral"], ["ii", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int dp[200][200];", 1, "DeclStmt"], ["dp", 8, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["\"%d%d\"", 1, "StringLiteral"], ["int jj_ kk;", 1, "DeclStmt"], ["result", 1, "Var"], ["\"%d\"", 2, "StringLiteral"]] 
HonMing_advex 2270488_2453486_HonMing_advex.c [["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["'X'", 4, "CharacterLiteral"], ["'O'", 4, "CharacterLiteral"], ["char map[10][10];", 1, "DeclStmt"], ["break", 10, "BreakStmt"], ["char", 1, "Type"], ["3", 4, "IntegerLiteral"], ["int res;", 1, "DeclStmt"], ["'.'", 1, "CharacterLiteral"], ["kk", 1, "Var"], ["10", 2, "IntegerLiteral"], ["ii", 8, "Var__DeclRefExpr"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["i", 53, "Var__DeclRefExpr"], ["int m;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int", 11, "Type"], ["jj", 1, "Var"], ["unsigned long long", 1, "Type"], ["m", 3, "Var__DeclRefExpr"], ["j", 31, "Var__DeclRefExpr"], ["char [10][10]", 1, "Type"], ["char [10]", 1, "Type"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["xw", 7, "Var__DeclRefExpr"], ["ow", 7, "Var__DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 13, "IntegerLiteral"], ["'T'", 8, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["result", 2, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["end", 4, "Var__DeclRefExpr"], ["0", 17, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["4", 23, "IntegerLiteral"], ["map", 20, "Var__DeclRefExpr"], ["res", 1, "Var"], ["\"%s\"", 1, "StringLiteral"]] 
HonMing_advex 2270488_2463486_HonMing_advex.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%llu%llu\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["2", 4, "IntegerLiteral"], ["10000000", 1, "IntegerLiteral"], ["break", 3, "BreakStmt"], ["char", 1, "Type"], ["char [200]", 1, "Type"], ["line", 13, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["mm", 3, "Var__DeclRefExpr"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["char line[200];", 1, "DeclStmt"], ["int hbpi_Var;", 1, "DeclStmt"], ["main", 1, "Function"], ["kk", 1, "Var"], ["0", 6, "IntegerLiteral"], ["end", 1, "Var"], ["llu", 9, "Var__DeclRefExpr"], ["int max;", 1, "DeclStmt"], ["\"%llu\"", 2, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["ii", 5, "Var__DeclRefExpr"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["strlen", 6, "DeclRefExpr"], ["sprintf", 2, "DeclRefExpr"], ["10000", 1, "IntegerLiteral"], ["i", 19, "Var__DeclRefExpr"], ["int", 15, "Type"], ["jj", 1, "Var"], ["unsigned long long", 4, "Type"], ["j", 4, "Var__DeclRefExpr"], ["xw", 1, "Var"], ["ow", 1, "Var"], ["int n_ m;", 1, "DeclStmt"], ["m", 1, "Var"], ["max", 1, "Var"], ["unsigned long long dp[10000];", 1, "DeclStmt"], ["dp", 5, "Var__DeclRefExpr"], ["n", 1, "Var"], ["unsigned long long [10000]", 1, "Type"], ["200", 1, "IntegerLiteral"], ["hbpi_Var", 1, "Var"], ["int result;", 1, "DeclStmt"], ["result", 4, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["unsigned long long llu;", 1, "DeclStmt"], ["int mm;", 1, "DeclStmt"], ["unsigned long long a_ b;", 1, "DeclStmt"], ["b", 4, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"]] 
HonMing_advex 2974486_5709773144064000_HonMing_advex.c [["continue", 1, "ContinueStmt"], ["printf", 2, "DeclRefExpr"], ["2.0", 1, "FloatingLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["char map[10][10];", 1, "DeclStmt"], ["char", 1, "Type"], ["int res;", 1, "DeclStmt"], ["10", 2, "IntegerLiteral"], ["0", 1, "IntegerLiteral"], ["end", 1, "Var"], ["ii", 6, "Var__DeclRefExpr"], ["int ii_ jj_ kk;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["map", 1, "Var"], ["res", 1, "Var"], ["i", 1, "Var"], ["int m;", 1, "DeclStmt"], ["main", 1, "Function"], ["r", 9, "Var__DeclRefExpr"], ["kk", 1, "Var"], ["temp", 6, "Var__DeclRefExpr"], ["double c_ f_ x_ r;", 1, "DeclStmt"], ["int", 11, "Type"], ["jj", 1, "Var"], ["unsigned long long", 1, "Type"], ["m", 3, "Var__DeclRefExpr"], ["j", 1, "Var"], ["char [10][10]", 1, "Type"], ["char [10]", 1, "Type"], ["x", 7, "Var__DeclRefExpr"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["xw", 1, "Var"], ["\"Case #%d: %.07lf\\n\"", 2, "StringLiteral"], ["ow", 1, "Var"], ["c", 5, "Var__DeclRefExpr"], ["double", 5, "Type"], ["f", 4, "Var__DeclRefExpr"], ["double temp;", 1, "DeclStmt"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["result", 1, "Var"], ["scanf", 2, "DeclRefExpr"]] 
HonMing_advex 2974486_5756407898963968_HonMing_advex.c [["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["4", 6, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["ii", 6, "Var__DeclRefExpr"], ["\"%d\"", 5, "StringLiteral"], ["scanf", 5, "DeclRefExpr"], ["int [10][10]", 1, "Type"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int res;", 1, "DeclStmt"], ["count", 5, "Var__DeclRefExpr"], ["kk", 1, "Var"], ["10", 4, "IntegerLiteral"], ["0", 9, "IntegerLiteral"], ["end", 1, "Var"], ["ans", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["map", 5, "Var__DeclRefExpr"], ["res", 1, "Var"], ["int count;", 1, "DeclStmt"], ["i", 18, "Var__DeclRefExpr"], ["int m;", 1, "DeclStmt"], ["p", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 18, "Type"], ["jj", 1, "Var"], ["unsigned long long", 1, "Type"], ["m", 3, "Var__DeclRefExpr"], ["int [10]", 3, "Type"], ["j", 17, "Var__DeclRefExpr"], ["int end_ xw_ ow;", 1, "DeclStmt"], ["int p[10];", 1, "DeclStmt"], ["xw", 1, "Var"], ["r1", 3, "Var__DeclRefExpr"], ["int map[10][10];", 1, "DeclStmt"], ["p2", 3, "Var__DeclRefExpr"], ["ow", 1, "Var"], ["int r1_ r2;", 1, "DeclStmt"], ["r2", 3, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["unsigned long long result;", 1, "DeclStmt"], ["int p2[10];", 1, "DeclStmt"], ["int ans;", 1, "DeclStmt"], ["int jj_ kk;", 1, "DeclStmt"], ["result", 1, "Var"]] 
Johannesk 1460488_1483485_Johannesk.c [["printf", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["strlen", 1, "DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["l", 3, "Var__DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["v", 1, "Var"], ["n", 2, "Var__DeclRefExpr"], ["int n_ v_ i_ j_ l;", 1, "DeclStmt"], ["e", 5, "Var__DeclRefExpr"], ["char **", 1, "Type"], ["26", 1, "IntegerLiteral"], ["0xA", 1, "IntegerLiteral"], ["argv", 1, "ParmVar"], ["' '", 2, "CharacterLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["int", 7, "Type"], ["main", 1, "Function"], ["int (int_ char **)", 1, "Type"], ["char d[105]_ e[105];", 1, "DeclStmt"], ["argc", 1, "ParmVar"], ["char", 4, "Type"], ["char *", 1, "Type"], ["s", 2, "Var__DeclRefExpr"], ["char [26]", 1, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["char [105]", 2, "Type"], ["d", 7, "Var__DeclRefExpr"], ["j", 12, "Var__DeclRefExpr"], ["105", 2, "IntegerLiteral"]] 
Johannesk 1460488_1483488_Johannesk.c [["printf", 1, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["int dup;", 1, "DeclStmt"], ["count", 4, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["log10", 1, "DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["digits", 4, "Var__DeclRefExpr"], ["t", 2, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["char **", 1, "Type"], ["size", 2, "ParmVar__DeclRefExpr"], ["dup", 4, "Var__DeclRefExpr"], ["p", 3, "Var__DeclRefExpr"], ["num", 3, "ParmVar__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["int", 21, "Type"], ["b", 3, "Var__DeclRefExpr"], ["sm", 4, "Var__DeclRefExpr"], ["steps", 3, "ParmVar__DeclRefExpr"], ["move", 2, "Function__DeclRefExpr"], ["floor", 1, "DeclRefExpr"], ["temp", 1, "Var"], ["r", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["m", 12, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["char", 1, "Type"], ["char *", 1, "Type"], ["int (int_ int_ int)", 1, "Type"], ["argc", 1, "ParmVar"], ["argv", 1, "ParmVar"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int a_ b_ t_ i_ j_ temp_ digits_ k_ count_ m;", 1, "DeclStmt"], ["int (int_ char **)", 1, "Type"]] 
Johannesk 1460488_1595491_Johannesk.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["p", 3, "Var__DeclRefExpr"], ["2", 12, "IntegerLiteral"], ["s", 3, "Var__DeclRefExpr"], ["5", 12, "IntegerLiteral"], ["char *", 1, "Type"], ["char", 3, "Type"], ["argc", 1, "ParmVar"], ["int (int_ char **)", 1, "Type"], ["4", 12, "IntegerLiteral"], ["count", 5, "Var__DeclRefExpr"], ["t", 2, "Var__DeclRefExpr"], ["best", 2, "Var__DeclRefExpr"], ["int", 11, "Type"], ["8", 12, "IntegerLiteral"], ["j", 8, "Var__DeclRefExpr"], ["int googlers[101];", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["argv", 1, "ParmVar"], ["char **", 1, "Type"], ["score", 4, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["char []", 2, "Type"], ["0", 9, "IntegerLiteral"], ["int [101]", 1, "Type"], ["101", 1, "IntegerLiteral"], ["int t_ i_ j_ n_ s_ p_ count_ score;", 1, "DeclStmt"], ["1", 9, "IntegerLiteral"], ["suprise", 2, "Var__DeclRefExpr"], ["googlers", 2, "Var__DeclRefExpr"], ["3", 12, "IntegerLiteral"], ["6", 12, "IntegerLiteral"], ["7", 12, "IntegerLiteral"], ["main", 1, "Function"], ["9", 12, "IntegerLiteral"], ["10", 16, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"]] 
Johannesk 2270488_2449486_Johannesk.c [["10", 1, "IntegerLiteral"], ["char [10]", 1, "Type"], ["j", 17, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["i", 19, "Var__DeclRefExpr"], ["int i_ j_ k_ max;", 1, "DeclStmt"], ["line", 1, "Var"], ["y", 9, "ParmVar__DeclRefExpr"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["x", 9, "ParmVar__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["char [100]", 1, "Type"], ["int", 19, "Type"], ["int t_ i_ n_ m_ x_ y;", 1, "DeclStmt"], ["char [100][100]", 1, "Type"], ["char", 3, "Type"], ["max", 5, "Var__DeclRefExpr"], ["b", 7, "Var__DeclRefExpr"], ["checkpossible", 2, "Function__DeclRefExpr"], ["char *", 1, "Type"], ["100", 2, "IntegerLiteral"], ["int (int_ int)", 1, "Type"], ["t", 2, "Var__DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["printinput", 1, "Function"], ["argc", 1, "ParmVar"], ["void", 1, "Type"], ["void (int_ int)", 1, "Type"], ["int i_ j;", 1, "DeclStmt"], ["printf", 4, "DeclRefExpr"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["\"%c\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int (int_ char **)", 1, "Type"], ["char line[10];", 1, "DeclStmt"], ["char **", 1, "Type"], ["argv", 1, "ParmVar"], ["n", 3, "Var__DeclRefExpr"], ["m", 3, "Var__DeclRefExpr"]] 
Johannesk 2270488_2453486_Johannesk.c [["'O'", 1, "CharacterLiteral"], ["'X'", 1, "CharacterLiteral"], ["10", 1, "IntegerLiteral"], ["line", 1, "Var"], ["printf", 6, "DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 6, "IntegerLiteral"], ["j", 21, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["i", 43, "Var__DeclRefExpr"], ["int (char)", 1, "Type"], ["void ()", 1, "Type"], ["s", 5, "ParmVar__DeclRefExpr"], ["c", 13, "Var__DeclRefExpr"], ["printinput", 1, "Function"], ["char [10]", 1, "Type"], ["char [4][4]", 1, "Type"], ["char [4]", 1, "Type"], ["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["char **", 1, "Type"], ["int", 13, "Type"], ["char", 4, "Type"], ["void", 1, "Type"], ["argc", 1, "ParmVar"], ["b", 11, "Var__DeclRefExpr"], ["char *", 1, "Type"], ["4", 16, "IntegerLiteral"], ["int (int_ char **)", 1, "Type"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"], ["char line[10];", 1, "DeclStmt"], ["0", 17, "IntegerLiteral"], ["checkwin", 3, "Function__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["int i_ j_ c;", 1, "DeclStmt"], ["checkdraw", 2, "Function__DeclRefExpr"], ["int ()", 1, "Type"], ["'T'", 4, "CharacterLiteral"], ["int i_ j;", 2, "DeclStmt"], ["'.'", 1, "CharacterLiteral"], ["\"%c\"", 1, "StringLiteral"], ["main", 1, "Function"], ["argv", 1, "ParmVar"], ["int t_ i;", 1, "DeclStmt"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["t", 2, "Var__DeclRefExpr"]] 
Johannesk 2270488_2463486_Johannesk.c [["printf", 1, "DeclRefExpr"], ["floor", 1, "DeclRefExpr"], ["p", 7, "Var__DeclRefExpr"], ["start", 3, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["ceil", 1, "DeclRefExpr"], ["t", 2, "Var__DeclRefExpr"], ["mid", 3, "Var__DeclRefExpr"], ["len", 4, "Var__DeclRefExpr"], ["a", 2, "Var__DeclRefExpr"], ["i", 11, "Var__DeclRefExpr"], ["line", 1, "Var"], ["int i_ len_ mid;", 1, "DeclStmt"], ["s", 5, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["char [100]", 1, "Type"], ["\"%lu \"", 1, "StringLiteral"], ["sqrt", 2, "DeclRefExpr"], ["stop", 3, "Var__DeclRefExpr"], ["int", 9, "Type"], ["int (unsigned long)", 1, "Type"], ["int t_ i_ count;", 1, "DeclStmt"], ["argv", 1, "ParmVar"], ["unsigned long", 6, "Type"], ["num", 2, "ParmVar__DeclRefExpr"], ["char", 3, "Type"], ["argc", 1, "ParmVar"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["ispalindrome", 3, "Function__DeclRefExpr"], ["char [10]", 1, "Type"], ["1", 4, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["main", 1, "Function"], ["int (int_ char **)", 1, "Type"], ["char line[10];", 1, "DeclStmt"], ["char **", 1, "Type"], ["count", 4, "Var__DeclRefExpr"], ["10", 1, "IntegerLiteral"], ["char s[100];", 1, "DeclStmt"], ["unsigned long a_ b_ start_ stop_ p;", 1, "DeclStmt"], ["char *", 1, "Type"], ["b", 2, "Var__DeclRefExpr"]] 
Johannesk 2974486_5709773144064000_Johannesk.c [["1", 1, "IntegerLiteral"], ["double C_ F_ X;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["char **", 1, "Type"], ["argv", 1, "ParmVar"], ["char", 1, "Type"], ["char *", 1, "Type"], ["argc", 1, "ParmVar"], ["C", 5, "ParmVar__DeclRefExpr"], ["F", 5, "ParmVar__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["int", 5, "Type"], ["c", 2, "ParmVar__DeclRefExpr"], ["void", 1, "Type"], ["solve", 2, "Function__DeclRefExpr"], ["double", 8, "Type"], ["int (int_ char **)", 1, "Type"], ["X", 6, "ParmVar__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["t", 8, "Var__DeclRefExpr"], ["main", 1, "Function"], ["rate", 8, "Var__DeclRefExpr"], ["void (int_ double_ double_ double)", 1, "Type"], ["2", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"]] 
Johannesk 2974486_5756407898963968_Johannesk.c [["rowb", 2, "Var__DeclRefExpr"], ["count", 6, "Var__DeclRefExpr"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["answer", 3, "Var__DeclRefExpr"], ["i", 11, "Var__DeclRefExpr"], ["int i_ j;", 1, "DeclStmt"], ["rowa", 2, "Var__DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["int *", 2, "Type"], ["void (int_ int *_ int *)", 1, "Type"], ["char", 3, "Type"], ["int", 13, "Type"], ["checkrows", 2, "Function__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["argc", 1, "ParmVar"], ["void", 1, "Type"], ["a", 5, "ParmVar__DeclRefExpr"], ["c", 4, "ParmVar__DeclRefExpr"], ["4", 6, "IntegerLiteral"], ["int (int_ char **)", 1, "Type"], ["0", 5, "IntegerLiteral"], ["int rowa_ rowb;", 1, "DeclStmt"], ["1", 5, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["main", 1, "Function"], ["char answer_ count;", 1, "DeclStmt"], ["argv", 1, "ParmVar"], ["j", 5, "Var__DeclRefExpr"], ["int a[4][4];", 1, "DeclStmt"], ["char **", 1, "Type"], ["int t_ i;", 1, "DeclStmt"], ["t", 2, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int [4]", 2, "Type"], ["b", 4, "ParmVar__DeclRefExpr"], ["char *", 1, "Type"], ["int b[4][4];", 1, "DeclStmt"]] 
Johannesk_advex 1460488_1483485_Johannesk_advex.c [["printf", 1, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["e", 5, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"replace-me.out\"", 1, "StringLiteral"], ["freopen", 2, "DeclRefExpr"], ["char *", 1, "Type"], ["char", 4, "Type"], ["int (int_ char **)", 1, "Type"], ["0", 2, "IntegerLiteral"], ["'a'", 1, "CharacterLiteral"], ["suic_Var", 1, "ParmVar"], ["ret_val", 2, "Var__DeclRefExpr"], ["jzxi_Var", 4, "Var__DeclRefExpr"], ["d", 7, "Var__DeclRefExpr"], ["char [105]", 2, "Type"], ["fqgi_Var", 1, "ParmVar"], ["char **", 1, "Type"], ["main", 1, "Function"], ["xcrc_Var", 2, "Var__DeclRefExpr"], ["char [26]", 1, "Type"], ["26", 1, "IntegerLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["' '", 2, "CharacterLiteral"], ["char d[105]_ e[105];", 1, "DeclStmt"], ["105", 2, "IntegerLiteral"], ["int wnci_Var_ v_ zvmi_Var_ l;", 1, "DeclStmt"], ["wnci_Var", 2, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["v", 1, "Var"], ["zvmi_Var", 12, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["l", 3, "Var__DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["'\\0'", 1, "CharacterLiteral"], ["int", 8, "Type"], ["0xA", 1, "IntegerLiteral"]] 
Johannesk_advex 1460488_1483488_Johannesk_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["log10", 1, "DeclRefExpr"], ["zvmi_Var", 6, "Var__DeclRefExpr"], ["int (int_ int_ int)", 1, "Type"], ["zvmc_Var", 1, "ParmVar"], ["char *", 1, "Type"], ["char", 1, "Type"], ["ahli_Var", 1, "ParmVar"], ["m", 12, "Var__DeclRefExpr"], ["main", 1, "Function"], ["r", 3, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["temp", 1, "Var"], ["move", 2, "Function__DeclRefExpr"], ["steps", 3, "ParmVar__DeclRefExpr"], ["ysji_Var", 4, "Var__DeclRefExpr"], ["sm", 4, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["num", 3, "ParmVar__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["ddfi_Var", 3, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["int dup;", 1, "DeclStmt"], ["int", 22, "Type"], ["size", 2, "ParmVar__DeclRefExpr"], ["char **", 1, "Type"], ["\"r\"", 1, "StringLiteral"], ["floor", 1, "DeclRefExpr"], ["dup", 4, "Var__DeclRefExpr"], ["\"replace-me.out\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["digits", 4, "Var__DeclRefExpr"], ["int qhoi_Var_ dtgi_Var_ dpii_Var_ temp_ digits_ cbvi_Var_ m;", 1, "DeclStmt"], ["qhoi_Var", 3, "Var__DeclRefExpr"], ["dtgi_Var", 3, "Var__DeclRefExpr"], ["dpii_Var", 2, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["cbvi_Var", 4, "Var__DeclRefExpr"]] 
Johannesk_advex 1460488_1595491_Johannesk_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["j", 7, "Var__DeclRefExpr"], ["suprise", 2, "Var__DeclRefExpr"], ["int t_ duai_Var_ n_ s_ p_ count_ score;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["p", 3, "Var__DeclRefExpr"], ["2", 12, "IntegerLiteral"], ["5", 12, "IntegerLiteral"], ["s", 3, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["best", 2, "Var__DeclRefExpr"], ["char *", 1, "Type"], ["char", 3, "Type"], ["argc", 1, "ParmVar"], ["int (int_ char **)", 1, "Type"], ["4", 12, "IntegerLiteral"], ["t", 2, "Var__DeclRefExpr"], ["duai_Var", 5, "Var__DeclRefExpr"], ["int", 12, "Type"], ["8", 12, "IntegerLiteral"], ["n", 3, "Var__DeclRefExpr"], ["argv", 1, "ParmVar"], ["char **", 1, "Type"], ["count", 5, "Var__DeclRefExpr"], ["score", 4, "Var__DeclRefExpr"], ["char []", 2, "Type"], ["0", 9, "IntegerLiteral"], ["int googlers[101];", 1, "DeclStmt"], ["int [101]", 1, "Type"], ["101", 1, "IntegerLiteral"], ["1", 9, "IntegerLiteral"], ["googlers", 2, "Var__DeclRefExpr"], ["3", 12, "IntegerLiteral"], ["6", 12, "IntegerLiteral"], ["7", 12, "IntegerLiteral"], ["main", 1, "Function"], ["9", 12, "IntegerLiteral"], ["10", 16, "IntegerLiteral"]] 
Johannesk_advex 2270488_2449486_Johannesk_advex.c [["char [10]", 1, "Type"], ["char line[10];", 1, "DeclStmt"], ["m", 3, "Var__DeclRefExpr"], ["ptoi_Var", 2, "Var__DeclRefExpr"], ["int ptoi_Var_ i_ n_ m_ x_ y;", 1, "DeclStmt"], ["i", 18, "Var__DeclRefExpr"], ["j", 17, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["int i_ j_ max;", 1, "DeclStmt"], ["line", 1, "Var"], ["y", 9, "ParmVar__DeclRefExpr"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["x", 9, "ParmVar__DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["n", 3, "Var__DeclRefExpr"], ["argv", 1, "ParmVar"], ["ret_val", 2, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["char [100]", 1, "Type"], ["int", 20, "Type"], ["char [100][100]", 1, "Type"], ["char", 3, "Type"], ["max", 5, "Var__DeclRefExpr"], ["b", 7, "Var__DeclRefExpr"], ["checkpossible", 2, "Function__DeclRefExpr"], ["char *", 1, "Type"], ["100", 2, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["1", 3, "IntegerLiteral"], ["argc", 1, "ParmVar"], ["void", 1, "Type"], ["void (int_ int)", 1, "Type"], ["\"r\"", 1, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["int j;", 1, "DeclStmt"], ["printf", 4, "DeclRefExpr"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["\"%c\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["char **", 1, "Type"], ["printinput", 1, "Function"], ["\"replace-me.out\"", 1, "StringLiteral"]] 
Johannesk_advex 2270488_2453486_Johannesk_advex.c [["'O'", 1, "CharacterLiteral"], ["'X'", 1, "CharacterLiteral"], ["10", 1, "IntegerLiteral"], ["line", 1, "Var"], ["printf", 6, "DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 6, "IntegerLiteral"], ["j", 21, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["i", 43, "Var__DeclRefExpr"], ["int (char)", 1, "Type"], ["void ()", 1, "Type"], ["s", 5, "ParmVar__DeclRefExpr"], ["c", 13, "Var__DeclRefExpr"], ["printinput", 1, "Function"], ["char [10]", 1, "Type"], ["char [4][4]", 1, "Type"], ["char [4]", 1, "Type"], ["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["char **", 1, "Type"], ["int", 13, "Type"], ["char", 4, "Type"], ["void", 1, "Type"], ["argc", 1, "ParmVar"], ["b", 11, "Var__DeclRefExpr"], ["char *", 1, "Type"], ["4", 16, "IntegerLiteral"], ["int (int_ char **)", 1, "Type"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"], ["char line[10];", 1, "DeclStmt"], ["0", 17, "IntegerLiteral"], ["checkwin", 3, "Function__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["int i_ j_ c;", 1, "DeclStmt"], ["checkdraw", 2, "Function__DeclRefExpr"], ["int ()", 1, "Type"], ["'T'", 4, "CharacterLiteral"], ["int i_ j;", 2, "DeclStmt"], ["'.'", 1, "CharacterLiteral"], ["\"%c\"", 1, "StringLiteral"], ["main", 1, "Function"], ["argv", 1, "ParmVar"], ["int t_ i;", 1, "DeclStmt"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["t", 2, "Var__DeclRefExpr"]] 
Johannesk_advex 2270488_2463486_Johannesk_advex.c [["printf", 1, "DeclRefExpr"], ["floor", 1, "DeclRefExpr"], ["p", 7, "Var__DeclRefExpr"], ["start", 3, "Var__DeclRefExpr"], ["10", 1, "IntegerLiteral"], ["line", 1, "Var"], ["char line[10];", 1, "DeclStmt"], ["100", 1, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["ceil", 1, "DeclRefExpr"], ["mid", 3, "Var__DeclRefExpr"], ["len", 4, "Var__DeclRefExpr"], ["s", 5, "Var__DeclRefExpr"], ["char s[100];", 1, "DeclStmt"], ["argv", 1, "ParmVar"], ["ishi_Var", 9, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%lu \"", 1, "StringLiteral"], ["char [100]", 1, "Type"], ["sqrt", 2, "DeclRefExpr"], ["stop", 3, "Var__DeclRefExpr"], ["int", 10, "Type"], ["td_ul", 6, "Typedef"], ["2", 1, "IntegerLiteral"], ["td_ul zept_Var_ b_ start_ stop_ p;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["char [10]", 1, "Type"], ["ispalindrome", 3, "Function__DeclRefExpr"], ["int (int_ char **)", 1, "Type"], ["ddfi_Var", 1, "ParmVar"], ["unsigned long", 2, "Type"], ["num", 2, "ParmVar__DeclRefExpr"], ["char", 3, "Type"], ["b", 2, "Var__DeclRefExpr"], ["char *", 1, "Type"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["zept_Var", 2, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["char **", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"replace-me.out\"", 1, "StringLiteral"], ["int (unsigned long)", 1, "Type"], ["int ekti_Var_ count;", 1, "DeclStmt"], ["ekti_Var", 2, "Var__DeclRefExpr"], ["int len_ mid;", 1, "DeclStmt"], ["count", 4, "Var__DeclRefExpr"]] 
Johannesk_advex 2974486_5709773144064000_Johannesk_advex.c [["1", 1, "IntegerLiteral"], ["i", 4, "Var__DeclRefExpr"], ["double C_ F_ X;", 1, "DeclStmt"], ["ret_val", 2, "Var__DeclRefExpr"], ["char", 1, "Type"], ["char *", 1, "Type"], ["char **", 1, "Type"], ["iodc_Var", 1, "ParmVar"], ["C", 5, "ParmVar__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["int", 6, "Type"], ["F", 5, "ParmVar__DeclRefExpr"], ["fxyi_Var", 2, "ParmVar__DeclRefExpr"], ["solve", 2, "Function__DeclRefExpr"], ["double", 8, "Type"], ["int lcjd_Var;", 1, "DeclStmt"], ["int (int_ char **)", 1, "Type"], ["X", 6, "ParmVar__DeclRefExpr"], ["void", 1, "Type"], ["lcjd_Var", 8, "Var__DeclRefExpr"], ["rate", 8, "Var__DeclRefExpr"], ["void (int_ double_ double_ double)", 1, "Type"], ["2", 1, "IntegerLiteral"], ["nvpi_Var", 1, "ParmVar"], ["printf", 1, "DeclRefExpr"], ["main", 1, "Function"]] 
Johannesk_advex 2974486_5756407898963968_Johannesk_advex.c [["rowb", 2, "Var__DeclRefExpr"], ["bfui_Var", 9, "Var__DeclRefExpr"], ["char answer_ ymyc_Var;", 1, "DeclStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["ymyc_Var", 6, "Var__DeclRefExpr"], ["aaei_Var", 5, "Var__DeclRefExpr"], ["int rowa_ rowb;", 1, "DeclStmt"], ["0", 5, "IntegerLiteral"], ["int aaei_Var;", 1, "DeclStmt"], ["int *", 2, "Type"], ["\"r\"", 1, "StringLiteral"], ["void (int_ int *_ int *)", 1, "Type"], ["ysji_Var", 4, "ParmVar__DeclRefExpr"], ["char", 3, "Type"], ["int ojyi_Var[4][4];", 1, "DeclStmt"], ["char *", 1, "Type"], ["answer", 3, "Var__DeclRefExpr"], ["4", 6, "IntegerLiteral"], ["int [4]", 2, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int (int_ char **)", 1, "Type"], ["int", 14, "Type"], ["checkrows", 2, "Function__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["void", 1, "Type"], ["a", 5, "ParmVar__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["int mcwi_Var;", 1, "DeclStmt"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["ojyi_Var", 4, "ParmVar__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["rowa", 2, "Var__DeclRefExpr"], ["glti_Var", 1, "ParmVar"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["mcwi_Var", 2, "Var__DeclRefExpr"], ["fqgc_Var", 1, "ParmVar"], ["char **", 1, "Type"], ["int a[4][4];", 1, "DeclStmt"]] 
kawatea 1460488_1483485_kawatea.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["strlen", 1, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["\"%d%*c\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["fgets", 1, "DeclRefExpr"], ["int t_ n_ i_ j;", 1, "DeclStmt"], ["n", 5, "Var__DeclRefExpr"], ["110", 1, "IntegerLiteral"], ["a", 2, "Var__DeclRefExpr"], ["int", 5, "Type"], ["char", 2, "Type"], ["printf", 1, "DeclRefExpr"], ["char s[110];", 1, "DeclStmt"], ["s", 8, "Var__DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["105", 1, "IntegerLiteral"], ["j", 7, "Var__DeclRefExpr"], ["' '", 1, "CharacterLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 2, "StringLiteral"], ["int ()", 1, "Type"], ["char [26]", 1, "Type"], ["char [110]", 1, "Type"], ["26", 1, "IntegerLiteral"]] 
kawatea 1460488_1483488_kawatea.c [["printf", 1, "DeclRefExpr"], ["int a[10];", 1, "DeclStmt"], ["2000000", 1, "IntegerLiteral"], ["continue", 1, "ContinueStmt"], ["k", 13, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["main", 1, "Function"], ["10", 6, "IntegerLiteral"], ["z", 7, "Var__DeclRefExpr"], ["y", 4, "Var__DeclRefExpr"], ["int [10]", 2, "Type"], ["int [2000001][10]", 1, "Type"], ["m", 4, "Var__DeclRefExpr"], ["n", 5, "ParmVar__DeclRefExpr"], ["free", 1, "DeclRefExpr"], ["void", 1, "Type"], ["c", 3, "Var__DeclRefExpr"], ["void (set *)", 1, "Type"], ["break", 1, "BreakStmt"], ["clear", 4, "Function__DeclRefExpr"], ["int (set *_ int)", 2, "Type"], ["set *(set *_ set *)", 1, "Type"], ["p", 3, "Var__DeclRefExpr"], ["move_down", 2, "Function__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["rotate", 4, "Function__DeclRefExpr"], ["set", 22, "Typedef"], ["struct _set", 4, "Type"], ["struct _set *[2]", 1, "Type"], ["struct _set *", 1, "Type"], ["i", 28, "Var__DeclRefExpr"], ["int", 36, "Type"], ["size", 10, "Field__Function__DeclRefExpr"], ["int ()", 1, "Type"], ["l", 4, "ParmVar__DeclRefExpr"], ["2000001", 2, "IntegerLiteral"], ["set *", 20, "Type"], ["sum", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["s", 73, "ParmVar__DeclRefExpr"], ["key", 10, "Field__ParmVar__DeclRefExpr"], ["height", 10, "Field__Function__DeclRefExpr"], ["int [2000001]", 1, "Type"], ["int i;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["int (set *)", 3, "Type"], ["cmp_set", 3, "Function__DeclRefExpr"], ["a", 11, "ParmVar__DeclRefExpr"], ["return", 1, "ReturnStmt"], ["empty", 1, "Function"], ["1", 29, "IntegerLiteral"], ["find", 3, "Function__DeclRefExpr"], ["_set", 1, "Record"], ["0", 32, "IntegerLiteral"], ["rank", 4, "Function__DeclRefExpr"], ["set *(set *_ int_ int)", 2, "Type"], ["child", 1, "Field"], ["balance", 5, "Function__DeclRefExpr"], ["int t_ i_ j_ k;", 1, "DeclStmt"], ["b", 5, "ParmVar__DeclRefExpr"], ["set *(set *)", 1, "Type"], ["r", 4, "ParmVar__DeclRefExpr"], ["int x;", 2, "DeclStmt"], ["sizeof(set)", 1, "UnaryExprOrTypeTraitExpr"], ["x", 12, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["t", 14, "Var__DeclRefExpr__ParmVar"], ["insert", 4, "Function__DeclRefExpr"], ["set *(set *_ int)", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["tmp", 7, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["malloc", 1, "DeclRefExpr"]] 
kawatea 1460488_1595491_kawatea.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["j", 42, "Var__DeclRefExpr"], ["i", 17, "Var__DeclRefExpr"], ["int a[100];", 1, "DeclStmt"], ["dp", 21, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["int ()", 1, "Type"], ["k", 32, "Var__DeclRefExpr"], ["31", 1, "IntegerLiteral"], ["3", 6, "IntegerLiteral"], ["2", 5, "IntegerLiteral"], ["int t_ n_ s_ p_ i_ j_ k;", 1, "DeclStmt"], ["10", 3, "IntegerLiteral"], ["max", 7, "Function__DeclRefExpr"], ["int", 14, "Type"], ["int [11]", 1, "Type"], ["n", 6, "Var__DeclRefExpr"], ["a", 8, "ParmVar__DeclRefExpr"], ["b", 10, "ParmVar__DeclRefExpr"], ["int dp[101][101];", 1, "DeclStmt"], ["int (int_ int)", 1, "Type"], ["t", 3, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["main", 1, "Function"], ["s", 11, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["int [100]", 1, "Type"], ["int [31][11]", 1, "Type"], ["0", 13, "IntegerLiteral"], ["11", 1, "IntegerLiteral"], ["p", 5, "Var__DeclRefExpr"], ["int [101][101]", 1, "Type"], ["int [101]", 1, "Type"], ["101", 2, "IntegerLiteral"], ["1", 26, "IntegerLiteral"], ["30", 1, "IntegerLiteral"], ["4", 1, "IntegerLiteral"]] 
kawatea 2270488_2449486_kawatea.c [["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["1", 11, "IntegerLiteral"], ["b", 4, "Var__DeclRefExpr"], ["int [100]", 2, "Type"], ["int [100][100]", 2, "Type"], ["a", 9, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int", 11, "Type"], ["i", 6, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["k", 32, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["100", 4, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["f", 3, "Var__DeclRefExpr"], ["0", 18, "IntegerLiteral"], ["n", 8, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["j", 24, "Var__DeclRefExpr"], ["\"%d\"", 2, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["int a[100][100];", 1, "DeclStmt"]] 
kawatea 2270488_2453486_kawatea.c [["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["'X'", 4, "CharacterLiteral"], ["1", 11, "IntegerLiteral"], ["'.'", 9, "CharacterLiteral"], ["'O'", 4, "CharacterLiteral"], ["\"%s\"", 1, "StringLiteral"], ["4", 21, "IntegerLiteral"], ["char", 1, "Type"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int", 6, "Type"], ["2", 5, "IntegerLiteral"], ["5", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["i", 8, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["break", 8, "BreakStmt"], ["s", 19, "Var__DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["k", 29, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["f", 13, "Var__DeclRefExpr"], ["0", 15, "IntegerLiteral"], ["j", 52, "Var__DeclRefExpr"], ["char [4][5]", 1, "Type"], ["char s[4][5];", 1, "DeclStmt"], ["char [5]", 1, "Type"]] 
kawatea 2270488_2463486_kawatea.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["long long x_ y;", 1, "DeclStmt"], ["scanf", 2, "DeclRefExpr"], ["long long a[100];", 1, "DeclStmt"], ["\"%lld %lld\"", 1, "StringLiteral"], ["100", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["long long [100]", 1, "Type"], ["int i_ j;", 1, "DeclStmt"], ["y", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["x", 7, "ParmVar__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["sum", 3, "Var__DeclRefExpr"], ["int", 10, "Type"], ["check", 3, "Function__DeclRefExpr"], ["10000000", 1, "IntegerLiteral"], ["long long", 6, "Type"], ["int (long long)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["i", 19, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["int a[20];", 1, "DeclStmt"], ["j", 12, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["int [20]", 1, "Type"], ["0", 9, "IntegerLiteral"]] 
kawatea 2974486_5709773144064000_kawatea.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: %.12lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["100000", 1, "IntegerLiteral"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["j", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 3, "Type"], ["i", 5, "Var__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["t", 7, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["f", 3, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["double", 7, "Type"], ["x", 4, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["1e9", 1, "FloatingLiteral"], ["ans", 4, "Var__DeclRefExpr"]] 
kawatea 2974486_5756407898963968_kawatea.c [["printf", 3, "DeclRefExpr"], ["17", 1, "IntegerLiteral"], ["int [17]", 1, "Type"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["int b[4][4];", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 10, "IntegerLiteral"], ["1", 8, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["int", 11, "Type"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["i", 7, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["int [4]", 2, "Type"], ["int ()", 1, "Type"], ["k", 9, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["x", 3, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["y", 3, "Var__DeclRefExpr"], ["int a[4][4];", 1, "DeclStmt"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["ans", 7, "Var__DeclRefExpr"], ["j", 22, "Var__DeclRefExpr"]] 
kawatea_advex 1460488_1483485_kawatea_advex.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["'\\0'", 1, "CharacterLiteral"], ["strlen", 1, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["\"%d%*c\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["fgets", 1, "DeclRefExpr"], ["int t_ n_ i_ j;", 1, "DeclStmt"], ["n", 5, "Var__DeclRefExpr"], ["110", 1, "IntegerLiteral"], ["a", 2, "Var__DeclRefExpr"], ["int", 5, "Type"], ["char", 2, "Type"], ["printf", 1, "DeclRefExpr"], ["char s[110];", 1, "DeclStmt"], ["s", 8, "Var__DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["105", 1, "IntegerLiteral"], ["j", 7, "Var__DeclRefExpr"], ["' '", 1, "CharacterLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 2, "StringLiteral"], ["int ()", 1, "Type"], ["char [26]", 1, "Type"], ["char [110]", 1, "Type"], ["26", 1, "IntegerLiteral"]] 
kawatea_advex 1460488_1483488_kawatea_advex.c [["printf", 1, "DeclRefExpr"], ["int a[10];", 1, "DeclStmt"], ["2000000", 1, "IntegerLiteral"], ["continue", 1, "ContinueStmt"], ["k", 13, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["main", 1, "Function"], ["10", 6, "IntegerLiteral"], ["z", 7, "Var__DeclRefExpr"], ["y", 4, "Var__DeclRefExpr"], ["int [10]", 2, "Type"], ["int [2000001][10]", 1, "Type"], ["m", 4, "Var__DeclRefExpr"], ["n", 5, "ParmVar__DeclRefExpr"], ["free", 1, "DeclRefExpr"], ["void", 1, "Type"], ["c", 3, "Var__DeclRefExpr"], ["void (set *)", 1, "Type"], ["break", 1, "BreakStmt"], ["clear", 4, "Function__DeclRefExpr"], ["int (set *_ int)", 2, "Type"], ["set *(set *_ set *)", 1, "Type"], ["p", 3, "Var__DeclRefExpr"], ["move_down", 2, "Function__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["rotate", 4, "Function__DeclRefExpr"], ["set", 22, "Typedef"], ["struct _set", 4, "Type"], ["struct _set *[2]", 1, "Type"], ["struct _set *", 1, "Type"], ["i", 28, "Var__DeclRefExpr"], ["int", 36, "Type"], ["size", 10, "Field__Function__DeclRefExpr"], ["int ()", 1, "Type"], ["l", 4, "ParmVar__DeclRefExpr"], ["2000001", 2, "IntegerLiteral"], ["set *", 20, "Type"], ["sum", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["s", 73, "ParmVar__DeclRefExpr"], ["key", 10, "Field__ParmVar__DeclRefExpr"], ["height", 10, "Field__Function__DeclRefExpr"], ["int [2000001]", 1, "Type"], ["int i;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["int (set *)", 3, "Type"], ["cmp_set", 3, "Function__DeclRefExpr"], ["a", 11, "ParmVar__DeclRefExpr"], ["return", 1, "ReturnStmt"], ["empty", 1, "Function"], ["1", 29, "IntegerLiteral"], ["find", 3, "Function__DeclRefExpr"], ["_set", 1, "Record"], ["0", 32, "IntegerLiteral"], ["rank", 4, "Function__DeclRefExpr"], ["set *(set *_ int_ int)", 2, "Type"], ["child", 1, "Field"], ["balance", 5, "Function__DeclRefExpr"], ["int t_ i_ j_ k;", 1, "DeclStmt"], ["b", 5, "ParmVar__DeclRefExpr"], ["set *(set *)", 1, "Type"], ["r", 4, "ParmVar__DeclRefExpr"], ["int x;", 2, "DeclStmt"], ["sizeof(set)", 1, "UnaryExprOrTypeTraitExpr"], ["x", 12, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["t", 14, "Var__DeclRefExpr__ParmVar"], ["insert", 4, "Function__DeclRefExpr"], ["set *(set *_ int)", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["tmp", 7, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["malloc", 1, "DeclRefExpr"]] 
kawatea_advex 1460488_1595491_kawatea_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["j", 42, "Var__DeclRefExpr"], ["i", 17, "Var__DeclRefExpr"], ["int a[100];", 1, "DeclStmt"], ["dp", 21, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["int ()", 1, "Type"], ["k", 32, "Var__DeclRefExpr"], ["31", 1, "IntegerLiteral"], ["3", 6, "IntegerLiteral"], ["2", 5, "IntegerLiteral"], ["int t_ n_ s_ p_ i_ j_ k;", 1, "DeclStmt"], ["10", 3, "IntegerLiteral"], ["max", 7, "Function__DeclRefExpr"], ["int", 14, "Type"], ["int [11]", 1, "Type"], ["n", 6, "Var__DeclRefExpr"], ["a", 8, "ParmVar__DeclRefExpr"], ["b", 10, "ParmVar__DeclRefExpr"], ["int dp[101][101];", 1, "DeclStmt"], ["int (int_ int)", 1, "Type"], ["t", 3, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["main", 1, "Function"], ["s", 11, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["int [100]", 1, "Type"], ["int [31][11]", 1, "Type"], ["0", 13, "IntegerLiteral"], ["11", 1, "IntegerLiteral"], ["p", 5, "Var__DeclRefExpr"], ["int [101][101]", 1, "Type"], ["int [101]", 1, "Type"], ["101", 2, "IntegerLiteral"], ["1", 26, "IntegerLiteral"], ["30", 1, "IntegerLiteral"], ["4", 1, "IntegerLiteral"]] 
kawatea_advex 2270488_2449486_kawatea_advex.c [["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["int [100][100]", 2, "Type"], ["ekpi_Var", 9, "Var__DeclRefExpr"], ["1", 11, "IntegerLiteral"], ["int ekpi_Var[100][100];", 1, "DeclStmt"], ["0", 18, "IntegerLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["int", 12, "Type"], ["int [100]", 2, "Type"], ["idyi_Var", 6, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["\"%d\"", 2, "StringLiteral"], ["phdi_Var", 3, "Var__DeclRefExpr"], ["int phdi_Var_ idyi_Var;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["100", 4, "IntegerLiteral"], ["f", 3, "Var__DeclRefExpr"], ["n", 8, "Var__DeclRefExpr"], ["ceti_Var", 4, "Var__DeclRefExpr"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["suii_Var", 4, "Var__DeclRefExpr"], ["ceoi_Var", 32, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["j", 24, "Var__DeclRefExpr"]] 
kawatea_advex 2270488_2453486_kawatea_advex.c [["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["\"Case #%d: O won\\n\"", 1, "StringLiteral"], ["\"Case #%d: X won\\n\"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["'X'", 4, "CharacterLiteral"], ["1", 11, "IntegerLiteral"], ["break", 8, "BreakStmt"], ["'.'", 9, "CharacterLiteral"], ["'O'", 4, "CharacterLiteral"], ["\"%s\"", 1, "StringLiteral"], ["4", 21, "IntegerLiteral"], ["char", 1, "Type"], ["2", 5, "IntegerLiteral"], ["5", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["0", 15, "IntegerLiteral"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["i", 8, "Var__DeclRefExpr"], ["int cuai_Var_ i;", 1, "DeclStmt"], ["cuai_Var", 3, "Var__DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["f", 13, "Var__DeclRefExpr"], ["int", 6, "Type"], ["omgi_Var", 52, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["jvli_Var", 29, "Var__DeclRefExpr"], ["char [5]", 1, "Type"], ["char redc_Var[4][5];", 1, "DeclStmt"], ["redc_Var", 19, "Var__DeclRefExpr"], ["char [4][5]", 1, "Type"]] 
kawatea_advex 2270488_2463486_kawatea_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["long long x_ y;", 1, "DeclStmt"], ["scanf", 2, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["100", 1, "IntegerLiteral"], ["long long a[100];", 1, "DeclStmt"], ["ubgi_Var", 3, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["long long [100]", 1, "Type"], ["int i_ j;", 1, "DeclStmt"], ["y", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["x", 7, "ParmVar__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["sum", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["check", 3, "Function__DeclRefExpr"], ["10000000", 1, "IntegerLiteral"], ["long long", 6, "Type"], ["int (long long)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["i", 19, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["int a[20];", 1, "DeclStmt"], ["j", 12, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["int [20]", 1, "Type"], ["0", 9, "IntegerLiteral"]] 
kawatea_advex 2974486_5709773144064000_kawatea_advex.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: %.12lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["100000", 1, "IntegerLiteral"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["j", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 3, "Type"], ["i", 5, "Var__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["t", 7, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["f", 3, "Var__DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["double", 7, "Type"], ["x", 4, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["1e9", 1, "FloatingLiteral"], ["ans", 4, "Var__DeclRefExpr"]] 
kawatea_advex 2974486_5756407898963968_kawatea_advex.c [["17", 1, "IntegerLiteral"], ["int [17]", 1, "Type"], ["int b[4][4];", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 10, "IntegerLiteral"], ["1", 8, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["printf", 3, "DeclRefExpr"], ["int hlgi_Var_ i;", 1, "DeclStmt"], ["hlgi_Var", 3, "Var__DeclRefExpr"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["jzxi_Var", 22, "Var__DeclRefExpr"], ["int", 11, "Type"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["i", 7, "Var__DeclRefExpr"], ["int [4]", 2, "Type"], ["int ()", 1, "Type"], ["iodi_Var", 9, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["x", 3, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["y", 3, "Var__DeclRefExpr"], ["int a[4][4];", 1, "DeclStmt"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["ans", 7, "Var__DeclRefExpr"]] 
nyoro2 1460488_1483485_nyoro2.c [["\"%c\"", 1, "StringLiteral"], ["' '", 1, "CharacterLiteral"], ["\" \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["fprintf", 4, "DeclRefExpr"], ["120", 1, "IntegerLiteral"], ["fgets", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["char *", 1, "Type"], ["p", 8, "Var__DeclRefExpr"], ["char *p;", 1, "DeclStmt"], ["128", 1, "IntegerLiteral"], ["cbuf", 3, "Var__DeclRefExpr"], ["char cbuf[128];", 1, "DeclStmt"], ["'h'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["\"\\n\"", 1, "StringLiteral"], ["'u'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["'y'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["letter_map", 2, "Var__DeclRefExpr"], ["char", 3, "Type"], ["'k'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["int t;", 1, "DeclStmt"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 3, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["char [128]", 1, "Type"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'a'", 4, "CharacterLiteral"], ["char []", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["fscanf", 1, "DeclRefExpr"], ["int", 3, "Type"], ["t", 3, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"]] 
nyoro2 1460488_1483488_nyoro2.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["b_buf", 3, "Var__DeclRefExpr"], ["int b_buf[16];", 1, "DeclStmt"], ["a_buf", 3, "Var__DeclRefExpr"], ["int a_buf[16];", 1, "DeclStmt"], ["recyc_buf", 5, "Var__DeclRefExpr"], ["16", 4, "IntegerLiteral"], ["ref_buf", 5, "Var__DeclRefExpr"], ["num_digits", 12, "Var__DeclRefExpr"], ["result2", 4, "Var__DeclRefExpr"], ["int result1_ result2;", 1, "DeclStmt"], ["1", 5, "IntegerLiteral"], ["buf1", 3, "ParmVar__DeclRefExpr"], ["int *", 4, "Type"], ["2", 3, "IntegerLiteral"], ["int2digits", 4, "Function__DeclRefExpr"], ["fputc", 1, "DeclRefExpr"], ["num", 6, "ParmVar__DeclRefExpr"], ["fprintf", 1, "DeclRefExpr"], ["void (int_ int *_ int)", 1, "Type"], ["int [16]", 4, "Type"], ["0", 16, "IntegerLiteral"], ["result", 6, "Var__DeclRefExpr"], ["buf", 4, "ParmVar__DeclRefExpr"], ["int (int)", 1, "Type"], ["ltmp", 4, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 34, "Type"], ["void", 2, "Type"], ["a", 5, "Var__DeclRefExpr"], ["n", 13, "ParmVar__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["int ref_buf[16];", 1, "DeclStmt"], ["k", 1, "Var"], ["get_digits", 2, "Function__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["buf2", 3, "ParmVar__DeclRefExpr"], ["int recyc_buf[16];", 1, "DeclStmt"], ["i", 24, "Var__DeclRefExpr"], ["int num_digits;", 1, "DeclStmt"], ["comp_digits", 4, "Function__DeclRefExpr"], ["10", 3, "IntegerLiteral"], ["disp_digits", 1, "Function"], ["int i;", 4, "DeclStmt"], ["'0'", 1, "CharacterLiteral"], ["main", 1, "Function"], ["l", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int t;", 1, "DeclStmt"], ["result1", 4, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["int (int *_ int *_ int)", 1, "Type"], ["int i_ j_ k_ l_ n;", 1, "DeclStmt"], ["void (int *_ int)", 1, "Type"], ["t", 3, "Var__DeclRefExpr"], ["int a_ b;", 1, "DeclStmt"], ["int result;", 1, "DeclStmt"]] 
nyoro2 1460488_1595491_nyoro2.c [["fprintf", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["\"%d %d %d\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["result", 5, "Var__DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["best_surprising", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int best_surprising;", 1, "DeclStmt"], ["int i_ j;", 1, "DeclStmt"], ["0", 6, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["int", 11, "Type"], ["main", 1, "Function"], ["t", 4, "Var__DeclRefExpr"], ["fscanf", 3, "DeclRefExpr"], ["int ()", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["int best_not_surprising;", 1, "DeclStmt"], ["s", 4, "Var__DeclRefExpr"], ["best_not_surprising", 5, "Var__DeclRefExpr"]] 
nyoro2 2270488_2449486_nyoro2.c [["\"\\n\"", 1, "StringLiteral"], ["k2", 6, "Var__DeclRefExpr"], ["l2", 6, "Var__DeclRefExpr"], ["result", 4, "Var__DeclRefExpr"], ["int l2_ k2;", 1, "DeclStmt"], ["int i;", 1, "DeclStmt"], ["int [128]", 1, "Type"], ["m", 6, "Var__DeclRefExpr"], ["n", 6, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int lawn_ptn[128][128];", 1, "DeclStmt"], ["int [128][128]", 1, "Type"], ["int n_ m;", 1, "DeclStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["int t;", 1, "DeclStmt"], ["l", 10, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int", 12, "Type"], ["fscanf", 3, "DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["int l_ k;", 1, "DeclStmt"], ["lawn_ptn", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["main", 1, "Function"], ["t", 3, "Var__DeclRefExpr"], ["128", 2, "IntegerLiteral"], ["\"YES\"", 1, "StringLiteral"], ["int lawn_ref;", 1, "DeclStmt"], ["int result;", 1, "DeclStmt"], ["0", 9, "IntegerLiteral"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["fprintf", 3, "DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["lawn_ref", 4, "Var__DeclRefExpr"], ["break", 2, "BreakStmt"], ["k", 10, "Var__DeclRefExpr"], ["goto out_result", 1, "GotoStmt"], ["\"%s\"", 1, "StringLiteral"]] 
nyoro2 2270488_2453486_nyoro2.c [["\"\\n\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["fprintf", 6, "DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["'X'", 1, "CharacterLiteral"], ["char cbuf[8];", 1, "DeclStmt"], ["4", 7, "IntegerLiteral"], ["int [4]", 1, "Type"], ["2", 2, "IntegerLiteral"], ["board_ptn", 9, "Var__DeclRefExpr"], ["int board_ptn[4][4];", 1, "DeclStmt"], ["9", 1, "IntegerLiteral"], ["main", 1, "Function"], ["int [4][4]", 1, "Type"], ["1", 4, "IntegerLiteral"], ["int ()", 1, "Type"], ["l", 19, "Var__DeclRefExpr"], ["k", 14, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["fscanf", 1, "DeclRefExpr"], ["int", 10, "Type"], ["8", 2, "IntegerLiteral"], ["int t;", 1, "DeclStmt"], ["j", 9, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["cbuf", 6, "Var__DeclRefExpr"], ["result", 5, "Var__DeclRefExpr"], ["break", 4, "BreakStmt"], ["char [8]", 1, "Type"], ["char", 1, "Type"], ["int result;", 1, "DeclStmt"], ["10", 3, "IntegerLiteral"], ["int j;", 1, "DeclStmt"], ["int [10]", 1, "Type"], ["\"Game has not completed\"", 1, "StringLiteral"], ["int line_result[10];", 1, "DeclStmt"], ["int k_ l;", 1, "DeclStmt"], ["int chk_dot;", 1, "DeclStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["line_result", 7, "Var__DeclRefExpr"], ["chk_dot", 4, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"], ["fgets", 2, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"]] 
nyoro2 2270488_2463486_nyoro2.c [["\"\\n\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"%ld\"", 1, "StringLiteral"], ["\"%lld\"", 1, "StringLiteral"], ["strlen", 2, "DeclRefExpr"], ["sprintf", 2, "DeclRefExpr"], ["2", 6, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["fprintf", 3, "DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["k", 6, "Var__DeclRefExpr"], ["k_min", 6, "Var__DeclRefExpr"], ["long k;", 1, "DeclStmt"], ["num_x", 9, "Var__DeclRefExpr"], ["k_max", 3, "Var__DeclRefExpr"], ["long long num_x;", 1, "DeclStmt"], ["int i;", 1, "DeclStmt"], ["long k_min;", 1, "DeclStmt"], ["m_max", 5, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["16", 1, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["num_b", 3, "Var__DeclRefExpr"], ["num_a", 4, "Var__DeclRefExpr"], ["l", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["sqrt", 2, "DeclRefExpr"], ["int", 8, "Type"], ["fscanf", 2, "DeclRefExpr"], ["long long", 3, "Type"], ["long long num_b;", 1, "DeclStmt"], ["long", 3, "Type"], ["num_buf", 9, "Var__DeclRefExpr"], ["long long num_a;", 1, "DeclStmt"], ["long k_max;", 1, "DeclStmt"], ["double", 2, "Type"], ["char num_buf[16];", 1, "DeclStmt"], ["char [16]", 1, "Type"], ["break", 2, "BreakStmt"], ["char", 1, "Type"], ["int l_ l_max;", 1, "DeclStmt"], ["int t;", 1, "DeclStmt"], ["l_max", 5, "Var__DeclRefExpr"], ["int m_ m_max;", 1, "DeclStmt"], ["m", 7, "Var__DeclRefExpr"], ["int result;", 1, "DeclStmt"], ["result", 4, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"]] 
nyoro2 2974486_5709773144064000_nyoro2.c [["\"%.7f\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["2", 3, "IntegerLiteral"], ["1", 2, "IntegerLiteral"], ["printf", 2, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["0", 4, "IntegerLiteral"], ["int j;", 1, "DeclStmt"], ["time2", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int i;", 1, "DeclStmt"], ["fscanf", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["double time_base;", 1, "DeclStmt"], ["int", 4, "Type"], ["i", 5, "Var__DeclRefExpr"], ["double", 6, "Type"], ["c", 3, "Var__DeclRefExpr"], ["time1", 4, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["f", 5, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["double c_ f_ x;", 1, "DeclStmt"], ["x", 4, "Var__DeclRefExpr"], ["time_base", 5, "Var__DeclRefExpr"], ["j", 6, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["double time1_ time2;", 1, "DeclStmt"]] 
nyoro2 2974486_5756407898963968_nyoro2.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["int i_ j_ k_ l;", 1, "DeclStmt"], ["4", 5, "IntegerLiteral"], ["int [2]", 1, "Type"], ["int t;", 1, "DeclStmt"], ["j", 9, "Var__DeclRefExpr"], ["int [4][4]", 1, "Type"], ["1", 7, "IntegerLiteral"], ["ans", 4, "Var__DeclRefExpr"], ["int [2][4][4]", 1, "Type"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["t", 3, "Var__DeclRefExpr"], ["int num_match;", 1, "DeclStmt"], ["printf", 4, "DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int ans[2];", 1, "DeclStmt"], ["k", 12, "Var__DeclRefExpr"], ["int match_fig;", 1, "DeclStmt"], ["3", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["l", 5, "Var__DeclRefExpr"], ["num_match", 4, "Var__DeclRefExpr"], ["int board_ptn[2][4][4];", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["fscanf", 3, "DeclRefExpr"], ["int", 11, "Type"], ["match_fig", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 3, "StringLiteral"], ["0", 10, "IntegerLiteral"], ["board_ptn", 7, "Var__DeclRefExpr"], ["2", 4, "IntegerLiteral"], ["\"%d %d %d %d\\n\"", 1, "StringLiteral"], ["int tmp;", 1, "DeclStmt"], ["int [4]", 1, "Type"], ["tmp", 4, "Var__DeclRefExpr"], ["break", 3, "BreakStmt"]] 
nyoro2_advex 1460488_1483485_nyoro2_advex.c [["\"%c\"", 1, "StringLiteral"], ["' '", 1, "CharacterLiteral"], ["\" \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["fprintf", 4, "DeclRefExpr"], ["120", 1, "IntegerLiteral"], ["fgets", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["char *", 1, "Type"], ["p", 8, "Var__DeclRefExpr"], ["char *p;", 1, "DeclStmt"], ["128", 1, "IntegerLiteral"], ["cbuf", 3, "Var__DeclRefExpr"], ["char cbuf[128];", 1, "DeclStmt"], ["'h'", 2, "CharacterLiteral"], ["'x'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["\"\\n\"", 1, "StringLiteral"], ["'u'", 2, "CharacterLiteral"], ["'b'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'l'", 2, "CharacterLiteral"], ["'y'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'p'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["letter_map", 2, "Var__DeclRefExpr"], ["char", 3, "Type"], ["'k'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["int t;", 1, "DeclStmt"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 3, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["char [128]", 1, "Type"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'a'", 4, "CharacterLiteral"], ["char []", 1, "Type"], ["i", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["fscanf", 1, "DeclRefExpr"], ["int", 3, "Type"], ["t", 3, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"]] 
nyoro2_advex 1460488_1483488_nyoro2_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["b_buf", 3, "Var__DeclRefExpr"], ["int b_buf[16];", 1, "DeclStmt"], ["a_buf", 3, "Var__DeclRefExpr"], ["int a_buf[16];", 1, "DeclStmt"], ["recyc_buf", 5, "Var__DeclRefExpr"], ["16", 4, "IntegerLiteral"], ["ref_buf", 5, "Var__DeclRefExpr"], ["result2", 4, "Var__DeclRefExpr"], ["int result1_ result2;", 1, "DeclStmt"], ["int result;", 1, "DeclStmt"], ["a", 5, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["buf1", 3, "ParmVar__DeclRefExpr"], ["int *", 4, "Type"], ["2", 3, "IntegerLiteral"], ["int2digits", 4, "Function__DeclRefExpr"], ["fputc", 1, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["num", 6, "ParmVar__DeclRefExpr"], ["fprintf", 1, "DeclRefExpr"], ["void (int_ int *_ int)", 1, "Type"], ["num_digits", 12, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["int [16]", 4, "Type"], ["0", 16, "IntegerLiteral"], ["result", 6, "Var__DeclRefExpr"], ["ltmp", 4, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 35, "Type"], ["void", 2, "Type"], ["n", 13, "ParmVar__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["int ref_buf[16];", 1, "DeclStmt"], ["k", 1, "Var"], ["get_digits", 2, "Function__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["buf2", 3, "ParmVar__DeclRefExpr"], ["int recyc_buf[16];", 1, "DeclStmt"], ["i", 24, "Var__DeclRefExpr"], ["int num_digits;", 1, "DeclStmt"], ["comp_digits", 4, "Function__DeclRefExpr"], ["10", 3, "IntegerLiteral"], ["disp_digits", 1, "Function"], ["int i;", 4, "DeclStmt"], ["'0'", 1, "CharacterLiteral"], ["main", 1, "Function"], ["buf", 4, "ParmVar__DeclRefExpr"], ["int (int)", 1, "Type"], ["freopen", 1, "DeclRefExpr"], ["l", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int t;", 1, "DeclStmt"], ["result1", 4, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["int a_ b;", 1, "DeclStmt"], ["void (int *_ int)", 1, "Type"], ["t", 3, "Var__DeclRefExpr"], ["int (int *_ int *_ int)", 1, "Type"], ["int i_ j_ k_ l_ n;", 1, "DeclStmt"]] 
nyoro2_advex 1460488_1595491_nyoro2_advex.c [["fprintf", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["\"%d %d %d\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["result", 5, "Var__DeclRefExpr"], ["best_surprising", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int best_surprising;", 1, "DeclStmt"], ["int result;", 1, "DeclStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["fscanf", 3, "DeclRefExpr"], ["int ()", 1, "Type"], ["best_not_surprising", 5, "Var__DeclRefExpr"], ["s", 4, "Var__DeclRefExpr"], ["int", 11, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["t", 4, "Var__DeclRefExpr"], ["duai_Var", 4, "Var__DeclRefExpr"], ["int i_ duai_Var;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["int best_not_surprising;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"]] 
nyoro2_advex 2270488_2449486_nyoro2_advex.c [["\"NO\"", 1, "StringLiteral"], ["\"%s\"", 1, "StringLiteral"], ["goto out_result", 1, "GotoStmt"], ["duai_Var", 10, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["m", 6, "Var__DeclRefExpr"], ["n", 6, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["main", 1, "Function"], ["\"\\n\"", 1, "StringLiteral"], ["int l_ duai_Var;", 1, "DeclStmt"], ["freopen", 1, "DeclRefExpr"], ["lawn_ptn", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int n_ m;", 1, "DeclStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["int i;", 1, "DeclStmt"], ["int [128]", 1, "Type"], ["l", 10, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int", 12, "Type"], ["fscanf", 3, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int result;", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["int l2_ k2;", 1, "DeclStmt"], ["int [128][128]", 1, "Type"], ["int lawn_ptn[128][128];", 1, "DeclStmt"], ["l2", 6, "Var__DeclRefExpr"], ["result", 4, "Var__DeclRefExpr"], ["k2", 6, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["128", 2, "IntegerLiteral"], ["\"YES\"", 1, "StringLiteral"], ["int lawn_ref;", 1, "DeclStmt"], ["break", 2, "BreakStmt"], ["lawn_ref", 4, "Var__DeclRefExpr"], ["0", 9, "IntegerLiteral"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["fprintf", 3, "DeclRefExpr"], ["1", 2, "IntegerLiteral"]] 
nyoro2_advex 2270488_2453486_nyoro2_advex.c [["\"\\n\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["fprintf", 6, "DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["'X'", 1, "CharacterLiteral"], ["1", 4, "IntegerLiteral"], ["'O'", 1, "CharacterLiteral"], ["fgets", 2, "DeclRefExpr"], ["int board_ptn[4][4];", 1, "DeclStmt"], ["freopen", 1, "DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["main", 1, "Function"], ["int [4][4]", 1, "Type"], ["10", 3, "IntegerLiteral"], ["k", 14, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["8", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["l", 19, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int [4]", 1, "Type"], ["int", 10, "Type"], ["fscanf", 1, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int result;", 1, "DeclStmt"], ["2", 2, "IntegerLiteral"], ["board_ptn", 9, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["4", 7, "IntegerLiteral"], ["char cbuf[8];", 1, "DeclStmt"], ["cbuf", 6, "Var__DeclRefExpr"], ["result", 5, "Var__DeclRefExpr"], ["break", 4, "BreakStmt"], ["char [8]", 1, "Type"], ["char", 1, "Type"], ["int duai_Var;", 1, "DeclStmt"], ["\"Game has not completed\"", 1, "StringLiteral"], ["int line_result[10];", 1, "DeclStmt"], ["int k_ l;", 1, "DeclStmt"], ["duai_Var", 9, "Var__DeclRefExpr"], ["int chk_dot;", 1, "DeclStmt"], ["\"%d\\n\"", 1, "StringLiteral"], ["line_result", 7, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["chk_dot", 4, "Var__DeclRefExpr"], ["0", 11, "IntegerLiteral"]] 
nyoro2_advex 2270488_2463486_nyoro2_advex.c [["\"\\n\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["\"%ld\"", 1, "StringLiteral"], ["\"%lld\"", 1, "StringLiteral"], ["strlen", 2, "DeclRefExpr"], ["sprintf", 2, "DeclRefExpr"], ["2", 6, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["fprintf", 3, "DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["result", 4, "Var__DeclRefExpr"], ["long long num_x;", 1, "DeclStmt"], ["m_max", 5, "Var__DeclRefExpr"], ["long long", 3, "Type"], ["i", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["16", 1, "IntegerLiteral"], ["\"%lld %lld\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["1", 10, "IntegerLiteral"], ["num_b", 3, "Var__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 8, "Type"], ["num_a", 4, "Var__DeclRefExpr"], ["long k_min;", 1, "DeclStmt"], ["int i;", 1, "DeclStmt"], ["k_min", 6, "Var__DeclRefExpr"], ["l", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int result;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["long long num_b;", 1, "DeclStmt"], ["long", 3, "Type"], ["num_buf", 9, "Var__DeclRefExpr"], ["num_x", 9, "Var__DeclRefExpr"], ["k_max", 3, "Var__DeclRefExpr"], ["long dual_Var;", 1, "DeclStmt"], ["m", 7, "Var__DeclRefExpr"], ["dual_Var", 6, "Var__DeclRefExpr"], ["long long num_a;", 1, "DeclStmt"], ["long k_max;", 1, "DeclStmt"], ["double", 2, "Type"], ["freopen", 1, "DeclRefExpr"], ["char num_buf[16];", 1, "DeclStmt"], ["char [16]", 1, "Type"], ["break", 2, "BreakStmt"], ["char", 1, "Type"], ["int l_ l_max;", 1, "DeclStmt"], ["int t;", 1, "DeclStmt"], ["l_max", 5, "Var__DeclRefExpr"], ["int m_ m_max;", 1, "DeclStmt"]] 
nyoro2_advex 2974486_5709773144064000_nyoro2_advex.c [["\"%.7f\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["2", 3, "IntegerLiteral"], ["1", 2, "IntegerLiteral"], ["printf", 2, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["0", 4, "IntegerLiteral"], ["int j;", 1, "DeclStmt"], ["time2", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int i;", 1, "DeclStmt"], ["fscanf", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["double time_base;", 1, "DeclStmt"], ["int", 4, "Type"], ["i", 5, "Var__DeclRefExpr"], ["double", 6, "Type"], ["c", 3, "Var__DeclRefExpr"], ["time1", 4, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["f", 5, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["double c_ f_ x;", 1, "DeclStmt"], ["x", 4, "Var__DeclRefExpr"], ["time_base", 5, "Var__DeclRefExpr"], ["j", 6, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["double time1_ time2;", 1, "DeclStmt"]] 
nyoro2_advex 2974486_5756407898963968_nyoro2_advex.c [["\"Bad magician!\\n\"", 1, "StringLiteral"], ["int i_ j_ k_ l;", 1, "DeclStmt"], ["4", 5, "IntegerLiteral"], ["int [2]", 1, "Type"], ["int t;", 1, "DeclStmt"], ["j", 9, "Var__DeclRefExpr"], ["int [4][4]", 1, "Type"], ["1", 7, "IntegerLiteral"], ["ans", 4, "Var__DeclRefExpr"], ["int [2][4][4]", 1, "Type"], ["\"Volunteer cheated!\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["t", 3, "Var__DeclRefExpr"], ["int num_match;", 1, "DeclStmt"], ["printf", 4, "DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["int ans[2];", 1, "DeclStmt"], ["k", 12, "Var__DeclRefExpr"], ["int match_fig;", 1, "DeclStmt"], ["3", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["l", 5, "Var__DeclRefExpr"], ["num_match", 4, "Var__DeclRefExpr"], ["int board_ptn[2][4][4];", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["fscanf", 3, "DeclRefExpr"], ["int", 11, "Type"], ["match_fig", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 3, "StringLiteral"], ["0", 10, "IntegerLiteral"], ["board_ptn", 7, "Var__DeclRefExpr"], ["2", 4, "IntegerLiteral"], ["\"%d %d %d %d\\n\"", 1, "StringLiteral"], ["int tmp;", 1, "DeclStmt"], ["int [4]", 1, "Type"], ["tmp", 4, "Var__DeclRefExpr"], ["break", 3, "BreakStmt"]] 
orfix 1460488_1483485_orfix.c [["printf", 1, "DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["fgets", 1, "DeclRefExpr"], ["'\\0'", 1, "CharacterLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["scanf", 1, "DeclRefExpr"], ["102", 2, "IntegerLiteral"], ["\"A-small-attempt4.in\"", 1, "StringLiteral"], ["int (void)", 1, "Type"], ["int", 3, "Type"], ["int testcases;", 1, "DeclStmt"], ["char *", 1, "Type"], ["char", 3, "Type"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["\"Case #%d: %s\"", 1, "StringLiteral"], ["testcase", 3, "Var__DeclRefExpr"], ["\"\"", 1, "StringLiteral"], ["testcases", 3, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["googlerese", 4, "Var__DeclRefExpr"], ["toEnglish", 2, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["char [102]", 1, "Type"]] 
orfix 1460488_1483488_orfix.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["j", 4, "Var__DeclRefExpr"], ["log10", 1, "DeclRefExpr"], ["digits", 3, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["int [10]", 1, "Type"], ["power", 4, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["s2", 3, "Var__DeclRefExpr"], ["s1", 3, "Var__DeclRefExpr"], ["previous", 3, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["testcase", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["int n_ a_ b;", 1, "DeclStmt"], ["pow", 1, "DeclRefExpr"], ["floor", 1, "DeclRefExpr"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["\"%d\\n\"", 1, "StringLiteral"], ["testcases", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["total", 3, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["int", 15, "Type"], ["int testcases;", 1, "DeclStmt"], ["int i_ s1_ s2_ m;", 1, "DeclStmt"], ["n", 8, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["\"%d %d\\n\"", 1, "StringLiteral"]] 
orfix 1460488_1595491_orfix.c [["2", 1, "IntegerLiteral"], ["0.5", 2, "FloatingLiteral"], ["\"%lf\"", 1, "StringLiteral"], ["max", 6, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["double max_ max_sur;", 1, "DeclStmt"], ["double category;", 1, "DeclStmt"], ["\"%d %d %lf\"", 1, "StringLiteral"], ["double mean_score;", 1, "DeclStmt"], ["surprising", 4, "Var__DeclRefExpr"], ["testcase", 3, "Var__DeclRefExpr"], ["int", 6, "Type"], ["int testcases;", 1, "DeclStmt"], ["double score;", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"], ["category", 5, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["max_sur", 5, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["testcases", 3, "Var__DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["mean_score", 11, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["score", 4, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["goodDancers", 4, "Var__DeclRefExpr"], ["floor", 2, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["best", 5, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["double", 6, "Type"]] 
orfix 2270488_2449486_orfix.c [["\"NO\"", 1, "StringLiteral"], ["int i_ j;", 1, "DeclStmt"], ["jj", 5, "Var__DeclRefExpr"], ["m", 5, "Var__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["testcase", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["int n_ m;", 1, "DeclStmt"], ["lawn", 6, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["int [99]", 1, "Type"], ["1", 5, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int testcases;", 1, "DeclStmt"], ["int", 13, "Type"], ["testcases", 3, "Var__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["i", 11, "Var__DeclRefExpr"], ["int lawn[99][99];", 1, "DeclStmt"], ["int [99][99]", 1, "Type"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["i_res", 3, "Var__DeclRefExpr"], ["j_res", 3, "Var__DeclRefExpr"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["j", 11, "Var__DeclRefExpr"], ["99", 2, "IntegerLiteral"], ["res", 5, "Var__DeclRefExpr"], ["getchar", 1, "DeclRefExpr"], ["int ii_ jj;", 1, "DeclStmt"], ["ii", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["\"YES\"", 1, "StringLiteral"]] 
orfix 2270488_2453486_orfix.c [["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["'X'", 1, "CharacterLiteral"], ["1", 3, "IntegerLiteral"], ["3", 3, "IntegerLiteral"], ["'O'", 1, "CharacterLiteral"], ["empty", 3, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["i", 13, "Var__DeclRefExpr"], ["c", 2, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["testcases", 3, "Var__DeclRefExpr"], ["0", 20, "IntegerLiteral"], ["int testcases;", 1, "DeclStmt"], ["int", 3, "Type"], ["getchar", 3, "DeclRefExpr"], ["status_e", 1, "Enum"], ["XPLYR", 8, "EnumConstant__DeclRefExpr"], ["\"X won\"", 2, "StringLiteral"], ["char *", 1, "Type"], ["break", 6, "BreakStmt"], ["int (void)", 1, "Type"], ["char", 1, "Type"], ["unsigned char [2][4]", 2, "Type"], ["freopen", 1, "DeclRefExpr"], ["unsigned char [2]", 1, "Type"], ["main", 1, "Function"], ["\"r\"", 1, "StringLiteral"], ["2", 4, "IntegerLiteral"], ["row", 4, "Var__DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["DRAW", 2, "EnumConstant__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["OPLYR", 15, "EnumConstant__DeclRefExpr"], ["unsigned char [4]", 2, "Type"], ["char *[]", 1, "Type"], ["status", 13, "Var__DeclRefExpr"], ["\"O won\"", 2, "StringLiteral"], ["INCOMPLETE", 3, "EnumConstant__DeclRefExpr"], ["result_str", 2, "Var__DeclRefExpr"], ["\"Draw\"", 2, "StringLiteral"], ["\"Game has not completed\"", 2, "StringLiteral"], ["4", 16, "IntegerLiteral"], ["enum status_e", 2, "Type"], ["testcase", 3, "Var__DeclRefExpr"], ["col", 4, "Var__DeclRefExpr"], ["unsigned char", 7, "Type"], ["'T'", 1, "CharacterLiteral"], ["diag", 7, "Var__DeclRefExpr"], ["unsigned char [2][2]", 1, "Type"]] 
orfix 2270488_2463486_orfix.c [["\"Case #%d: %llu\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0.000000000000000001L", 1, "FloatingLiteral"], ["long long", 1, "Type"], ["sqrtl", 1, "DeclRefExpr"], ["is_palindrome", 3, "Function__DeclRefExpr"], ["l", 3, "Var__DeclRefExpr"], ["long double", 1, "Type"], ["\"\"", 1, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["testcases", 3, "Var__DeclRefExpr"], ["\"%llu\"", 1, "StringLiteral"], ["1024", 1, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["i", 7, "ParmVar__DeclRefExpr"], ["int", 4, "Type"], ["unsigned long long", 5, "Type"], ["int testcases;", 1, "DeclStmt"], ["unsigned long long int a_ b;", 1, "DeclStmt"], ["int (void)", 1, "Type"], ["char", 2, "Type"], ["unsigned int", 1, "Type"], ["ret", 4, "Var__DeclRefExpr"], ["a", 6, "Var__DeclRefExpr"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["char (unsigned long long)", 1, "Type"], ["2", 1, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["main", 1, "Function"], ["char [1024]", 1, "Type"], ["freopen", 1, "DeclRefExpr"], ["\"%llu %llu\\n\"", 1, "StringLiteral"], ["root", 4, "Var__DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["testcase", 3, "Var__DeclRefExpr"], ["s", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["res", 3, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"]] 
orfix 2974486_5709773144064000_orfix.c [["\"Case #%d: %lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["timeSpent", 6, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["int", 3, "Type"], ["int testcases;", 1, "DeclStmt"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["2", 1, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["cookieRate", 7, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["testcase", 3, "Var__DeclRefExpr"], ["testcases", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["extraCookieRate", 4, "Var__DeclRefExpr"], ["double farmPrice_ extraCookieRate_ cookiesToWin;", 1, "DeclStmt"], ["farmPrice", 4, "Var__DeclRefExpr"], ["double", 5, "Type"], ["cookiesToWin", 5, "Var__DeclRefExpr"]] 
orfix 2974486_5756407898963968_orfix.c [["\"Bad magician!\"", 1, "StringLiteral"], ["3", 1, "IntegerLiteral"], ["int i_ j;", 1, "DeclStmt"], ["testcases", 3, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["testcase", 5, "Var__DeclRefExpr"], ["cards", 6, "Var__DeclRefExpr"], ["\"%*d %*d %*d %*d\"", 2, "StringLiteral"], ["\"%d\\n\"", 3, "StringLiteral"], ["int row;", 1, "DeclStmt"], ["break", 3, "BreakStmt"], ["int (void)", 1, "Type"], ["1", 4, "IntegerLiteral"], ["scanf", 7, "DeclRefExpr"], ["answer", 5, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["int cards[4];", 1, "DeclStmt"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int answer;", 1, "DeclStmt"], ["int", 11, "Type"], ["theCard", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int testcases;", 1, "DeclStmt"], ["int [4]", 1, "Type"], ["4", 5, "IntegerLiteral"], ["int found;", 1, "DeclStmt"], ["row", 9, "Var__DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["found", 4, "Var__DeclRefExpr"], ["int card_ theCard;", 1, "DeclStmt"], ["card", 4, "Var__DeclRefExpr"], ["\"%d %d %d %d\"", 1, "StringLiteral"], ["i", 4, "Var__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["\"Case #%d: %s\\n\"", 2, "StringLiteral"]] 
orfix_advex 1460488_1483485_orfix_advex.c [["printf", 1, "DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["fgets", 1, "DeclRefExpr"], ["'\\0'", 1, "CharacterLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["scanf", 1, "DeclRefExpr"], ["\"Case #%d: %s\"", 1, "StringLiteral"], ["testcase", 3, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["main", 1, "Function"], ["td_c", 1, "Typedef"], ["char *", 1, "Type"], ["char", 4, "Type"], ["int", 3, "Type"], ["int testcases;", 1, "DeclStmt"], ["c", 5, "Var__DeclRefExpr"], ["googlerese", 4, "Var__DeclRefExpr"], ["toEnglish", 2, "Var__DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["char [102]", 1, "Type"], ["102", 2, "IntegerLiteral"], ["testcases", 3, "Var__DeclRefExpr"], ["\"\"", 1, "StringLiteral"]] 
orfix_advex 1460488_1483488_orfix_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["exei_Var", 6, "Var__DeclRefExpr"], ["previous", 3, "Var__DeclRefExpr"], ["mwvi_Var", 4, "Var__DeclRefExpr"], ["digits", 3, "Var__DeclRefExpr"], ["10", 4, "IntegerLiteral"], ["int [10]", 1, "Type"], ["power", 4, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["s2", 3, "Var__DeclRefExpr"], ["s1", 3, "Var__DeclRefExpr"], ["int s1_ s2_ m;", 1, "DeclStmt"], ["log10", 1, "DeclRefExpr"], ["rmpi_Var", 8, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["wvei_Var", 3, "Var__DeclRefExpr"], ["pow", 1, "DeclRefExpr"], ["floor", 1, "DeclRefExpr"], ["main", 1, "Function"], ["1", 3, "IntegerLiteral"], ["int (void)", 1, "Type"], ["\"%d\\n\"", 1, "StringLiteral"], ["int", 16, "Type"], ["int rmpi_Var;", 1, "DeclStmt"], ["break", 1, "BreakStmt"], ["int seci_Var;", 1, "DeclStmt"], ["seci_Var", 3, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["total", 3, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["int a_ b;", 1, "DeclStmt"]] 
orfix_advex 1460488_1595491_orfix_advex.c [["2", 1, "IntegerLiteral"], ["\"%lf\"", 1, "StringLiteral"], ["max", 6, "Var__DeclRefExpr"], ["0.5", 2, "FloatingLiteral"], ["td_d category;", 1, "DeclStmt"], ["\"%d %d %lf\"", 1, "StringLiteral"], ["td_d mean_score;", 1, "DeclStmt"], ["int", 7, "Type"], ["1", 3, "IntegerLiteral"], ["category", 5, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["max_sur", 5, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["td_d", 7, "Typedef"], ["double", 1, "Type"], ["td_d max_ max_sur;", 1, "DeclStmt"], ["score", 4, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["surprising", 4, "Var__DeclRefExpr"], ["iydi_Var", 3, "Var__DeclRefExpr"], ["duei_Var", 3, "Var__DeclRefExpr"], ["3", 1, "IntegerLiteral"], ["mean_score", 11, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["int duei_Var;", 1, "DeclStmt"], ["ojdi_Var", 3, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["goodDancers", 4, "Var__DeclRefExpr"], ["floor", 2, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["td_d score;", 1, "DeclStmt"], ["main", 1, "Function"], ["best", 5, "Var__DeclRefExpr"]] 
orfix_advex 2270488_2449486_orfix_advex.c [["\"YES\"", 1, "StringLiteral"], ["jj", 4, "Var__DeclRefExpr"], ["ii", 4, "Var__DeclRefExpr"], ["getchar", 1, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["j_res", 3, "Var__DeclRefExpr"], ["i_res", 3, "Var__DeclRefExpr"], ["\"%d %d\\n\"", 1, "StringLiteral"], ["int [99][99]", 1, "Type"], ["int lawn[99][99];", 1, "DeclStmt"], ["0", 13, "IntegerLiteral"], ["res", 5, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["int", 14, "Type"], ["int wgpi_Var;", 1, "DeclStmt"], ["main", 1, "Function"], ["lawn", 6, "Var__DeclRefExpr"], ["ncni_Var", 3, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["int [99]", 1, "Type"], ["int (void)", 1, "Type"], ["wgpi_Var", 3, "Var__DeclRefExpr"], ["int fcki_Var_ m;", 1, "DeclStmt"], ["fcki_Var", 5, "Var__DeclRefExpr"], ["vcmi_Var", 11, "Var__DeclRefExpr"], ["m", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["axei_Var", 11, "Var__DeclRefExpr"], ["99", 2, "IntegerLiteral"], ["int vcmi_Var_ axei_Var;", 1, "DeclStmt"]] 
orfix_advex 2270488_2453486_orfix_advex.c [["printf", 1, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["1", 3, "IntegerLiteral"], ["3", 3, "IntegerLiteral"], ["ahlu_Var", 12, "Var__DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["empty", 3, "Var__DeclRefExpr"], ["c", 2, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["getchar", 3, "DeclRefExpr"], ["status_e", 1, "Enum"], ["0", 20, "IntegerLiteral"], ["sxei_Var", 3, "Var__DeclRefExpr"], ["unsigned char", 7, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["wlyu_Var", 13, "Var__DeclRefExpr"], ["\"replace-me.out\"", 1, "StringLiteral"], ["int", 3, "Type"], ["XPLYR", 9, "EnumConstant__DeclRefExpr"], ["\"X won\"", 2, "StringLiteral"], ["'X'", 1, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["char *", 1, "Type"], ["break", 9, "BreakStmt"], ["int (void)", 1, "Type"], ["char", 1, "Type"], ["unsigned char [2][4]", 2, "Type"], ["freopen", 1, "DeclRefExpr"], ["unsigned char [2]", 1, "Type"], ["main", 1, "Function"], ["DRAW", 2, "EnumConstant__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["OPLYR", 17, "EnumConstant__DeclRefExpr"], ["unsigned char [4]", 2, "Type"], ["char *[]", 1, "Type"], ["status", 16, "Var__DeclRefExpr"], ["\"O won\"", 2, "StringLiteral"], ["INCOMPLETE", 3, "EnumConstant__DeclRefExpr"], ["result_str", 2, "Var__DeclRefExpr"], ["\"Draw\"", 2, "StringLiteral"], ["\"Game has not completed\"", 2, "StringLiteral"], ["4", 16, "IntegerLiteral"], ["enum status_e", 2, "Type"], ["col", 4, "Var__DeclRefExpr"], ["2", 4, "IntegerLiteral"], ["int kyui_Var;", 1, "DeclStmt"], ["row", 4, "Var__DeclRefExpr"], ["'T'", 1, "CharacterLiteral"], ["kyui_Var", 3, "Var__DeclRefExpr"], ["diag", 7, "Var__DeclRefExpr"], ["unsigned char [2][2]", 1, "Type"]] 
orfix_advex 2270488_2463486_orfix_advex.c [["\"Case #%d: %llu\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0.000000000000000001L", 1, "FloatingLiteral"], ["\"\"", 1, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["testcases", 3, "Var__DeclRefExpr"], ["\"%llu\"", 1, "StringLiteral"], ["1024", 1, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["ret", 4, "Var__DeclRefExpr"], ["td_ull a_ b;", 1, "DeclStmt"], ["a", 6, "Var__DeclRefExpr"], ["td_ull", 4, "Typedef"], ["char [1024]", 1, "Type"], ["sqrtl", 1, "DeclRefExpr"], ["is_palindrome", 3, "Function__DeclRefExpr"], ["long double", 1, "Type"], ["l", 3, "Var__DeclRefExpr"], ["ciru_Var", 7, "ParmVar__DeclRefExpr"], ["int", 4, "Type"], ["unsigned long long", 3, "Type"], ["int testcases;", 1, "DeclStmt"], ["int (void)", 1, "Type"], ["char", 2, "Type"], ["unsigned int", 1, "Type"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["char (unsigned long long)", 1, "Type"], ["2", 1, "IntegerLiteral"], ["main", 1, "Function"], ["\"%llu %llu\\n\"", 1, "StringLiteral"], ["root", 4, "Var__DeclRefExpr"], ["testcase", 3, "Var__DeclRefExpr"], ["s", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["res", 3, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["long long", 1, "Type"]] 
orfix_advex 2974486_5709773144064000_orfix_advex.c [["\"Case #%d: %lf\\n\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["cookiesToWin", 5, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["cookieRate", 7, "Var__DeclRefExpr"], ["int (void)", 1, "Type"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["int", 4, "Type"], ["td_d", 6, "Typedef"], ["ret_val", 2, "Var__DeclRefExpr"], ["double", 1, "Type"], ["\"replace-me.out\"", 1, "StringLiteral"], ["\"w\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf %lf %lf\\n\"", 1, "StringLiteral"], ["nvpi_Var", 3, "Var__DeclRefExpr"], ["timeSpent", 6, "Var__DeclRefExpr"], ["int ceti_Var;", 1, "DeclStmt"], ["ceti_Var", 3, "Var__DeclRefExpr"], ["break", 1, "BreakStmt"], ["extraCookieRate", 4, "Var__DeclRefExpr"], ["td_d farmPrice_ extraCookieRate_ cookiesToWin;", 1, "DeclStmt"], ["farmPrice", 4, "Var__DeclRefExpr"]] 
orfix_advex 2974486_5756407898963968_orfix_advex.c [["\"Bad magician!\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int [4]", 1, "Type"], ["shqi_Var", 3, "Var__DeclRefExpr"], ["4", 5, "IntegerLiteral"], ["int ewni_Var;", 1, "DeclStmt"], ["yoni_Var", 5, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["3", 1, "IntegerLiteral"], ["int shqi_Var;", 1, "DeclStmt"], ["cards", 6, "Var__DeclRefExpr"], ["\"%*d %*d %*d %*d\"", 2, "StringLiteral"], ["\"%d\\n\"", 3, "StringLiteral"], ["int row;", 1, "DeclStmt"], ["1", 4, "IntegerLiteral"], ["main", 1, "Function"], ["ewni_Var", 4, "Var__DeclRefExpr"], ["scanf", 7, "DeclRefExpr"], ["answer", 5, "Var__DeclRefExpr"], ["int answer;", 1, "DeclStmt"], ["int", 12, "Type"], ["theCard", 3, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["int found;", 1, "DeclStmt"], ["row", 9, "Var__DeclRefExpr"], ["found", 4, "Var__DeclRefExpr"], ["int card_ theCard;", 1, "DeclStmt"], ["card", 4, "Var__DeclRefExpr"], ["int cards[4];", 1, "DeclStmt"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"%d %d %d %d\"", 1, "StringLiteral"], ["bfui_Var", 4, "Var__DeclRefExpr"], ["printf", 3, "DeclRefExpr"], ["\"Case #%d: %s\\n\"", 2, "StringLiteral"], ["int (void)", 1, "Type"], ["break", 3, "BreakStmt"]] 
peterpan 1460488_1483485_peterpan.c [["putchar", 2, "DeclRefExpr"], ["'z'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 1, "DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["getchar", 2, "DeclRefExpr"], ["'\\n'", 2, "CharacterLiteral"], ["readline", 2, "Function__DeclRefExpr"], ["'a'", 2, "CharacterLiteral"], ["void ()", 1, "Type"], [";", 1, "NullStmt"], ["int ()", 1, "Type"], ["void", 1, "Type"], ["main", 1, "Function"], ["ch", 7, "Var__DeclRefExpr"], ["int", 3, "Type"], ["char", 2, "Type"], ["int T_ tcase;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["map", 2, "Var__DeclRefExpr"], ["0", 1, "IntegerLiteral"], ["char []", 1, "Type"]] 
peterpan 1460488_1483488_peterpan.c [["\"Case #%d: %d\\r\\n\"", 1, "StringLiteral"], ["10", 1, "IntegerLiteral"], ["cands", 6, "Var__DeclRefExpr"], ["d", 8, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["m", 6, "Var__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["i", 16, "Var__DeclRefExpr"], ["res", 4, "Var__DeclRefExpr"], ["char nstr[20];", 1, "DeclStmt"], ["'9'", 1, "CharacterLiteral"], ["A", 5, "Var__DeclRefExpr"], ["B", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["j", 5, "Var__DeclRefExpr"], ["int", 13, "Type"], ["\"%d%d\"", 1, "StringLiteral"], ["ms", 3, "Var__DeclRefExpr"], ["sscanf", 1, "DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["nstr", 12, "Var__DeclRefExpr"], ["char [20]", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["\"%d\"", 4, "StringLiteral"], ["int T_ tcase_ A_ B_ res_ n_ m_ d_ i_ ms[10]_ cands_ j;", 1, "DeclStmt"], ["2", 1, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["char", 1, "Type"], ["break", 2, "BreakStmt"], ["'0'", 1, "CharacterLiteral"], ["T", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"]] 
peterpan 1460488_1595491_peterpan.c [["\"Case #%d: %d\\r\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["tcase", 5, "Var__DeclRefExpr"], ["int T_ tcase_ N_ S_ p_ t_ t3_ best_ i_ res;", 1, "DeclStmt"], ["int", 11, "Type"], ["T", 3, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["best", 6, "Var__DeclRefExpr"], ["main", 1, "Function"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["N", 3, "Var__DeclRefExpr"], ["S", 4, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["t3", 5, "Var__DeclRefExpr"], ["i", 4, "Var__DeclRefExpr"], ["res", 5, "Var__DeclRefExpr"]] 
peterpan 2270488_2449486_peterpan.c [["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["0", 10, "IntegerLiteral"], ["\"%d\"", 4, "StringLiteral"], ["scanf", 4, "DeclRefExpr"], ["maxCol", 5, "Var__DeclRefExpr"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["maxRow", 5, "Var__DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["101", 4, "IntegerLiteral"], ["int [101]", 3, "Type"], ["int [101][101]", 1, "Type"], ["int a[101][101]_ maxRow[101]_ maxCol[101];", 1, "DeclStmt"], ["res", 5, "Var__DeclRefExpr"], ["getchar", 1, "DeclRefExpr"], ["'\\n'", 1, "CharacterLiteral"], ["N", 5, "Var__DeclRefExpr"], ["readline", 1, "Function"], [";", 1, "NullStmt"], ["int ()", 1, "Type"], ["a", 8, "Var__DeclRefExpr"], ["void", 1, "Type"], ["M", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 11, "Type"], ["\"YES\"", 1, "StringLiteral"], ["int i_ j_ tcase_ T_ N_ M_ res;", 1, "DeclStmt"], ["void ()", 1, "Type"], ["i", 21, "Var__DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["j", 21, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"]] 
peterpan 2270488_2453486_peterpan.c [["continue", 3, "ContinueStmt"], ["exit", 1, "DeclRefExpr"], ["xs", 5, "Var__DeclRefExpr"], ["'O'", 2, "CharacterLiteral"], ["printf", 5, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 33, "Var__DeclRefExpr"], ["tcase", 9, "Var__DeclRefExpr"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["os", 5, "Var__DeclRefExpr"], ["\"Case #%d: %c won\\n\"", 3, "StringLiteral"], ["void ()", 1, "Type"], ["winner", 14, "Var__DeclRefExpr"], ["int i_ j_ tcase_ T_ xs_ os_ ts_ winner;", 1, "DeclStmt"], ["'T'", 5, "CharacterLiteral"], ["int", 9, "Type"], ["main", 1, "Function"], ["void", 1, "Type"], ["int ()", 1, "Type"], ["i", 16, "Var__DeclRefExpr"], ["\"Error reading input!\\n\"", 1, "StringLiteral"], ["readline", 3, "Function__DeclRefExpr"], [";", 1, "NullStmt"], ["'.'", 1, "CharacterLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["getchar", 2, "DeclRefExpr"], ["ts", 4, "Var__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["char board[5][5]_ last;", 1, "DeclStmt"], ["char [5][5]", 1, "Type"], ["char [5]", 1, "Type"], ["break", 6, "BreakStmt"], ["last", 10, "Var__DeclRefExpr"], ["char", 2, "Type"], ["\"%d\"", 1, "StringLiteral"], ["5", 2, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["board", 14, "Var__DeclRefExpr"], ["fprintf", 1, "DeclRefExpr"], ["4", 11, "IntegerLiteral"], ["'X'", 2, "CharacterLiteral"]] 
peterpan 2270488_2463486_peterpan.c [["ceil", 1, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["10000000", 1, "IntegerLiteral"], [";", 1, "NullStmt"], ["exit", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int (long long)", 1, "Type"], ["double", 2, "Type"], ["int (int)", 1, "Type"], ["isPalLL", 2, "Function__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 15, "Type"], ["0", 8, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["j", 10, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["sa", 3, "Var__DeclRefExpr"], ["malloc", 1, "DeclRefExpr"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["n", 8, "ParmVar__DeclRefExpr"], ["char [20]", 1, "Type"], ["fprintf", 1, "DeclRefExpr"], ["buffer", 7, "Var__DeclRefExpr"], ["int T_ tcase_ *count;", 1, "DeclStmt"], ["int sa_ sb_ i;", 1, "DeclStmt"], ["char", 1, "Type"], ["10", 4, "IntegerLiteral"], ["int i_ j;", 2, "DeclStmt"], ["isPal", 2, "Function__DeclRefExpr"], ["long long", 4, "Type"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["i", 25, "Var__DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["a", 3, "Var__DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["\"Out of memory!\"", 1, "StringLiteral"], ["count", 10, "Var__DeclRefExpr"], ["int *", 1, "Type"], ["\"%s\\n\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["sb", 3, "Var__DeclRefExpr"], ["10000001", 1, "IntegerLiteral"]] 
peterpan 2974486_5709773144064000_peterpan.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"Reseting counter.\\n\"", 1, "StringLiteral"], ["2.0", 1, "FloatingLiteral"], ["0", 5, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["int T_ tcase_ i_ counter;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["double C_ F_ X_ t_ v_ tf_ tmin;", 1, "DeclStmt"], ["X", 4, "Var__DeclRefExpr"], ["int", 5, "Type"], ["main", 1, "Function"], ["100", 1, "IntegerLiteral"], ["tmin", 5, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["i", 3, "Var__DeclRefExpr"], ["counter", 6, "Var__DeclRefExpr"], ["C", 3, "Var__DeclRefExpr"], ["v", 6, "Var__DeclRefExpr"], ["F", 3, "Var__DeclRefExpr"], ["double", 7, "Type"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["tf", 5, "Var__DeclRefExpr"]] 
peterpan 2974486_5756407898963968_peterpan.c [["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["\"%s\\n\"", 1, "StringLiteral"], ["\"%d\"", 5, "StringLiteral"], ["scanf", 5, "DeclRefExpr"], ["arr2", 3, "Var__DeclRefExpr"], ["4", 10, "IntegerLiteral"], ["tcase", 5, "Var__DeclRefExpr"], ["int", 12, "Type"], ["main", 1, "Function"], ["i", 9, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 14, "Var__DeclRefExpr"], ["int T_ tcase_ i_ j_ jj_ counter_ resj_ r1_ r2_ arr1[4][4]_ arr2[4][4];", 1, "DeclStmt"], ["jj", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int [4]", 2, "Type"], ["counter", 5, "Var__DeclRefExpr"], ["resj", 4, "Var__DeclRefExpr"], ["r1", 5, "Var__DeclRefExpr"], ["r2", 4, "Var__DeclRefExpr"], ["arr1", 4, "Var__DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["int [4][4]", 2, "Type"]] 
peterpan_advex 1460488_1483485_peterpan_advex.c [["putchar", 2, "DeclRefExpr"], ["'z'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 1, "DeclRefExpr"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["getchar", 2, "DeclRefExpr"], ["'\\n'", 2, "CharacterLiteral"], ["readline", 2, "Function__DeclRefExpr"], ["'a'", 2, "CharacterLiteral"], ["void ()", 1, "Type"], [";", 1, "NullStmt"], ["int ()", 1, "Type"], ["void", 1, "Type"], ["main", 1, "Function"], ["ch", 7, "Var__DeclRefExpr"], ["int", 3, "Type"], ["char", 2, "Type"], ["int T_ tcase;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["map", 2, "Var__DeclRefExpr"], ["0", 1, "IntegerLiteral"], ["char []", 1, "Type"]] 
peterpan_advex 1460488_1483488_peterpan_advex.c [["\"Case #%d: %d\\r\\n\"", 1, "StringLiteral"], ["'0'", 1, "CharacterLiteral"], ["'9'", 1, "CharacterLiteral"], ["duai_Var", 16, "Var__DeclRefExpr"], ["d", 8, "Var__DeclRefExpr"], ["m", 6, "Var__DeclRefExpr"], ["int [10]", 1, "Type"], ["n", 5, "Var__DeclRefExpr"], ["res", 4, "Var__DeclRefExpr"], ["char nstr[20];", 1, "DeclStmt"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["nstr", 12, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["A", 5, "Var__DeclRefExpr"], ["int T_ tcase_ A_ B_ res_ n_ m_ d_ duai_Var_ ms[10]_ cands_ j;", 1, "DeclStmt"], ["tcase", 5, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["int", 13, "Type"], ["B", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 4, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["cands", 6, "Var__DeclRefExpr"], ["10", 1, "IntegerLiteral"], ["char [20]", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["ms", 3, "Var__DeclRefExpr"], ["sscanf", 1, "DeclRefExpr"], ["sprintf", 1, "DeclRefExpr"], ["strlen", 1, "DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["char", 1, "Type"], ["break", 2, "BreakStmt"]] 
peterpan_advex 1460488_1595491_peterpan_advex.c [["printf", 1, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["res", 5, "Var__DeclRefExpr"], ["\"Case #%d: %d\\r\\n\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int", 11, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["best", 6, "Var__DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["int T_ tcase_ N_ S_ p_ t_ t3_ best_ duai_Var_ res;", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["N", 3, "Var__DeclRefExpr"], ["S", 4, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["t3", 5, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["duai_Var", 4, "Var__DeclRefExpr"]] 
peterpan_advex 2270488_2449486_peterpan_advex.c [["\"YES\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["0", 10, "IntegerLiteral"], ["scanf", 4, "DeclRefExpr"], ["maxCol", 5, "Var__DeclRefExpr"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["maxRow", 5, "Var__DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["101", 4, "IntegerLiteral"], ["int [101]", 3, "Type"], ["int [101][101]", 1, "Type"], ["int a[101][101]_ maxRow[101]_ maxCol[101];", 1, "DeclStmt"], ["res", 5, "Var__DeclRefExpr"], ["M", 5, "Var__DeclRefExpr"], ["sjbi_Var", 3, "Var__DeclRefExpr"], ["getchar", 1, "DeclRefExpr"], ["'\\n'", 1, "CharacterLiteral"], ["j", 21, "Var__DeclRefExpr"], ["N", 5, "Var__DeclRefExpr"], ["readline", 1, "Function"], [";", 1, "NullStmt"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["a", 8, "Var__DeclRefExpr"], ["void", 1, "Type"], ["int", 11, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int i_ j_ tcase_ sjbi_Var_ N_ M_ res;", 1, "DeclStmt"], ["tcase", 5, "Var__DeclRefExpr"], ["\"%d\"", 4, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["void ()", 1, "Type"], ["i", 21, "Var__DeclRefExpr"]] 
peterpan_advex 2270488_2453486_peterpan_advex.c [["continue", 3, "ContinueStmt"], ["exit", 1, "DeclRefExpr"], ["\"Error reading input!\\n\"", 1, "StringLiteral"], ["duai_Var", 16, "Var__DeclRefExpr"], ["int duai_Var_ j_ tcase_ T_ xs_ os_ ts_ winner;", 1, "DeclStmt"], ["'\\n'", 1, "CharacterLiteral"], ["getchar", 2, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["tcase", 9, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["int", 9, "Type"], ["void", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["char board[5][5]_ last;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["'.'", 1, "CharacterLiteral"], [";", 1, "NullStmt"], ["\"Case #%d: %c won\\n\"", 3, "StringLiteral"], ["void ()", 1, "Type"], ["winner", 14, "Var__DeclRefExpr"], ["readline", 3, "Function__DeclRefExpr"], ["j", 33, "Var__DeclRefExpr"], ["printf", 5, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["xs", 5, "Var__DeclRefExpr"], ["'O'", 2, "CharacterLiteral"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["os", 5, "Var__DeclRefExpr"], ["ts", 4, "Var__DeclRefExpr"], ["0", 13, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["board", 14, "Var__DeclRefExpr"], ["char [5][5]", 1, "Type"], ["char [5]", 1, "Type"], ["break", 6, "BreakStmt"], ["last", 10, "Var__DeclRefExpr"], ["char", 2, "Type"], ["5", 2, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["4", 11, "IntegerLiteral"], ["'X'", 2, "CharacterLiteral"], ["'T'", 5, "CharacterLiteral"]] 
peterpan_advex 2270488_2463486_peterpan_advex.c [["ceil", 1, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["10000000", 1, "IntegerLiteral"], [";", 1, "NullStmt"], ["exit", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int (long long)", 1, "Type"], ["double", 2, "Type"], ["int (int)", 1, "Type"], ["isPalLL", 2, "Function__DeclRefExpr"], ["sqrt", 2, "DeclRefExpr"], ["int", 15, "Type"], ["0", 8, "IntegerLiteral"], ["1", 10, "IntegerLiteral"], ["j", 10, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["sa", 3, "Var__DeclRefExpr"], ["malloc", 1, "DeclRefExpr"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["n", 8, "ParmVar__DeclRefExpr"], ["char [20]", 1, "Type"], ["fprintf", 1, "DeclRefExpr"], ["buffer", 7, "Var__DeclRefExpr"], ["int T_ tcase_ *count;", 1, "DeclStmt"], ["int sa_ sb_ i;", 1, "DeclStmt"], ["char", 1, "Type"], ["10", 4, "IntegerLiteral"], ["int i_ j;", 2, "DeclStmt"], ["isPal", 2, "Function__DeclRefExpr"], ["long long", 4, "Type"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["i", 25, "Var__DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["a", 3, "Var__DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["\"Out of memory!\"", 1, "StringLiteral"], ["count", 10, "Var__DeclRefExpr"], ["int *", 1, "Type"], ["\"%s\\n\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["sb", 3, "Var__DeclRefExpr"], ["10000001", 1, "IntegerLiteral"]] 
peterpan_advex 2974486_5709773144064000_peterpan_advex.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"Reseting counter.\\n\"", 1, "StringLiteral"], ["2.0", 1, "FloatingLiteral"], ["0", 5, "IntegerLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["100", 1, "IntegerLiteral"], ["tmin", 5, "Var__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["int", 5, "Type"], ["int dtgi_Var_ tcase_ i_ counter;", 1, "DeclStmt"], ["i", 3, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["counter", 6, "Var__DeclRefExpr"], ["double C_ F_ X_ t_ v_ tf_ tmin;", 1, "DeclStmt"], ["X", 4, "Var__DeclRefExpr"], ["C", 3, "Var__DeclRefExpr"], ["dtgi_Var", 3, "Var__DeclRefExpr"], ["v", 6, "Var__DeclRefExpr"], ["F", 3, "Var__DeclRefExpr"], ["double", 7, "Type"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["tf", 5, "Var__DeclRefExpr"]] 
peterpan_advex 2974486_5756407898963968_peterpan_advex.c [["\"Bad magician!\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 3, "DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["arr2", 3, "Var__DeclRefExpr"], ["4", 10, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["\"%s\\n\"", 1, "StringLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["arr1", 4, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int [4]", 2, "Type"], ["int ()", 1, "Type"], ["int", 12, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["tcase", 5, "Var__DeclRefExpr"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["sjbi_Var", 3, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"], ["j", 14, "Var__DeclRefExpr"], ["jj", 5, "Var__DeclRefExpr"], ["counter", 5, "Var__DeclRefExpr"], ["resj", 4, "Var__DeclRefExpr"], ["int sjbi_Var_ tcase_ i_ j_ jj_ counter_ resj_ r1_ r2_ arr1[4][4]_ arr2[4][4];", 1, "DeclStmt"], ["r1", 5, "Var__DeclRefExpr"], ["r2", 4, "Var__DeclRefExpr"]] 
Piano 1460488_1483485_Piano.c [["\"\"", 1, "StringLiteral"], ["putchar", 1, "DeclRefExpr"], ["puts", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["gets", 1, "DeclRefExpr"], ["\"%d%*c\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 4, "Type"], ["'a'", 1, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["char [101]", 1, "Type"], ["int t_ i_ j;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["s", 2, "Var__DeclRefExpr"], ["' '", 2, "CharacterLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["g", 5, "Var__DeclRefExpr"], ["char", 2, "Type"], ["char *", 1, "Type"], ["j", 6, "Var__DeclRefExpr"], ["char g[101];", 1, "DeclStmt"], ["1", 1, "IntegerLiteral"], ["101", 1, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"]] 
Piano 1460488_1483488_Piano.c [["\"%d\\n\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["\"0\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["puts", 1, "DeclRefExpr"], [";", 1, "NullStmt"], ["10", 5, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["int t_ a_ b_ i_ j_ k_ ten_ c;", 1, "DeclStmt"], ["int", 10, "Type"], ["int ()", 1, "Type"], ["b", 4, "Var__DeclRefExpr"], ["i", 5, "Var__DeclRefExpr"], ["lc", 1, "Var"], ["j", 7, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["ten", 8, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"]] 
Piano 1460488_1595491_Piano.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], [";", 1, "NullStmt"], ["0", 5, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["int T_ n_ s_ p_ t[100]_ i_ j_ x_ u;", 1, "DeclStmt"], ["n", 5, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["int", 10, "Type"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["break", 2, "BreakStmt"], ["s", 3, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["t", 8, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["int [100]", 1, "Type"], ["i", 13, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 15, "Var__DeclRefExpr"], ["u", 5, "Var__DeclRefExpr"]] 
Piano 2270488_2449486_Piano.c [["break", 2, "BreakStmt"], ["puts", 1, "DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["mcol", 5, "Var__DeclRefExpr"], ["mrow", 5, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 3, "Type"], ["u", 5, "Var__DeclRefExpr"], ["\"NO\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["int n_ m_ i_ j;", 1, "DeclStmt"], ["m", 5, "Var__DeclRefExpr"], ["{}", 4, "InitListExpr"], ["j", 18, "Var__DeclRefExpr"], ["100", 4, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int t_ u;", 1, "DeclStmt"], ["int", 10, "Type"], ["\"%d\"", 2, "StringLiteral"], ["int ()", 1, "Type"], ["scanf", 3, "DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["a", 7, "Var__DeclRefExpr"], ["\"YES\"", 1, "StringLiteral"], ["int [100][100]", 1, "Type"], ["i", 18, "Var__DeclRefExpr"]] 
Piano 2270488_2453486_Piano.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"O won\"", 3, "StringLiteral"], ["\"X won\"", 3, "StringLiteral"], ["puts", 7, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["3", 3, "IntegerLiteral"], ["'X'", 1, "CharacterLiteral"], ["u", 5, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["int [4]", 6, "Type"], ["\"%d\"", 1, "StringLiteral"], ["2", 4, "IntegerLiteral"], ["int", 15, "Type"], ["int t_ u;", 1, "DeclStmt"], ["rowo", 3, "Var__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["j", 13, "Var__DeclRefExpr"], ["int [2]", 3, "Type"], ["fl", 3, "Var__DeclRefExpr"], ["4", 16, "IntegerLiteral"], ["colx", 3, "Var__DeclRefExpr"], ["diax", 4, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["diao", 4, "Var__DeclRefExpr"], ["i", 30, "Var__DeclRefExpr"], ["colo", 3, "Var__DeclRefExpr"], ["rowt", 4, "Var__DeclRefExpr"], ["rowx", 3, "Var__DeclRefExpr"], ["colt", 4, "Var__DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["diat", 5, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["'T'", 1, "CharacterLiteral"], ["int i_ j;", 1, "DeclStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["getchar", 3, "DeclRefExpr"], ["char", 1, "Type"], ["{}", 18, "InitListExpr"], ["break", 10, "BreakStmt"]] 
Piano 2270488_2463486_Piano.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%I64d%I64d\"", 1, "StringLiteral"], ["y", 3, "Var__DeclRefExpr"], ["m", 11, "Var__DeclRefExpr"], ["2001002", 1, "IntegerLiteral"], ["10", 4, "IntegerLiteral"], ["long long", 7, "Type"], ["long long num[39];", 1, "DeclStmt"], ["long long [39]", 1, "Type"], ["'0'", 2, "CharacterLiteral"], ["x", 3, "Var__DeclRefExpr"], ["num", 5, "Var__DeclRefExpr"], ["\"%I64d\"", 2, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["cnt", 2, "Var__DeclRefExpr"], ["39", 3, "IntegerLiteral"], ["l", 12, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["long long a_ b;", 1, "DeclStmt"], ["i", 10, "Var__DeclRefExpr"], ["int", 11, "Type"], ["main", 1, "Function"], ["r", 9, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["char [21]", 2, "Type"], ["21", 2, "IntegerLiteral"], ["sq", 3, "Var__DeclRefExpr"], ["break", 1, "BreakStmt"], ["char", 2, "Type"], ["{}", 4, "InitListExpr"], ["j", 12, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["sscanf", 2, "DeclRefExpr"], ["ss", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["u", 5, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["s", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int l_ r_ m_ x_ y;", 1, "DeclStmt"]] 
Piano 2974486_5709773144064000_Piano.c [["0", 1, "IntegerLiteral"], ["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["0.0", 1, "FloatingLiteral"], ["u", 5, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["main", 1, "Function"], ["int t_ u;", 1, "DeclStmt"], ["int", 3, "Type"], ["\"%d\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["break", 1, "BreakStmt"], ["s", 7, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["f", 4, "Var__DeclRefExpr"], ["double", 5, "Type"], ["x", 5, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["2.0", 1, "FloatingLiteral"]] 
Piano 2974486_5756407898963968_Piano.c [["printf", 3, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["cnt", 4, "Var__DeclRefExpr"], ["\"%d%d%d%d\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 3, "IntegerLiteral"], ["17", 1, "IntegerLiteral"], ["int [17]", 1, "Type"], ["{}", 2, "InitListExpr"], ["j", 4, "Var__DeclRefExpr"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["ans", 3, "Var__DeclRefExpr"], ["u", 7, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 13, "Type"], ["int ()", 1, "Type"], ["scanf", 7, "DeclRefExpr"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["int t_ u;", 1, "DeclStmt"], ["b", 6, "Var__DeclRefExpr"], ["\"%*d%*d%*d%*d\"", 2, "StringLiteral"], ["int n_ b_ c_ d_ e_ i_ j;", 1, "DeclStmt"], ["\"%d\"", 4, "StringLiteral"], ["e", 3, "Var__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["a", 6, "Var__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["d", 3, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"]] 
Piano_advex 1460488_1483485_Piano_advex.c [["\"\"", 1, "StringLiteral"], ["putchar", 1, "DeclRefExpr"], ["puts", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["gets", 1, "DeclRefExpr"], ["\"%d%*c\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 4, "Type"], ["'a'", 1, "CharacterLiteral"], ["i", 5, "Var__DeclRefExpr"], ["char [101]", 1, "Type"], ["int t_ i_ j;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["s", 2, "Var__DeclRefExpr"], ["' '", 2, "CharacterLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["g", 5, "Var__DeclRefExpr"], ["char", 2, "Type"], ["char *", 1, "Type"], ["j", 6, "Var__DeclRefExpr"], ["char g[101];", 1, "DeclStmt"], ["1", 1, "IntegerLiteral"], ["101", 1, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"]] 
Piano_advex 1460488_1483488_Piano_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["break", 1, "BreakStmt"], ["\"0\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["puts", 1, "DeclRefExpr"], [";", 1, "NullStmt"], ["10", 5, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["1", 2, "IntegerLiteral"], ["redi_Var", 4, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["\"replace-me.out\"", 1, "StringLiteral"], ["int", 10, "Type"], ["printf", 2, "DeclRefExpr"], ["kyui_Var", 3, "Var__DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int kyui_Var_ a_ duai_Var_ pqyi_Var_ j_ k_ ten_ redi_Var;", 1, "DeclStmt"], ["a", 4, "Var__DeclRefExpr"], ["pqyi_Var", 5, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["duai_Var", 4, "Var__DeclRefExpr"], ["lc", 1, "Var"], ["j", 7, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["ten", 8, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"]] 
Piano_advex 1460488_1595491_Piano_advex.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], [";", 1, "NullStmt"], ["0", 5, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["int T_ n_ s_ p_ t[100]_ i_ j_ x_ u;", 1, "DeclStmt"], ["n", 5, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"], ["int", 10, "Type"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["break", 2, "BreakStmt"], ["s", 3, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["t", 8, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["int [100]", 1, "Type"], ["i", 13, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 15, "Var__DeclRefExpr"], ["u", 5, "Var__DeclRefExpr"]] 
Piano_advex 2270488_2449486_Piano_advex.c [["break", 2, "BreakStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["mcol", 5, "Var__DeclRefExpr"], ["{}", 4, "InitListExpr"], ["mrow", 5, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 3, "Type"], ["\"YES\"", 1, "StringLiteral"], ["int [100][100]", 1, "Type"], ["ncni_Var", 18, "Var__DeclRefExpr"], ["100", 4, "IntegerLiteral"], ["oaji_Var", 7, "Var__DeclRefExpr"], ["duai_Var", 18, "Var__DeclRefExpr"], ["m", 5, "Var__DeclRefExpr"], ["puts", 1, "DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["bdni_Var", 5, "Var__DeclRefExpr"], ["int jffi_Var;", 1, "DeclStmt"], ["ret_val", 2, "Var__DeclRefExpr"], ["int", 11, "Type"], ["ldoi_Var", 5, "Var__DeclRefExpr"], ["jffi_Var", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int bdni_Var_ m_ duai_Var_ ncni_Var;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["int ldoi_Var;", 1, "DeclStmt"], ["\"NO\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"]] 
Piano_advex 2270488_2453486_Piano_advex.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"O won\"", 3, "StringLiteral"], ["\"X won\"", 3, "StringLiteral"], ["puts", 7, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["3", 3, "IntegerLiteral"], ["'X'", 1, "CharacterLiteral"], ["'.'", 1, "CharacterLiteral"], ["getchar", 3, "DeclRefExpr"], ["int duai_Var_ j;", 1, "DeclStmt"], ["scanf", 1, "DeclRefExpr"], ["u", 5, "Var__DeclRefExpr"], ["int t_ u;", 1, "DeclStmt"], ["rowo", 3, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["c", 3, "Var__DeclRefExpr"], ["char c;", 1, "DeclStmt"], ["t", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["2", 4, "IntegerLiteral"], ["int", 15, "Type"], ["int ()", 1, "Type"], ["int [4]", 6, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["j", 13, "Var__DeclRefExpr"], ["break", 10, "BreakStmt"], ["char", 1, "Type"], ["{}", 18, "InitListExpr"], ["fl", 3, "Var__DeclRefExpr"], ["int [2]", 3, "Type"], ["4", 16, "IntegerLiteral"], ["colx", 3, "Var__DeclRefExpr"], ["duai_Var", 30, "Var__DeclRefExpr"], ["diax", 4, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["diao", 4, "Var__DeclRefExpr"], ["colo", 3, "Var__DeclRefExpr"], ["rowt", 4, "Var__DeclRefExpr"], ["rowx", 3, "Var__DeclRefExpr"], ["colt", 4, "Var__DeclRefExpr"], ["diat", 5, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["'T'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"]] 
Piano_advex 2270488_2463486_Piano_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%I64d%I64d\"", 1, "StringLiteral"], ["y", 3, "Var__DeclRefExpr"], ["m", 11, "Var__DeclRefExpr"], ["2001002", 1, "IntegerLiteral"], ["10", 4, "IntegerLiteral"], ["long long", 7, "Type"], ["long long num[39];", 1, "DeclStmt"], ["long long [39]", 1, "Type"], ["'0'", 2, "CharacterLiteral"], ["x", 3, "Var__DeclRefExpr"], ["num", 5, "Var__DeclRefExpr"], ["\"%I64d\"", 2, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["cnt", 2, "Var__DeclRefExpr"], ["39", 3, "IntegerLiteral"], ["l", 12, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["long long a_ b;", 1, "DeclStmt"], ["i", 10, "Var__DeclRefExpr"], ["int", 11, "Type"], ["main", 1, "Function"], ["r", 9, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["1", 4, "IntegerLiteral"], ["char [21]", 2, "Type"], ["21", 2, "IntegerLiteral"], ["sq", 3, "Var__DeclRefExpr"], ["break", 1, "BreakStmt"], ["char", 2, "Type"], ["{}", 4, "InitListExpr"], ["j", 12, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["sscanf", 2, "DeclRefExpr"], ["ss", 3, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["u", 5, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["s", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["int l_ r_ m_ x_ y;", 1, "DeclStmt"]] 
Piano_advex 2974486_5709773144064000_Piano_advex.c [["\"Case #%d: %.7f\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["0.0", 1, "FloatingLiteral"], ["a", 4, "Var__DeclRefExpr"], ["2.0", 1, "FloatingLiteral"], ["break", 1, "BreakStmt"], ["s", 7, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["0", 1, "IntegerLiteral"], ["duad_Var", 4, "Var__DeclRefExpr"], ["int", 3, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int t_ u;", 1, "DeclStmt"], ["u", 5, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["f", 4, "Var__DeclRefExpr"], ["double", 5, "Type"], ["x", 5, "Var__DeclRefExpr"]] 
Piano_advex 2974486_5756407898963968_Piano_advex.c [["printf", 3, "DeclRefExpr"], ["cnt", 4, "Var__DeclRefExpr"], ["\"%d%d%d%d\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 3, "IntegerLiteral"], ["17", 1, "IntegerLiteral"], ["int [17]", 1, "Type"], ["{}", 2, "InitListExpr"], ["j", 4, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"], ["d", 3, "Var__DeclRefExpr"], ["a", 6, "Var__DeclRefExpr"], ["c", 3, "Var__DeclRefExpr"], ["\"%*d%*d%*d%*d\"", 2, "StringLiteral"], ["int n_ b_ c_ d_ e_ i_ j;", 1, "DeclStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["int", 14, "Type"], ["e", 3, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 4, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"Case #%d: Volunteer cheated!\\n\"", 1, "StringLiteral"], ["b", 6, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["int t_ u;", 1, "DeclStmt"], ["0", 3, "IntegerLiteral"], ["\"Case #%d: Bad magician!\\n\"", 1, "StringLiteral"], ["ans", 3, "Var__DeclRefExpr"], ["u", 7, "Var__DeclRefExpr"], ["1", 5, "IntegerLiteral"], ["scanf", 7, "DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"]] 
Saheb.preet 1460488_1483485_Saheb.preet.c [["'q'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["b", 3, "Var__DeclRefExpr"], ["\"our language is impossible to understand there are twenty six factorial possibilities so it is okay if you want to just give up\"", 1, "StringLiteral"], ["int i;", 1, "DeclStmt"], ["p", 4, "ParmVar__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["\"%c\"", 1, "StringLiteral"], ["j", 5, "Var__DeclRefExpr"], ["\"ejp mysljylc kd kxveddknmc re jsicpdrysi rbcpc ypc rtcsra dkh wyfrepkym veddknkmkrkcd de kr kd eoya kw aej tysr re ujdr lkgc jv\"", 1, "StringLiteral"], ["int i_ t_ j;", 1, "DeclStmt"], ["105", 2, "IntegerLiteral"], ["char []", 2, "Type"], ["i", 11, "Var__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["googlerese", 3, "Function__DeclRefExpr"], ["FILE *fpin_ *fpout;", 1, "DeclStmt"], ["t", 3, "Var__DeclRefExpr"], ["break", 1, "BreakStmt"], ["char", 7, "Type"], ["\"a\"", 1, "StringLiteral"], ["FILE *", 2, "Type"], ["\"output1.out\"", 1, "StringLiteral"], ["main", 1, "Function"], ["char a[105];", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["", 1, "ParmVar"], ["int ()", 1, "Type"], ["int", 5, "Type"], ["fscanf", 1, "DeclRefExpr"], ["fpin", 6, "Var__DeclRefExpr"], ["FILE", 2, "Type"], ["fopen", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"A-small-attempt2.in\"", 1, "StringLiteral"], ["fpout", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["fgets", 2, "DeclRefExpr"], ["\"error\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["fprintf", 3, "DeclRefExpr"], ["char (char)", 2, "Type"], ["1", 2, "IntegerLiteral"], ["char [105]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["strlen", 2, "DeclRefExpr"]] 
Saheb.preet 1460488_1483488_Saheb.preet.c [["int i;", 1, "DeclStmt"], ["char temp;", 1, "DeclStmt"], ["n", 3, "ParmVar__DeclRefExpr"], ["p", 6, "ParmVar__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"out3.txt\"", 1, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["strlen", 2, "DeclRefExpr"], ["\"%ld%ld\"", 1, "StringLiteral"], ["10", 2, "IntegerLiteral"], ["k", 4, "Var__DeclRefExpr"], ["i", 11, "Var__DeclRefExpr"], ["str", 5, "Var__DeclRefExpr"], ["char [10]", 1, "Type"], ["fpin", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["atoi", 1, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["", 2, "ParmVar"], ["char *(char *_ int)", 2, "Type"], ["FILE", 2, "Type"], ["ptr", 3, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 9, "Type"], ["temp", 3, "Var__DeclRefExpr"], ["check", 4, "Var__DeclRefExpr"], ["char str[10]_ *ptr;", 1, "DeclStmt"], ["char", 7, "Type"], ["\"a\"", 1, "StringLiteral"], ["FILE *", 2, "Type"], ["count", 4, "Var__DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["\"ERROR\"", 1, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["getnext", 3, "Function__DeclRefExpr"], ["long int a_ b_ j;", 1, "DeclStmt"], ["a", 3, "Var__DeclRefExpr"], ["long", 3, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["char *", 5, "Type"], ["b", 4, "Var__DeclRefExpr"], ["j", 6, "Var__DeclRefExpr"], ["itoa", 1, "DeclRefExpr"], ["FILE *fpin_ *fpout;", 1, "DeclStmt"], ["fopen", 2, "DeclRefExpr"], ["fpout", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"]] 
Saheb.preet 1460488_1595491_Saheb.preet.c [["fprintf", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["3", 7, "IntegerLiteral"], ["\"output2.out\"", 1, "StringLiteral"], ["\"ERROR\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["p", 6, "Var__DeclRefExpr"], ["s", 5, "Var__DeclRefExpr"], ["fscanf", 5, "DeclRefExpr"], ["int ()", 1, "Type"], ["\"a\"", 1, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["count", 6, "Var__DeclRefExpr"], ["int", 9, "Type"], ["i", 5, "Var__DeclRefExpr"], ["fpout", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["score", 10, "Var__DeclRefExpr"], ["0", 9, "IntegerLiteral"], ["FILE *fpin_ *fpout;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["fpin", 8, "Var__DeclRefExpr"], ["FILE", 2, "Type"]] 
Saheb.preet 2270488_2449486_Saheb.preet.c [["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["0", 10, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["columnmax", 5, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 10, "Type"], ["i", 6, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 2, "Type"], ["int t_ i_ j_ k_ ground[101][101]_ n_ m_ rowmax[100]_ columnmax[100];", 1, "DeclStmt"], ["int ()", 1, "Type"], ["m", 6, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 22, "Var__DeclRefExpr"], ["j", 22, "Var__DeclRefExpr"], ["ground", 8, "Var__DeclRefExpr"], ["int [101][101]", 1, "Type"], ["rowmax", 5, "Var__DeclRefExpr"], ["int [101]", 1, "Type"], ["1", 2, "IntegerLiteral"], ["101", 2, "IntegerLiteral"], ["n", 6, "Var__DeclRefExpr"]] 
Saheb.preet 2270488_2453486_Saheb.preet.c [["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["'O'", 8, "CharacterLiteral"], ["break", 8, "BreakStmt"], ["printf", 3, "DeclRefExpr"], ["'T'", 8, "CharacterLiteral"], ["'X'", 8, "CharacterLiteral"], ["0", 16, "IntegerLiteral"], ["curr", 1, "Var"], ["t", 3, "Var__DeclRefExpr"], ["\"Case #%d: %c won\\n\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["int i_ t_ j_ k;", 1, "DeclStmt"], ["int", 5, "Type"], ["char", 4, "Type"], ["winner", 12, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["j", 22, "Var__DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["k", 56, "Var__DeclRefExpr"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["char board[4][5]_ flag_ winner_ curr;", 1, "DeclStmt"], ["char [5]", 1, "Type"], ["board", 19, "Var__DeclRefExpr"], ["char [4][5]", 1, "Type"], ["\"%s\"", 1, "StringLiteral"], ["4", 20, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["5", 1, "IntegerLiteral"], ["flag", 4, "Var__DeclRefExpr"]] 
Saheb.preet 2270488_2463486_Saheb.preet.c [["printf", 1, "DeclRefExpr"], ["484", 2, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["count", 8, "Var__DeclRefExpr"], ["int", 6, "Type"], ["\"%d\"", 1, "StringLiteral"], ["i", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["a", 7, "Var__DeclRefExpr"], ["b", 7, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["0", 3, "IntegerLiteral"], ["9", 2, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 2, "IntegerLiteral"], ["int t_ i_ a_ b_ count;", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"]] 
Saheb.preet 2974486_5709773144064000_Saheb.preet.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: %1.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["main", 1, "Function"], ["double c_ f_ x_ r_ n;", 1, "DeclStmt"], ["r", 8, "Var__DeclRefExpr"], ["int", 3, "Type"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["i", 5, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["t", 3, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["f", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["double", 5, "Type"], ["n", 4, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"]] 
Saheb.preet 2974486_5756407898963968_Saheb.preet.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["break", 2, "BreakStmt"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["puts", 2, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["\"%d\"", 9, "StringLiteral"], ["a", 8, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["magic", 4, "Var__DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["int t_ a_ b_ magic[4]_ i_ j_ temp_ k_ l;", 1, "DeclStmt"], ["int", 10, "Type"], ["b", 1, "Var"], ["int ()", 1, "Type"], ["int [4]", 1, "Type"], ["4", 7, "IntegerLiteral"], ["i", 5, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["16", 2, "IntegerLiteral"], ["main", 1, "Function"], ["temp", 7, "Var__DeclRefExpr"], ["scanf", 9, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["l", 7, "Var__DeclRefExpr"]] 
Saheb.preet_advex 1460488_1483485_Saheb.preet_advex.c [["'z'", 2, "CharacterLiteral"], ["\"ejp mysljylc kd kxveddknmc re jsicpdrysi rbcpc ypc rtcsra dkh \"\n      \"wyfrepkym veddknkmkrkcd de kr kd eoya kw aej tysr re ujdr lkgc \"\n      \"jv\"", 1, "StringLiteral"], ["mloc_Var", 3, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["p", 4, "ParmVar__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["\"%c\"", 1, "StringLiteral"], ["fpin", 6, "Var__DeclRefExpr"], ["int t;", 1, "DeclStmt"], ["105", 2, "IntegerLiteral"], ["break", 1, "BreakStmt"], ["char", 7, "Type"], ["\"output1.out\"", 1, "StringLiteral"], ["a", 8, "Var__DeclRefExpr"], ["googlerese", 3, "Function__DeclRefExpr"], ["FILE *fpin_ *fpout;", 1, "DeclStmt"], ["t", 3, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["\"a\"", 1, "StringLiteral"], ["'q'", 2, "CharacterLiteral"], ["omgi_Var", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["char a[105];", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["", 1, "ParmVar"], ["int ()", 1, "Type"], ["int", 5, "Type"], ["fscanf", 1, "DeclRefExpr"], ["FILE", 2, "Type"], ["fopen", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["\"A-small-attempt2.in\"", 1, "StringLiteral"], ["fpout", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["fgets", 2, "DeclRefExpr"], ["\"error\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["fprintf", 3, "DeclRefExpr"], ["\"our language is impossible to understand there are twenty six \"\n             \"factorial possibilities so it is okay if you want to just give \"\n             \"up\"", 1, "StringLiteral"], ["char (char)", 2, "Type"], ["1", 2, "IntegerLiteral"], ["char [105]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["char []", 2, "Type"], ["i", 10, "Var__DeclRefExpr"], ["strlen", 2, "DeclRefExpr"]] 
Saheb.preet_advex 1460488_1483488_Saheb.preet_advex.c [["int i;", 1, "DeclStmt"], ["char temp;", 1, "DeclStmt"], ["n", 3, "ParmVar__DeclRefExpr"], ["p", 6, "ParmVar__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"out3.txt\"", 1, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["strlen", 2, "DeclRefExpr"], ["\"%ld%ld\"", 1, "StringLiteral"], ["10", 2, "IntegerLiteral"], ["k", 4, "Var__DeclRefExpr"], ["i", 11, "Var__DeclRefExpr"], ["str", 5, "Var__DeclRefExpr"], ["char [10]", 1, "Type"], ["fpin", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["atoi", 1, "DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["", 2, "ParmVar"], ["char *(char *_ int)", 2, "Type"], ["FILE", 2, "Type"], ["ptr", 3, "Var__DeclRefExpr"], ["fscanf", 2, "DeclRefExpr"], ["int", 9, "Type"], ["temp", 3, "Var__DeclRefExpr"], ["check", 4, "Var__DeclRefExpr"], ["char str[10]_ *ptr;", 1, "DeclStmt"], ["char", 7, "Type"], ["\"a\"", 1, "StringLiteral"], ["FILE *", 2, "Type"], ["count", 4, "Var__DeclRefExpr"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["\"ERROR\"", 1, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["getnext", 3, "Function__DeclRefExpr"], ["long int a_ b_ j;", 1, "DeclStmt"], ["a", 3, "Var__DeclRefExpr"], ["long", 3, "Type"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["char *", 5, "Type"], ["b", 4, "Var__DeclRefExpr"], ["j", 6, "Var__DeclRefExpr"], ["itoa", 1, "DeclRefExpr"], ["FILE *fpin_ *fpout;", 1, "DeclStmt"], ["fopen", 2, "DeclRefExpr"], ["fpout", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"]] 
Saheb.preet_advex 1460488_1595491_Saheb.preet_advex.c [["\"a\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 3, "IntegerLiteral"], ["3", 7, "IntegerLiteral"], ["\"output2.out\"", 1, "StringLiteral"], ["\"ERROR\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["fopen", 2, "DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["p", 6, "Var__DeclRefExpr"], ["s", 6, "Var__DeclRefExpr"], ["fscanf", 5, "DeclRefExpr"], ["int ()", 1, "Type"], ["jffi_Var", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["count", 7, "Var__DeclRefExpr"], ["int", 9, "Type"], ["i", 5, "Var__DeclRefExpr"], ["fpout", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["FILE *", 2, "Type"], ["score", 10, "Var__DeclRefExpr"], ["0", 9, "IntegerLiteral"], ["FILE *fpin_ *fpout;", 1, "DeclStmt"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["fpin", 8, "Var__DeclRefExpr"], ["FILE", 2, "Type"]] 
Saheb.preet_advex 2270488_2449486_Saheb.preet_advex.c [["\"Case #%d: YES\\n\"", 1, "StringLiteral"], ["\"Case #%d: NO\\n\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 2, "BreakStmt"], ["0", 10, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["columnmax", 5, "Var__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 10, "Type"], ["i", 6, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int [100]", 2, "Type"], ["int t_ i_ j_ k_ ground[101][101]_ n_ m_ rowmax[100]_ columnmax[100];", 1, "DeclStmt"], ["int ()", 1, "Type"], ["m", 6, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 22, "Var__DeclRefExpr"], ["j", 22, "Var__DeclRefExpr"], ["ground", 8, "Var__DeclRefExpr"], ["int [101][101]", 1, "Type"], ["rowmax", 5, "Var__DeclRefExpr"], ["int [101]", 1, "Type"], ["1", 2, "IntegerLiteral"], ["101", 2, "IntegerLiteral"], ["n", 6, "Var__DeclRefExpr"]] 
Saheb.preet_advex 2270488_2453486_Saheb.preet_advex.c [["\"Case #%d: Game has not completed\\n\"", 1, "StringLiteral"], ["1", 5, "IntegerLiteral"], ["'O'", 8, "CharacterLiteral"], ["break", 8, "BreakStmt"], ["printf", 3, "DeclRefExpr"], ["'T'", 8, "CharacterLiteral"], ["'X'", 8, "CharacterLiteral"], ["0", 16, "IntegerLiteral"], ["curr", 1, "Var"], ["t", 3, "Var__DeclRefExpr"], ["\"Case #%d: %c won\\n\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["int i_ t_ j_ k;", 1, "DeclStmt"], ["int", 5, "Type"], ["char", 4, "Type"], ["winner", 12, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["j", 22, "Var__DeclRefExpr"], ["3", 4, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["k", 56, "Var__DeclRefExpr"], ["\"Case #%d: Draw\\n\"", 1, "StringLiteral"], ["main", 1, "Function"], ["char board[4][5]_ flag_ winner_ curr;", 1, "DeclStmt"], ["char [5]", 1, "Type"], ["board", 19, "Var__DeclRefExpr"], ["char [4][5]", 1, "Type"], ["\"%s\"", 1, "StringLiteral"], ["4", 20, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["5", 1, "IntegerLiteral"], ["flag", 4, "Var__DeclRefExpr"]] 
Saheb.preet_advex 2270488_2463486_Saheb.preet_advex.c [["printf", 1, "DeclRefExpr"], ["484", 2, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["0", 3, "IntegerLiteral"], ["int", 7, "Type"], ["\"%d\"", 1, "StringLiteral"], ["i", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["t", 3, "Var__DeclRefExpr"], ["count", 8, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["a", 7, "Var__DeclRefExpr"], ["ret_val", 2, "Var__DeclRefExpr"], ["b", 7, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["9", 2, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 2, "IntegerLiteral"], ["int t_ i_ a_ b_ count;", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"]] 
Saheb.preet_advex 2974486_5709773144064000_Saheb.preet_advex.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: %1.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["main", 1, "Function"], ["double c_ f_ x_ r_ n;", 1, "DeclStmt"], ["r", 8, "Var__DeclRefExpr"], ["int", 3, "Type"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["i", 5, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["t", 3, "Var__DeclRefExpr"], ["int t_ i;", 1, "DeclStmt"], ["f", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["double", 5, "Type"], ["n", 4, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"]] 
Saheb.preet_advex 2974486_5756407898963968_Saheb.preet_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["break", 2, "BreakStmt"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["puts", 2, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["\"%d\"", 9, "StringLiteral"], ["a", 8, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["magic", 4, "Var__DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["int t_ a_ b_ magic[4]_ i_ j_ temp_ k_ l;", 1, "DeclStmt"], ["int", 10, "Type"], ["b", 1, "Var"], ["int ()", 1, "Type"], ["int [4]", 1, "Type"], ["4", 7, "IntegerLiteral"], ["i", 5, "Var__DeclRefExpr"], ["j", 16, "Var__DeclRefExpr"], ["16", 2, "IntegerLiteral"], ["main", 1, "Function"], ["temp", 7, "Var__DeclRefExpr"], ["scanf", 9, "DeclRefExpr"], ["k", 6, "Var__DeclRefExpr"], ["l", 7, "Var__DeclRefExpr"]] 
s.max 1460488_1483485_s.max.c [["\"Case #%d: %s\"", 1, "StringLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["0", 2, "IntegerLiteral"], ["'a'", 1, "CharacterLiteral"], ["i", 8, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["sscanf", 1, "DeclRefExpr"], ["char [50]", 1, "Type"], ["' '", 1, "CharacterLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["int T_ tt;", 1, "DeclStmt"], ["trans", 2, "Var__DeclRefExpr"], ["niz", 10, "Var__DeclRefExpr"], ["char", 2, "Type"], ["int", 4, "Type"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["50", 1, "IntegerLiteral"], ["char niz[1000];", 1, "DeclStmt"], ["1000", 3, "IntegerLiteral"], ["T", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["char [1000]", 1, "Type"], ["tt", 5, "Var__DeclRefExpr"], ["fgets", 2, "DeclRefExpr"]] 
s.max 1460488_1483488_s.max.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["broj", 3, "Var__DeclRefExpr"], ["naj", 4, "Var__DeclRefExpr"], ["ukupno", 3, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["a", 5, "Var__DeclRefExpr"], ["int red[10];", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["int i;", 1, "DeclStmt"], ["znam", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["aa", 13, "Var__DeclRefExpr"], ["tt", 5, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int T_ tt;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["1", 3, "IntegerLiteral"], ["daj", 1, "Function"], ["10000000", 1, "IntegerLiteral"], ["int [10000000]", 1, "Type"], ["int (int)", 1, "Type"], ["int", 19, "Type"], ["oznaka", 4, "Var__DeclRefExpr"], ["n", 4, "ParmVar__DeclRefExpr"], ["red", 3, "Var__DeclRefExpr"], ["x", 9, "Var__DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["int [10]", 2, "Type"], ["10", 10, "IntegerLiteral"], ["0", 11, "IntegerLiteral"], ["rez", 5, "Var__DeclRefExpr"], ["int rez_ i;", 1, "DeclStmt"], ["i", 14, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"]] 
s.max 1460488_1595491_s.max.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["t", 6, "Var__DeclRefExpr"], ["q", 5, "Var__DeclRefExpr"], ["tt", 5, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["int T_ tt;", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"], ["u", 4, "Var__DeclRefExpr"], ["int", 10, "Type"], ["int q_ t;", 1, "DeclStmt"], ["ukupno", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["28", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"]] 
s.max 2270488_2449486_s.max.c [["break", 2, "BreakStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["max", 9, "Var__DeclRefExpr"], ["int max;", 1, "DeclStmt"], ["0", 14, "IntegerLiteral"], ["int [100]", 2, "Type"], ["\"YES\"", 1, "StringLiteral"], ["int [100][100]", 2, "Type"], ["100", 4, "IntegerLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int T_ t;", 1, "DeclStmt"], ["int", 10, "Type"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["int ()", 1, "Type"], ["\"NO\"", 1, "StringLiteral"], ["1", 3, "IntegerLiteral"], ["m", 8, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["uvjet", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 27, "Var__DeclRefExpr"], ["n", 8, "Var__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["i", 27, "Var__DeclRefExpr"], ["int n_ m_ i_ j;", 1, "DeclStmt"], ["int a[100][100];", 1, "DeclStmt"]] 
s.max 2270488_2453486_s.max.c [["\"\\n\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["4", 14, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["i", 37, "Var__DeclRefExpr"], ["second", 5, "ParmVar__DeclRefExpr"], ["j", 18, "Var__DeclRefExpr"], ["int (char (*)[5]_ char_ char)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["first", 5, "ParmVar__DeclRefExpr"], ["0", 12, "IntegerLiteral"], ["won", 3, "Function__DeclRefExpr"], ["break", 4, "BreakStmt"], ["char", 5, "Type"], ["int", 10, "Type"], ["char [5]", 3, "Type"], ["'O'", 1, "CharacterLiteral"], ["char [4][5]", 1, "Type"], ["char [][5]", 2, "Type"], ["1", 6, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["5", 3, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["complete", 2, "Function__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int (char (*)[5])", 1, "Type"], ["\"X won\"", 1, "StringLiteral"], ["char niz[4][5];", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["niz", 16, "ParmVar__DeclRefExpr"], ["printf", 6, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["int T_ t;", 1, "DeclStmt"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["int i_ j;", 2, "DeclStmt"], ["'T'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'X'", 1, "CharacterLiteral"]] 
s.max 2270488_2463486_s.max.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["sqrt", 2, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["ukupno", 3, "Var__DeclRefExpr"], ["long long i;", 1, "DeclStmt"], ["int t_ T;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["palindrome", 3, "Function__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["1", 7, "IntegerLiteral"], ["int", 9, "Type"], ["broj", 5, "Var__DeclRefExpr"], ["b", 5, "Var__DeclRefExpr"], ["int [10000001]", 1, "Type"], ["int (long long)", 1, "Type"], ["T", 3, "Var__DeclRefExpr"], ["1000", 1, "IntegerLiteral"], ["10000000", 2, "IntegerLiteral"], ["long long", 4, "Type"], ["a", 9, "ParmVar__DeclRefExpr"], ["int polje[1000];", 1, "DeclStmt"], ["polje", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["int [1000]", 1, "Type"], ["i", 14, "Var__DeclRefExpr"]] 
s.max 2974486_5709773144064000_s.max.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["int k;", 1, "DeclStmt"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int T_ t;", 1, "DeclStmt"], ["int", 4, "Type"], ["2", 3, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["f", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 1, "IntegerLiteral"], ["double", 4, "Type"], ["0", 5, "IntegerLiteral"], ["rez", 4, "Var__DeclRefExpr"], ["double f_ c_ x;", 1, "DeclStmt"], ["c", 4, "Var__DeclRefExpr"], ["x", 4, "Var__DeclRefExpr"]] 
s.max 2974486_5756407898963968_s.max.c [["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["17", 1, "IntegerLiteral"], ["int [17]", 1, "Type"], ["1", 4, "IntegerLiteral"], ["t", 5, "Var__DeclRefExpr"], ["int t_ T;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int", 12, "Type"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["moze", 6, "ParmVar__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 4, "StringLiteral"], ["int *", 1, "Type"], ["citaj", 3, "Function__DeclRefExpr"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["r", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["void (int *)", 1, "Type"], ["int i_ j;", 1, "DeclStmt"], ["i", 11, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["\"Bad magician!\"", 1, "StringLiteral"], ["int q_ r;", 1, "DeclStmt"], ["q", 7, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["k", 5, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["4", 2, "IntegerLiteral"]] 
s.max_advex 1460488_1483485_s.max_advex.c [["\"Case #%d: %s\"", 1, "StringLiteral"], ["'\\n'", 1, "CharacterLiteral"], ["0", 2, "IntegerLiteral"], ["'a'", 1, "CharacterLiteral"], ["i", 8, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["1", 1, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["sscanf", 1, "DeclRefExpr"], ["char [50]", 1, "Type"], ["' '", 1, "CharacterLiteral"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["int T_ tt;", 1, "DeclStmt"], ["trans", 2, "Var__DeclRefExpr"], ["niz", 10, "Var__DeclRefExpr"], ["char", 2, "Type"], ["int", 4, "Type"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["50", 1, "IntegerLiteral"], ["char niz[1000];", 1, "DeclStmt"], ["1000", 3, "IntegerLiteral"], ["T", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["char [1000]", 1, "Type"], ["tt", 5, "Var__DeclRefExpr"], ["fgets", 2, "DeclRefExpr"]] 
s.max_advex 1460488_1483488_s.max_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["broj", 3, "Var__DeclRefExpr"], ["naj", 4, "Var__DeclRefExpr"], ["ukupno", 3, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["a", 5, "Var__DeclRefExpr"], ["int red[10];", 1, "DeclStmt"], ["\"%d\"", 1, "StringLiteral"], ["int i;", 1, "DeclStmt"], ["znam", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["aa", 13, "Var__DeclRefExpr"], ["tt", 5, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["int T_ tt;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["1", 3, "IntegerLiteral"], ["daj", 1, "Function"], ["10000000", 1, "IntegerLiteral"], ["int [10000000]", 1, "Type"], ["int (int)", 1, "Type"], ["int", 19, "Type"], ["oznaka", 4, "Var__DeclRefExpr"], ["n", 4, "ParmVar__DeclRefExpr"], ["red", 3, "Var__DeclRefExpr"], ["x", 9, "Var__DeclRefExpr"], ["9", 1, "IntegerLiteral"], ["int [10]", 2, "Type"], ["10", 10, "IntegerLiteral"], ["0", 11, "IntegerLiteral"], ["rez", 5, "Var__DeclRefExpr"], ["int rez_ i;", 1, "DeclStmt"], ["i", 14, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"]] 
s.max_advex 1460488_1595491_s.max_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["t", 6, "Var__DeclRefExpr"], ["q", 5, "Var__DeclRefExpr"], ["tt", 5, "Var__DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["int T_ tt;", 1, "DeclStmt"], ["1", 3, "IntegerLiteral"], ["u", 4, "Var__DeclRefExpr"], ["int", 10, "Type"], ["int q_ t;", 1, "DeclStmt"], ["ukupno", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["continue", 1, "ContinueStmt"], ["main", 1, "Function"], ["28", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["n", 3, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["0", 3, "IntegerLiteral"]] 
s.max_advex 2270488_2449486_s.max_advex.c [["break", 2, "BreakStmt"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 4, "DeclRefExpr"], ["max", 9, "Var__DeclRefExpr"], ["int max;", 1, "DeclStmt"], ["0", 14, "IntegerLiteral"], ["int [100]", 2, "Type"], ["\"YES\"", 1, "StringLiteral"], ["int [100][100]", 2, "Type"], ["100", 4, "IntegerLiteral"], ["t", 5, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int T_ t;", 1, "DeclStmt"], ["int", 10, "Type"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["int ()", 1, "Type"], ["\"NO\"", 1, "StringLiteral"], ["1", 3, "IntegerLiteral"], ["m", 8, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["uvjet", 4, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 27, "Var__DeclRefExpr"], ["n", 8, "Var__DeclRefExpr"], ["a", 8, "Var__DeclRefExpr"], ["i", 27, "Var__DeclRefExpr"], ["int n_ m_ i_ j;", 1, "DeclStmt"], ["int a[100][100];", 1, "DeclStmt"]] 
s.max_advex 2270488_2453486_s.max_advex.c [["\"Game has not completed\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["'X'", 1, "CharacterLiteral"], ["'T'", 2, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["4", 14, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["duai_Var", 37, "Var__DeclRefExpr"], ["char [][5]", 2, "Type"], ["second", 5, "ParmVar__DeclRefExpr"], ["j", 18, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["int (char (*)[5]_ char_ char)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["first", 5, "ParmVar__DeclRefExpr"], ["0", 12, "IntegerLiteral"], ["\"\\n\"", 1, "StringLiteral"], ["int duai_Var_ j;", 2, "DeclStmt"], ["won", 3, "Function__DeclRefExpr"], ["break", 4, "BreakStmt"], ["char", 5, "Type"], ["int", 10, "Type"], ["char [5]", 3, "Type"], ["'O'", 1, "CharacterLiteral"], ["char [4][5]", 1, "Type"], ["1", 6, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["5", 3, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["complete", 2, "Function__DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["int (char (*)[5])", 1, "Type"], ["\"X won\"", 1, "StringLiteral"], ["char niz[4][5];", 1, "DeclStmt"], ["T", 3, "Var__DeclRefExpr"], ["niz", 16, "ParmVar__DeclRefExpr"], ["printf", 6, "DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["int T_ t;", 1, "DeclStmt"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int duai_Var;", 1, "DeclStmt"]] 
s.max_advex 2270488_2463486_s.max_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["sqrt", 2, "DeclRefExpr"], ["\"%lld %lld\"", 1, "StringLiteral"], ["t", 5, "Var__DeclRefExpr"], ["ukupno", 3, "Var__DeclRefExpr"], ["long long i;", 1, "DeclStmt"], ["int t_ T;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["10", 2, "IntegerLiteral"], ["palindrome", 3, "Function__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["1", 7, "IntegerLiteral"], ["int", 9, "Type"], ["broj", 5, "Var__DeclRefExpr"], ["b", 5, "Var__DeclRefExpr"], ["int [10000001]", 1, "Type"], ["int (long long)", 1, "Type"], ["T", 3, "Var__DeclRefExpr"], ["1000", 1, "IntegerLiteral"], ["10000000", 2, "IntegerLiteral"], ["long long", 4, "Type"], ["a", 9, "ParmVar__DeclRefExpr"], ["int polje[1000];", 1, "DeclStmt"], ["polje", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 4, "Var__DeclRefExpr"], ["int [1000]", 1, "Type"], ["i", 14, "Var__DeclRefExpr"]] 
s.max_advex 2974486_5709773144064000_s.max_advex.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["int k;", 1, "DeclStmt"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["x", 4, "Var__DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["int T_ t;", 1, "DeclStmt"], ["int", 5, "Type"], ["2", 3, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["T", 3, "Var__DeclRefExpr"], ["k", 8, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["t", 5, "Var__DeclRefExpr"], ["f", 5, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["double", 4, "Type"], ["rez", 4, "Var__DeclRefExpr"], ["double f_ c_ x;", 1, "DeclStmt"], ["c", 4, "Var__DeclRefExpr"]] 
s.max_advex 2974486_5756407898963968_s.max_advex.c [["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 5, "DeclRefExpr"], ["17", 1, "IntegerLiteral"], ["int [17]", 1, "Type"], ["1", 4, "IntegerLiteral"], ["t", 5, "Var__DeclRefExpr"], ["int t_ T;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int", 12, "Type"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["moze", 6, "ParmVar__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 4, "StringLiteral"], ["int *", 1, "Type"], ["citaj", 3, "Function__DeclRefExpr"], ["16", 1, "IntegerLiteral"], ["main", 1, "Function"], ["r", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["void (int *)", 1, "Type"], ["int i_ j;", 1, "DeclStmt"], ["i", 11, "Var__DeclRefExpr"], ["\"\\n\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["\"Bad magician!\"", 1, "StringLiteral"], ["int q_ r;", 1, "DeclStmt"], ["q", 7, "Var__DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["k", 5, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["4", 2, "IntegerLiteral"]] 
stonekyx 1460488_1483485_stonekyx.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["' '", 1, "CharacterLiteral"], ["fgets", 1, "DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["len", 5, "Var__DeclRefExpr"], ["200", 2, "IntegerLiteral"], ["buf", 8, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["'h'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["const char [26]", 1, "Type"], ["'x'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["char [200]", 1, "Type"], ["'u'", 2, "CharacterLiteral"], ["strlen", 1, "DeclRefExpr"], ["'b'", 2, "CharacterLiteral"], ["'c'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["mapping", 2, "Var__DeclRefExpr"], ["26", 1, "IntegerLiteral"], ["char", 2, "Type"], ["'y'", 2, "CharacterLiteral"], ["continue", 1, "ContinueStmt"], ["'l'", 2, "CharacterLiteral"], ["'p'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["scanf", 1, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'a'", 3, "CharacterLiteral"], ["main", 1, "Function"], ["static char buf[200];", 1, "DeclStmt"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["int", 5, "Type"], ["0", 6, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["cnt", 3, "Var__DeclRefExpr"]] 
stonekyx 1460488_1483488_stonekyx.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["A", 4, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["x", 11, "ParmVar__DeclRefExpr"], ["10000000", 2, "IntegerLiteral"], ["100000", 2, "IntegerLiteral"], ["1000", 2, "IntegerLiteral"], ["j", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["100000000", 2, "IntegerLiteral"], ["T", 4, "Var__DeclRefExpr"], ["10", 6, "IntegerLiteral"], ["1000000000", 2, "IntegerLiteral"], ["powers", 2, "Var__DeclRefExpr"], ["cnt", 3, "Var__DeclRefExpr"], ["int", 19, "Type"], ["next", 3, "Function__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["B", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 5, "IntegerLiteral"], ["1000000", 2, "IntegerLiteral"], ["a", 3, "ParmVar__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["length", 2, "ParmVar__DeclRefExpr"], ["count", 2, "Function__DeclRefExpr"], ["10000", 2, "IntegerLiteral"], ["int (int_ int_ int)", 1, "Type"], ["b", 3, "ParmVar__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["const int [10]", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["i", 17, "Var__DeclRefExpr"], ["lastbit", 3, "Var__DeclRefExpr"], ["ans", 6, "Var__DeclRefExpr"], [";", 1, "NullStmt"], ["main", 1, "Function"], ["int A_ B;", 1, "DeclStmt"]] 
stonekyx 1460488_1595491_stonekyx.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"This should not happen!\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["break", 7, "BreakStmt"], ["cur", 8, "Var__DeclRefExpr"], ["\"%d%d%d\"", 1, "StringLiteral"], ["200", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["int [200]", 1, "Type"], ["tot", 3, "Var__DeclRefExpr"], ["cnt", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["ans", 7, "Var__DeclRefExpr"], ["P", 7, "Var__DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["3", 7, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["int N_ S_ P;", 1, "DeclStmt"], ["main", 1, "Function"], ["exit", 1, "DeclRefExpr"], ["static int tot[200];", 1, "DeclStmt"], ["int ()", 1, "Type"], ["int T;", 1, "DeclStmt"], ["0", 6, "IntegerLiteral"], ["N", 4, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"], ["rest", 6, "Var__DeclRefExpr"], ["S", 3, "Var__DeclRefExpr"], ["int rest;", 1, "DeclStmt"]] 
stonekyx 2270488_2449486_stonekyx.c [["\"NO\"", 1, "StringLiteral"], ["\"YES\"", 1, "StringLiteral"], ["puts", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["break", 3, "BreakStmt"], ["memset", 1, "DeclRefExpr"], ["sizeof(struct rec_t)", 1, "UnaryExprOrTypeTraitExpr"], ["qsort", 1, "DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["j", 30, "Var__DeclRefExpr"], ["int j;", 1, "DeclStmt"], ["struct rec_t", 12, "Type"], ["int", 16, "Type"], ["N", 6, "Var__DeclRefExpr"], ["x", 1, "Field"], ["real", 8, "Var__DeclRefExpr"], ["struct rec_t *", 4, "Type"], ["M", 6, "Var__DeclRefExpr"], ["rec", 16, "Var__DeclRefExpr"], ["struct rec_t [11000]", 1, "Type"], ["y", 1, "Field"], ["110", 6, "IntegerLiteral"], ["a", 2, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["rcnt", 8, "Var__DeclRefExpr"], ["compare_record", 2, "Function__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["b", 2, "ParmVar__DeclRefExpr"], ["na", 3, "Var__DeclRefExpr"], ["map", 5, "Var__DeclRefExpr"], ["nb", 3, "Var__DeclRefExpr"], ["locked", 6, "Var__DeclRefExpr"], ["int (const void *_ const void *)", 1, "Type"], ["main", 1, "Function"], ["hei", 7, "Var__DeclRefExpr"], ["11000", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["printf", 1, "DeclRefExpr"], ["int [110][110]", 3, "Type"], ["T", 4, "Var__DeclRefExpr"], ["Tcnt", 2, "Var__DeclRefExpr"], ["rec_t", 1, "Record"], ["int [110]", 3, "Type"], ["0", 11, "IntegerLiteral"], ["const void *", 2, "Type"], ["scanf", 3, "DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["\"%d\"", 2, "StringLiteral"], ["i", 23, "Var__DeclRefExpr"]] 
stonekyx 2270488_2453486_stonekyx.c [["\"Game has not completed\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["puts", 4, "DeclRefExpr"], ["j", 18, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["4", 11, "IntegerLiteral"], ["Tcnt", 2, "Var__DeclRefExpr"], ["0", 14, "IntegerLiteral"], ["int i;", 3, "DeclStmt"], ["ch", 5, "ParmVar__DeclRefExpr"], ["i", 34, "Var__DeclRefExpr"], ["char [10][10]", 1, "Type"], ["check_win", 3, "Function__DeclRefExpr"], ["fgets", 1, "DeclRefExpr"], ["char [10]", 1, "Type"], ["\"%d\\n\"", 1, "StringLiteral"], ["int", 13, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["1", 7, "IntegerLiteral"], ["char", 1, "Type"], ["break", 9, "BreakStmt"], ["int (void)", 2, "Type"], ["int (int)", 1, "Type"], ["check_full", 2, "Function__DeclRefExpr"], ["'.'", 1, "CharacterLiteral"], ["3", 4, "IntegerLiteral"], ["int res;", 1, "DeclStmt"], ["int j;", 2, "DeclStmt"], ["10", 3, "IntegerLiteral"], ["get_res", 2, "Function__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["map", 11, "Var__DeclRefExpr"], ["res", 3, "Var__DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["2", 2, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["5", 1, "IntegerLiteral"], ["main", 1, "Function"], ["int ()", 1, "Type"]] 
stonekyx 2270488_2463486_stonekyx.c [["b", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["Tcnt", 2, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["sizeof(int)", 3, "UnaryExprOrTypeTraitExpr"], ["long long a_ b;", 1, "DeclStmt"], ["i", 14, "Var__DeclRefExpr"], ["a", 5, "ParmVar__DeclRefExpr"], ["bis", 3, "Function__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["long long", 5, "Type"], ["long long [100]", 1, "Type"], ["squ", 4, "Var__DeclRefExpr"], ["2000002", 2, "IntegerLiteral"], ["1111111", 2, "IntegerLiteral"], ["1102011", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["1101011", 2, "IntegerLiteral"], ["2002", 2, "IntegerLiteral"], ["20102", 2, "IntegerLiteral"], ["1001", 2, "IntegerLiteral"], ["1000001", 2, "IntegerLiteral"], ["101", 2, "IntegerLiteral"], ["int ()", 1, "Type"], ["22", 2, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["10201", 2, "IntegerLiteral"], ["11", 2, "IntegerLiteral"], ["numbers", 6, "Var__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["11211", 2, "IntegerLiteral"], ["1001001", 2, "IntegerLiteral"], ["1100011", 2, "IntegerLiteral"], ["212", 2, "IntegerLiteral"], ["1110111", 2, "IntegerLiteral"], ["1002001", 2, "IntegerLiteral"], ["1010101", 2, "IntegerLiteral"], ["1111", 2, "IntegerLiteral"], ["10001", 2, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int (long long)", 1, "Type"], ["10101", 2, "IntegerLiteral"], ["111", 2, "IntegerLiteral"], ["int", 10, "Type"], ["1012101", 2, "IntegerLiteral"], ["const int []", 1, "Type"], ["11011", 2, "IntegerLiteral"], ["20002", 2, "IntegerLiteral"], ["100001", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["101101", 2, "IntegerLiteral"], ["2001002", 2, "IntegerLiteral"], ["11111", 2, "IntegerLiteral"], ["110011", 2, "IntegerLiteral"], ["\"%lld%lld\"", 1, "StringLiteral"], ["0", 4, "IntegerLiteral"], ["202", 2, "IntegerLiteral"], ["111111", 2, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["200002", 2, "IntegerLiteral"], ["1011101", 2, "IntegerLiteral"]] 
stonekyx 2974486_5709773144064000_stonekyx.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["C", 9, "ParmVar__DeclRefExpr"], ["double (int_ double_ double_ double)", 1, "Type"], ["F", 10, "ParmVar__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["double C_ F_ X;", 1, "DeclStmt"], ["get_k", 2, "Function__DeclRefExpr"], ["int", 7, "Type"], ["double", 11, "Type"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["int (double_ double_ double)", 1, "Type"], ["Tcnt", 2, "Var__DeclRefExpr"], ["get_ans", 2, "Function__DeclRefExpr"], ["X", 8, "ParmVar__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 7, "ParmVar__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["ans", 3, "Var__DeclRefExpr"], ["2.0", 2, "FloatingLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"]] 
stonekyx 2974486_5756407898963968_stonekyx.c [["\"%d\\n\"", 1, "StringLiteral"], ["4", 9, "IntegerLiteral"], ["int [4]", 2, "Type"], ["1", 8, "IntegerLiteral"], ["map1", 3, "Var__DeclRefExpr"], ["Tcnt", 2, "Var__DeclRefExpr"], ["int [4][4]", 2, "Type"], ["row2", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["row1", 3, "Var__DeclRefExpr"], ["i", 19, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["int row1_ row2;", 1, "DeclStmt"], ["int i;", 1, "DeclStmt"], ["j", 10, "Var__DeclRefExpr"], ["\"%d\"", 5, "StringLiteral"], ["2", 3, "IntegerLiteral"], ["int", 12, "Type"], ["puts", 2, "DeclRefExpr"], ["map2", 3, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["static int count[16];", 1, "DeclStmt"], ["count", 6, "Var__DeclRefExpr"], ["static int map1[4][4]_ map2[4][4];", 1, "DeclStmt"], ["0", 9, "IntegerLiteral"], ["int [16]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["16", 2, "IntegerLiteral"], ["int ans;", 1, "DeclStmt"], ["ans", 8, "Var__DeclRefExpr"], ["int j;", 2, "DeclStmt"], ["break", 1, "BreakStmt"], ["T", 4, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"]] 
stonekyx_advex 1460488_1483485_stonekyx_advex.c [["1", 1, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["' '", 1, "CharacterLiteral"], ["fgets", 1, "DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["len", 5, "Var__DeclRefExpr"], ["200", 2, "IntegerLiteral"], ["buf", 8, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["0", 6, "IntegerLiteral"], ["'h'", 2, "CharacterLiteral"], ["'v'", 2, "CharacterLiteral"], ["const char [26]", 1, "Type"], ["'x'", 2, "CharacterLiteral"], ["'o'", 2, "CharacterLiteral"], ["char [200]", 1, "Type"], ["'u'", 2, "CharacterLiteral"], ["strlen", 1, "DeclRefExpr"], ["'b'", 2, "CharacterLiteral"], ["'w'", 2, "CharacterLiteral"], ["'s'", 2, "CharacterLiteral"], ["'e'", 2, "CharacterLiteral"], ["mapping", 2, "Var__DeclRefExpr"], ["26", 1, "IntegerLiteral"], ["char", 2, "Type"], ["continue", 1, "ContinueStmt"], ["'l'", 2, "CharacterLiteral"], ["'p'", 2, "CharacterLiteral"], ["'k'", 2, "CharacterLiteral"], ["'r'", 2, "CharacterLiteral"], ["'i'", 2, "CharacterLiteral"], ["'z'", 2, "CharacterLiteral"], ["'t'", 2, "CharacterLiteral"], ["'q'", 2, "CharacterLiteral"], ["'n'", 2, "CharacterLiteral"], ["scanf", 1, "DeclRefExpr"], ["'g'", 2, "CharacterLiteral"], ["'j'", 2, "CharacterLiteral"], ["'m'", 2, "CharacterLiteral"], ["'f'", 2, "CharacterLiteral"], ["'a'", 3, "CharacterLiteral"], ["main", 1, "Function"], ["static char buf[200];", 1, "DeclStmt"], ["'d'", 2, "CharacterLiteral"], ["int ()", 1, "Type"], ["int", 5, "Type"], ["'y'", 2, "CharacterLiteral"], ["int dtgi_Var;", 1, "DeclStmt"], ["'c'", 2, "CharacterLiteral"], ["dtgi_Var", 4, "Var__DeclRefExpr"], ["cnt", 3, "Var__DeclRefExpr"]] 
stonekyx_advex 1460488_1483488_stonekyx_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["A", 4, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["x", 11, "ParmVar__DeclRefExpr"], ["10000000", 2, "IntegerLiteral"], ["100000", 2, "IntegerLiteral"], ["1000", 2, "IntegerLiteral"], ["j", 5, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["100000000", 2, "IntegerLiteral"], ["T", 4, "Var__DeclRefExpr"], ["10", 6, "IntegerLiteral"], ["1000000000", 2, "IntegerLiteral"], ["powers", 2, "Var__DeclRefExpr"], ["cnt", 3, "Var__DeclRefExpr"], ["int", 19, "Type"], ["next", 3, "Function__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["B", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 5, "IntegerLiteral"], ["1000000", 2, "IntegerLiteral"], ["a", 3, "ParmVar__DeclRefExpr"], ["100", 2, "IntegerLiteral"], ["0", 8, "IntegerLiteral"], ["int T;", 1, "DeclStmt"], ["length", 2, "ParmVar__DeclRefExpr"], ["count", 2, "Function__DeclRefExpr"], ["10000", 2, "IntegerLiteral"], ["int (int_ int_ int)", 1, "Type"], ["b", 3, "ParmVar__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["const int [10]", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["i", 17, "Var__DeclRefExpr"], ["lastbit", 3, "Var__DeclRefExpr"], ["ans", 6, "Var__DeclRefExpr"], [";", 1, "NullStmt"], ["main", 1, "Function"], ["int A_ B;", 1, "DeclStmt"]] 
stonekyx_advex 1460488_1595491_stonekyx_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"This should not happen!\\n\"", 1, "StringLiteral"], ["fprintf", 1, "DeclRefExpr"], ["1", 7, "IntegerLiteral"], ["break", 7, "BreakStmt"], ["cur", 8, "Var__DeclRefExpr"], ["200", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["int [200]", 1, "Type"], ["tot", 3, "Var__DeclRefExpr"], ["exit", 1, "DeclRefExpr"], ["static int tot[200];", 1, "DeclStmt"], ["int T;", 1, "DeclStmt"], ["0", 6, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["ret_val", 2, "Var__DeclRefExpr"], ["int", 12, "Type"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["ans", 7, "Var__DeclRefExpr"], ["P", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["T", 4, "Var__DeclRefExpr"], ["3", 7, "IntegerLiteral"], ["int i;", 1, "DeclStmt"], ["scanf", 3, "DeclRefExpr"], ["int N_ S_ P;", 1, "DeclStmt"], ["cnt", 3, "Var__DeclRefExpr"], ["N", 4, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"], ["rest", 6, "Var__DeclRefExpr"], ["S", 3, "Var__DeclRefExpr"], ["int rest;", 1, "DeclStmt"]] 
stonekyx_advex 2270488_2449486_stonekyx_advex.c [["\"NO\"", 1, "StringLiteral"], ["\"YES\"", 1, "StringLiteral"], ["puts", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["break", 3, "BreakStmt"], ["memset", 1, "DeclRefExpr"], ["sizeof(struct rec_t)", 1, "UnaryExprOrTypeTraitExpr"], ["qsort", 1, "DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["j", 30, "Var__DeclRefExpr"], ["int j;", 1, "DeclStmt"], ["\"%d%d\"", 1, "StringLiteral"], ["i", 23, "Var__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["struct rec_t", 12, "Type"], ["int", 16, "Type"], ["N", 6, "Var__DeclRefExpr"], ["x", 1, "Field"], ["real", 8, "Var__DeclRefExpr"], ["struct rec_t *", 4, "Type"], ["struct rec_t [11000]", 1, "Type"], ["y", 1, "Field"], ["110", 6, "IntegerLiteral"], ["a", 2, "ParmVar__DeclRefExpr"], ["void", 2, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["rcnt", 8, "Var__DeclRefExpr"], ["compare_record", 2, "Function__DeclRefExpr"], ["b", 2, "ParmVar__DeclRefExpr"], ["na", 3, "Var__DeclRefExpr"], ["map", 5, "Var__DeclRefExpr"], ["nb", 3, "Var__DeclRefExpr"], ["locked", 6, "Var__DeclRefExpr"], ["int (const void *_ const void *)", 1, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["hei", 7, "Var__DeclRefExpr"], ["11000", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["M", 6, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["int [110][110]", 3, "Type"], ["T", 4, "Var__DeclRefExpr"], ["rec", 16, "Var__DeclRefExpr"], ["duai_Var", 2, "Var__DeclRefExpr"], ["rec_t", 1, "Record"], ["int [110]", 3, "Type"], ["0", 11, "IntegerLiteral"], ["const void *", 2, "Type"], ["scanf", 3, "DeclRefExpr"]] 
stonekyx_advex 2270488_2453486_stonekyx_advex.c [["\"Game has not completed\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["\"X won\"", 1, "StringLiteral"], ["puts", 4, "DeclRefExpr"], ["fgets", 1, "DeclRefExpr"], ["j", 18, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["4", 11, "IntegerLiteral"], ["0", 14, "IntegerLiteral"], ["int i;", 3, "DeclStmt"], ["5", 1, "IntegerLiteral"], ["scanf", 1, "DeclRefExpr"], ["ch", 5, "ParmVar__DeclRefExpr"], ["i", 34, "Var__DeclRefExpr"], ["char [10][10]", 1, "Type"], ["check_win", 3, "Function__DeclRefExpr"], ["res", 3, "Var__DeclRefExpr"], ["map", 11, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["char [10]", 1, "Type"], ["\"%d\\n\"", 1, "StringLiteral"], ["int", 13, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 4, "CharacterLiteral"], ["1", 7, "IntegerLiteral"], ["char", 1, "Type"], ["break", 9, "BreakStmt"], ["int (void)", 2, "Type"], ["'.'", 1, "CharacterLiteral"], ["3", 4, "IntegerLiteral"], ["int res;", 1, "DeclStmt"], ["int j;", 2, "DeclStmt"], ["10", 3, "IntegerLiteral"], ["get_res", 2, "Function__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["'O'", 1, "CharacterLiteral"], ["2", 2, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["main", 1, "Function"], ["int (int)", 1, "Type"], ["check_full", 2, "Function__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["duai_Var", 2, "Var__DeclRefExpr"]] 
stonekyx_advex 2270488_2463486_stonekyx_advex.c [["printf", 1, "DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["Tcnt", 2, "Var__DeclRefExpr"], ["main", 1, "Function"], ["sizeof(int)", 3, "UnaryExprOrTypeTraitExpr"], ["long long a_ b;", 1, "DeclStmt"], ["i", 14, "Var__DeclRefExpr"], ["a", 5, "ParmVar__DeclRefExpr"], ["bis", 3, "Function__DeclRefExpr"], ["dtgi_Var", 4, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["long long", 5, "Type"], ["long long [100]", 1, "Type"], ["squ", 4, "Var__DeclRefExpr"], ["2000002", 2, "IntegerLiteral"], ["1111111", 2, "IntegerLiteral"], ["1102011", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["1101011", 2, "IntegerLiteral"], ["2002", 2, "IntegerLiteral"], ["20102", 2, "IntegerLiteral"], ["1001", 2, "IntegerLiteral"], ["1000001", 2, "IntegerLiteral"], ["101", 2, "IntegerLiteral"], ["int ()", 1, "Type"], ["22", 2, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["121", 2, "IntegerLiteral"], ["10201", 2, "IntegerLiteral"], ["11", 2, "IntegerLiteral"], ["numbers", 6, "Var__DeclRefExpr"], ["int i;", 2, "DeclStmt"], ["11211", 2, "IntegerLiteral"], ["1001001", 2, "IntegerLiteral"], ["1100011", 2, "IntegerLiteral"], ["212", 2, "IntegerLiteral"], ["1110111", 2, "IntegerLiteral"], ["1002001", 2, "IntegerLiteral"], ["1010101", 2, "IntegerLiteral"], ["1111", 2, "IntegerLiteral"], ["10001", 2, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["int (long long)", 1, "Type"], ["10101", 2, "IntegerLiteral"], ["111", 2, "IntegerLiteral"], ["int", 10, "Type"], ["1012101", 2, "IntegerLiteral"], ["const int []", 1, "Type"], ["11011", 2, "IntegerLiteral"], ["20002", 2, "IntegerLiteral"], ["100001", 2, "IntegerLiteral"], ["2", 2, "IntegerLiteral"], ["101101", 2, "IntegerLiteral"], ["2001002", 2, "IntegerLiteral"], ["11111", 2, "IntegerLiteral"], ["110011", 2, "IntegerLiteral"], ["\"%lld%lld\"", 1, "StringLiteral"], ["0", 4, "IntegerLiteral"], ["202", 2, "IntegerLiteral"], ["111111", 2, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["200002", 2, "IntegerLiteral"], ["1011101", 2, "IntegerLiteral"]] 
stonekyx_advex 2974486_5709773144064000_stonekyx_advex.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["main", 1, "Function"], ["C", 9, "ParmVar__DeclRefExpr"], ["double (int_ double_ double_ double)", 1, "Type"], ["F", 10, "ParmVar__DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["double C_ F_ X;", 1, "DeclStmt"], ["get_k", 2, "Function__DeclRefExpr"], ["int", 7, "Type"], ["double", 11, "Type"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["int (double_ double_ double)", 1, "Type"], ["Tcnt", 2, "Var__DeclRefExpr"], ["get_ans", 2, "Function__DeclRefExpr"], ["X", 8, "ParmVar__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["k", 7, "ParmVar__DeclRefExpr"], ["int i;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["ans", 3, "Var__DeclRefExpr"], ["2.0", 2, "FloatingLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"]] 
stonekyx_advex 2974486_5756407898963968_stonekyx_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["int [4]", 2, "Type"], ["1", 8, "IntegerLiteral"], ["map1", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int [4][4]", 2, "Type"], ["row2", 3, "Var__DeclRefExpr"], ["Tcnt", 2, "Var__DeclRefExpr"], ["4", 9, "IntegerLiteral"], ["row1", 3, "Var__DeclRefExpr"], ["i", 19, "Var__DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["int row1_ row2;", 1, "DeclStmt"], ["int i;", 1, "DeclStmt"], ["j", 10, "Var__DeclRefExpr"], ["\"%d\"", 5, "StringLiteral"], ["2", 3, "IntegerLiteral"], ["int", 13, "Type"], ["ret_val", 2, "Var__DeclRefExpr"], ["puts", 2, "DeclRefExpr"], ["map2", 3, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["static int count[16];", 1, "DeclStmt"], ["count", 6, "Var__DeclRefExpr"], ["static int map1[4][4]_ map2[4][4];", 1, "DeclStmt"], ["0", 9, "IntegerLiteral"], ["int [16]", 1, "Type"], ["\"Case #%d: \"", 1, "StringLiteral"], ["16", 2, "IntegerLiteral"], ["int ans;", 1, "DeclStmt"], ["ans", 8, "Var__DeclRefExpr"], ["int j;", 2, "DeclStmt"], ["break", 1, "BreakStmt"], ["T", 4, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["\"Volunteer cheated!\"", 1, "StringLiteral"]] 
stubbscroll 1460488_1483485_stubbscroll.c [["\"%d\"", 1, "StringLiteral"], ["sscanf", 1, "DeclRefExpr"], ["int [256]", 1, "Type"], ["void (char *_ char *)", 1, "Type"], ["\"there are twenty six factorial possibilities\"", 1, "StringLiteral"], ["e", 2, "Var__DeclRefExpr"], ["d", 2, "Var__DeclRefExpr"], ["a", 2, "Var__DeclRefExpr"], ["void", 1, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"our language is impossible to understand\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["\"so it is okay if you want to just give up\"", 1, "StringLiteral"], ["f", 2, "Var__DeclRefExpr"], ["t", 2, "ParmVar__DeclRefExpr"], ["makemap", 4, "Function__DeclRefExpr"], ["char [16384]", 1, "Type"], ["c", 2, "Var__DeclRefExpr"], ["\"de kr kd eoya kw aej tysr re ujdr lkgc jv\"", 1, "StringLiteral"], ["\"rbcpc ypc rtcsra dkh wyfrepkym veddknkmkrkcd\"", 1, "StringLiteral"], ["'q'", 2, "CharacterLiteral"], ["char", 9, "Type"], ["b", 2, "Var__DeclRefExpr"], ["char *", 2, "Type"], ["map", 7, "Var__DeclRefExpr"], ["\"ejp mysljylc kd kxveddknmc re jsicpdrysi\"", 1, "StringLiteral"], ["int", 7, "Type"], ["256", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["s", 11, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["16384", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["caseno", 2, "Var__DeclRefExpr"], ["gets", 2, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["char []", 6, "Type"], ["i", 6, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["'z'", 2, "CharacterLiteral"]] 
stubbscroll 1460488_1483488_stubbscroll.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"], ["caseno", 2, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], [";", 1, "NullStmt"], ["printf", 1, "DeclRefExpr"], ["goto next", 1, "GotoStmt"], ["1", 4, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["\"%d\"", 3, "StringLiteral"], ["b", 6, "ParmVar__DeclRefExpr"], ["a", 5, "ParmVar__DeclRefExpr"], ["int", 14, "Type"], ["char s[10]_ t[10];", 1, "DeclStmt"], ["int (int_ int)", 1, "Type"], ["strlen", 3, "DeclRefExpr"], ["char [10]", 2, "Type"], ["s", 7, "Var__DeclRefExpr"], ["l", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["sprintf", 2, "DeclRefExpr"], ["recycle", 2, "Function__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["char", 2, "Type"], ["int i_ l_ j;", 1, "DeclStmt"], ["i", 11, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 11, "Var__DeclRefExpr"]] 
stubbscroll 1460488_1595491_stubbscroll.c [["printf", 1, "DeclRefExpr"], ["qsort", 1, "DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["ans", 5, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["i", 10, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["lo2", 6, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["lo1", 6, "Var__DeclRefExpr"], ["s", 4, "Var__DeclRefExpr"], ["const void *", 2, "Type"], ["int", 17, "Type"], ["int (const void *_ const void *)", 1, "Type"], ["void", 2, "Type"], ["a", 3, "ParmVar__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["b", 3, "ParmVar__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 6, "Var__DeclRefExpr"], ["compi", 2, "Function__DeclRefExpr"], ["int *", 4, "Type"], ["1", 4, "IntegerLiteral"], ["int n_ s_ p_ lo1_ lo2;", 1, "DeclStmt"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["score", 5, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["int i_ score[100]_ ans;", 1, "DeclStmt"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["caseno", 2, "Var__DeclRefExpr"]] 
stubbscroll 2270488_2449486_stubbscroll.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["no", 2, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["100", 1, "IntegerLiteral"], ["int", 14, "Type"], ["try", 7, "Var__DeclRefExpr"], ["111", 4, "IntegerLiteral"], ["can", 2, "Function__DeclRefExpr"], ["int ()", 2, "Type"], ["T", 3, "Var__DeclRefExpr"], ["j", 32, "Var__DeclRefExpr"], ["int [111]", 2, "Type"], ["\"NO\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["int [111][111]", 2, "Type"], ["scanf", 3, "DeclRefExpr"], ["int i_ j_ maks_ ch;", 1, "DeclStmt"], ["x", 8, "Var__DeclRefExpr"], ["y", 8, "Var__DeclRefExpr"], ["i", 32, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["g", 7, "Var__DeclRefExpr"], ["maks", 11, "Var__DeclRefExpr"], ["ch", 5, "Var__DeclRefExpr"], ["0", 17, "IntegerLiteral"]] 
stubbscroll 2270488_2453486_stubbscroll.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["\"X won\"", 1, "StringLiteral"], ["'X'", 1, "CharacterLiteral"], ["puts", 4, "DeclRefExpr"], ["i", 19, "Var__DeclRefExpr"], ["dy", 2, "ParmVar__DeclRefExpr"], ["int i_ n;", 1, "DeclStmt"], ["4", 6, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["n", 4, "Var__DeclRefExpr"], ["x", 4, "ParmVar__DeclRefExpr"], ["int (int_ int_ int_ int_ char)", 1, "Type"], ["char", 3, "Type"], ["\"%d\"", 1, "StringLiteral"], ["char [6][6]", 1, "Type"], ["int i;", 1, "DeclStmt"], ["3", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["c", 7, "ParmVar__DeclRefExpr"], ["\"O won\"", 1, "StringLiteral"], ["int (char)", 1, "Type"], ["6", 2, "IntegerLiteral"], ["g", 5, "Var__DeclRefExpr"], ["char [6]", 1, "Type"], ["int", 15, "Type"], ["check", 5, "Function__DeclRefExpr"], ["0", 14, "IntegerLiteral"], ["won", 3, "Function__DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["1", 12, "IntegerLiteral"], ["dx", 2, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["j", 5, "Var__DeclRefExpr"], ["y", 4, "ParmVar__DeclRefExpr"], ["z", 4, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["no", 2, "Var__DeclRefExpr"], ["'T'", 1, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"]] 
stubbscroll 2270488_2463486_stubbscroll.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["void ()", 1, "Type"], ["i", 19, "Var__DeclRefExpr"], ["char", 2, "Type"], ["long long", 1, "Type"], ["ll [1000000]", 1, "Type"], ["t", 5, "Var__DeclRefExpr"], ["int a_ i_ l;", 1, "DeclStmt"], ["char s[20]_ t[20];", 1, "DeclStmt"], ["s", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["main", 1, "Function"], ["1000000", 1, "IntegerLiteral"], ["a", 12, "Var__DeclRefExpr"], ["gen", 2, "Function__DeclRefExpr"], ["n", 4, "Var__DeclRefExpr"], ["tall", 4, "Var__DeclRefExpr"], ["void", 1, "Type"], ["20", 2, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["10000001", 1, "IntegerLiteral"], ["ll", 4, "Typedef"], ["\"%d\"", 2, "StringLiteral"], ["sprintf", 2, "DeclRefExpr"], ["strlen", 2, "DeclRefExpr"], ["int", 11, "Type"], ["goto fail", 2, "GotoStmt"], ["char [20]", 2, "Type"], ["\"%I64d\"", 1, "StringLiteral"], [";", 1, "NullStmt"], ["l", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["b", 3, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["no", 2, "Var__DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"]] 
stubbscroll 2974486_5709773144064000_stubbscroll.c [["\"Case #%d: \"", 1, "StringLiteral"], ["return", 1, "ReturnStmt"], ["printf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["1", 2, "IntegerLiteral"], ["0", 2, "IntegerLiteral"], ["no", 2, "Var__DeclRefExpr"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["F", 3, "Var__DeclRefExpr"], ["\"%.10f\\n\"", 1, "StringLiteral"], ["2000000000", 1, "IntegerLiteral"], ["C", 3, "Var__DeclRefExpr"], ["produce", 6, "Var__DeclRefExpr"], ["double", 6, "Type"], ["void ()", 1, "Type"], ["void", 1, "Type"], ["int ()", 1, "Type"], ["solve", 2, "Function__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["1e100", 1, "FloatingLiteral"], ["X", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["tid", 5, "Var__DeclRefExpr"], ["int", 4, "Type"], ["main", 1, "Function"], ["best", 5, "Var__DeclRefExpr"], ["int z;", 1, "DeclStmt"], ["z", 4, "Var__DeclRefExpr"]] 
stubbscroll 2974486_5756407898963968_stubbscroll.c [["\"Case #%d: \"", 1, "StringLiteral"], ["no", 2, "Var__DeclRefExpr"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["return", 1, "ReturnStmt"], ["\"Bad magician!\"", 1, "StringLiteral"], ["main", 1, "Function"], ["continue", 2, "ContinueStmt"], ["printf", 2, "DeclRefExpr"], ["goto next", 1, "GotoStmt"], ["17", 1, "IntegerLiteral"], ["puts", 2, "DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["4", 10, "IntegerLiteral"], ["int", 11, "Type"], ["int ()", 1, "Type"], ["int [4]", 2, "Type"], ["solve", 2, "Function__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["void", 1, "Type"], ["r1", 3, "Var__DeclRefExpr"], ["goto next2", 1, "GotoStmt"], ["num", 5, "Var__DeclRefExpr"], ["r2", 3, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["i", 17, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 9, "Var__DeclRefExpr"], ["int [4][4]", 2, "Type"], ["1", 6, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["k", 7, "Var__DeclRefExpr"]] 
stubbscroll_advex 1460488_1483485_stubbscroll_advex.c [["\"%d\"", 1, "StringLiteral"], ["sscanf", 1, "DeclRefExpr"], ["int [256]", 1, "Type"], ["void (char *_ char *)", 1, "Type"], ["\"there are twenty six factorial possibilities\"", 1, "StringLiteral"], ["e", 2, "Var__DeclRefExpr"], ["d", 2, "Var__DeclRefExpr"], ["a", 2, "Var__DeclRefExpr"], ["void", 1, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"our language is impossible to understand\"", 1, "StringLiteral"], ["0", 3, "IntegerLiteral"], ["\"so it is okay if you want to just give up\"", 1, "StringLiteral"], ["f", 2, "Var__DeclRefExpr"], ["t", 2, "ParmVar__DeclRefExpr"], ["makemap", 4, "Function__DeclRefExpr"], ["char [16384]", 1, "Type"], ["c", 2, "Var__DeclRefExpr"], ["\"de kr kd eoya kw aej tysr re ujdr lkgc jv\"", 1, "StringLiteral"], ["\"rbcpc ypc rtcsra dkh wyfrepkym veddknkmkrkcd\"", 1, "StringLiteral"], ["'q'", 2, "CharacterLiteral"], ["char", 9, "Type"], ["b", 2, "Var__DeclRefExpr"], ["char *", 2, "Type"], ["map", 7, "Var__DeclRefExpr"], ["\"ejp mysljylc kd kxveddknmc re jsicpdrysi\"", 1, "StringLiteral"], ["int", 7, "Type"], ["256", 1, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["s", 11, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["16384", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["caseno", 2, "Var__DeclRefExpr"], ["gets", 2, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["char []", 6, "Type"], ["i", 6, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["'z'", 2, "CharacterLiteral"]] 
stubbscroll_advex 1460488_1483488_stubbscroll_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["caseno", 2, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"%d %d\"", 1, "StringLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], [";", 1, "NullStmt"], ["printf", 1, "DeclRefExpr"], ["goto next", 1, "GotoStmt"], ["1", 4, "IntegerLiteral"], ["0", 5, "IntegerLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 3, "StringLiteral"], ["a", 5, "ParmVar__DeclRefExpr"], ["int", 14, "Type"], ["char s[10]_ t[10];", 1, "DeclStmt"], ["int (int_ int)", 1, "Type"], ["strlen", 3, "DeclRefExpr"], ["char [10]", 2, "Type"], ["s", 7, "Var__DeclRefExpr"], ["l", 3, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["char", 2, "Type"], ["int i_ l_ j;", 1, "DeclStmt"], ["i", 11, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["j", 11, "Var__DeclRefExpr"], ["duai_Var", 6, "ParmVar__DeclRefExpr"], ["recycle", 2, "Function__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["sprintf", 2, "DeclRefExpr"]] 
stubbscroll_advex 1460488_1595491_stubbscroll_advex.c [["printf", 1, "DeclRefExpr"], ["qsort", 1, "DeclRefExpr"], ["\"%d %d %d\"", 1, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["ans", 5, "Var__DeclRefExpr"], ["int [100]", 1, "Type"], ["i", 10, "Var__DeclRefExpr"], ["100", 1, "IntegerLiteral"], ["lo2", 6, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["lo1", 6, "Var__DeclRefExpr"], ["s", 4, "Var__DeclRefExpr"], ["const void *", 2, "Type"], ["int", 17, "Type"], ["int (const void *_ const void *)", 1, "Type"], ["void", 2, "Type"], ["a", 3, "ParmVar__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["b", 3, "ParmVar__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 6, "Var__DeclRefExpr"], ["compi", 2, "Function__DeclRefExpr"], ["int *", 4, "Type"], ["1", 4, "IntegerLiteral"], ["int n_ s_ p_ lo1_ lo2;", 1, "DeclStmt"], ["sizeof(int)", 1, "UnaryExprOrTypeTraitExpr"], ["score", 5, "Var__DeclRefExpr"], ["0", 8, "IntegerLiteral"], ["int i_ score[100]_ ans;", 1, "DeclStmt"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["caseno", 2, "Var__DeclRefExpr"]] 
stubbscroll_advex 2270488_2449486_stubbscroll_advex.c [["\"YES\"", 1, "StringLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["no", 2, "Var__DeclRefExpr"], ["\"%d %d\"", 1, "StringLiteral"], ["main", 1, "Function"], ["100", 1, "IntegerLiteral"], ["int", 14, "Type"], ["try", 7, "Var__DeclRefExpr"], ["111", 4, "IntegerLiteral"], ["can", 2, "Function__DeclRefExpr"], ["int ()", 2, "Type"], ["T", 3, "Var__DeclRefExpr"], ["j", 32, "Var__DeclRefExpr"], ["int [111]", 2, "Type"], ["\"NO\"", 1, "StringLiteral"], ["1", 4, "IntegerLiteral"], ["int [111][111]", 2, "Type"], ["scanf", 3, "DeclRefExpr"], ["int i_ j_ maks_ ch;", 1, "DeclStmt"], ["x", 8, "Var__DeclRefExpr"], ["y", 8, "Var__DeclRefExpr"], ["i", 32, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["g", 7, "Var__DeclRefExpr"], ["maks", 11, "Var__DeclRefExpr"], ["ch", 5, "Var__DeclRefExpr"], ["0", 17, "IntegerLiteral"]] 
stubbscroll_advex 2270488_2453486_stubbscroll_advex.c [["\"Draw\"", 1, "StringLiteral"], ["\"Game has not completed\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["\"X won\"", 1, "StringLiteral"], ["'X'", 1, "CharacterLiteral"], ["puts", 4, "DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["int duai_Var_ n;", 1, "DeclStmt"], ["int ()", 1, "Type"], ["4", 6, "IntegerLiteral"], ["\"%s\"", 1, "StringLiteral"], ["duai_Var", 19, "Var__DeclRefExpr"], ["n", 4, "Var__DeclRefExpr"], ["x", 4, "ParmVar__DeclRefExpr"], ["int (int_ int_ int_ int_ char)", 1, "Type"], ["char", 3, "Type"], ["3", 1, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["c", 7, "ParmVar__DeclRefExpr"], ["g", 5, "Var__DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["'T'", 1, "CharacterLiteral"], ["char [6]", 1, "Type"], ["int", 15, "Type"], ["check", 5, "Function__DeclRefExpr"], ["dy", 2, "ParmVar__DeclRefExpr"], ["\"O won\"", 1, "StringLiteral"], ["6", 2, "IntegerLiteral"], ["int (char)", 1, "Type"], ["0", 14, "IntegerLiteral"], ["won", 3, "Function__DeclRefExpr"], ["int duai_Var;", 1, "DeclStmt"], ["1", 12, "IntegerLiteral"], ["dx", 2, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["char [6][6]", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["j", 5, "Var__DeclRefExpr"], ["y", 4, "ParmVar__DeclRefExpr"], ["z", 4, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["no", 2, "Var__DeclRefExpr"]] 
stubbscroll_advex 2270488_2463486_stubbscroll_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d %d\"", 1, "StringLiteral"], ["ans", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["s", 5, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["i", 19, "Var__DeclRefExpr"], ["char", 2, "Type"], ["long long", 1, "Type"], ["ll [1000000]", 1, "Type"], ["t", 5, "Var__DeclRefExpr"], ["int a_ i_ l;", 1, "DeclStmt"], ["duai_Var", 3, "Var__DeclRefExpr"], ["char s[20]_ t[20];", 1, "DeclStmt"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["1000000", 1, "IntegerLiteral"], ["a", 12, "Var__DeclRefExpr"], ["gen", 2, "Function__DeclRefExpr"], ["n", 4, "Var__DeclRefExpr"], ["tall", 4, "Var__DeclRefExpr"], ["void", 1, "Type"], ["20", 2, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["no", 2, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["0", 5, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["10000001", 1, "IntegerLiteral"], ["ll", 4, "Typedef"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["sprintf", 2, "DeclRefExpr"], ["strlen", 2, "DeclRefExpr"], ["int", 11, "Type"], ["goto fail", 2, "GotoStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["char [20]", 2, "Type"], ["\"%I64d\"", 1, "StringLiteral"], [";", 1, "NullStmt"], ["l", 7, "Var__DeclRefExpr"], ["int ()", 1, "Type"]] 
stubbscroll_advex 2974486_5709773144064000_stubbscroll_advex.c [["\"Case #%d: \"", 1, "StringLiteral"], ["return", 1, "ReturnStmt"], ["printf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["1", 2, "IntegerLiteral"], ["0", 2, "IntegerLiteral"], ["no", 2, "Var__DeclRefExpr"], ["\"%lf %lf %lf\"", 1, "StringLiteral"], ["dtgi_Var", 3, "Var__DeclRefExpr"], ["F", 3, "Var__DeclRefExpr"], ["\"%.10f\\n\"", 1, "StringLiteral"], ["2000000000", 1, "IntegerLiteral"], ["C", 3, "Var__DeclRefExpr"], ["produce", 6, "Var__DeclRefExpr"], ["double", 6, "Type"], ["void ()", 1, "Type"], ["void", 1, "Type"], ["int ()", 1, "Type"], ["solve", 2, "Function__DeclRefExpr"], ["1e100", 1, "FloatingLiteral"], ["X", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["tid", 5, "Var__DeclRefExpr"], ["int", 4, "Type"], ["main", 1, "Function"], ["best", 5, "Var__DeclRefExpr"], ["int z;", 1, "DeclStmt"], ["z", 4, "Var__DeclRefExpr"]] 
stubbscroll_advex 2974486_5756407898963968_stubbscroll_advex.c [["\"Case #%d: \"", 1, "StringLiteral"], ["1", 6, "IntegerLiteral"], ["int [4][4]", 2, "Type"], ["i", 17, "Var__DeclRefExpr"], ["void ()", 1, "Type"], ["r2", 3, "Var__DeclRefExpr"], ["num", 5, "Var__DeclRefExpr"], ["j", 9, "Var__DeclRefExpr"], ["goto next2", 1, "GotoStmt"], ["void", 1, "Type"], ["r1", 3, "Var__DeclRefExpr"], ["4", 10, "IntegerLiteral"], ["int [4]", 2, "Type"], ["int ()", 1, "Type"], ["duai_Var", 3, "Var__DeclRefExpr"], ["int", 11, "Type"], ["b", 3, "Var__DeclRefExpr"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["0", 8, "IntegerLiteral"], ["puts", 2, "DeclRefExpr"], ["scanf", 5, "DeclRefExpr"], ["17", 1, "IntegerLiteral"], ["solve", 2, "Function__DeclRefExpr"], ["goto next", 1, "GotoStmt"], ["k", 7, "Var__DeclRefExpr"], ["continue", 2, "ContinueStmt"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["\"Bad magician!\"", 1, "StringLiteral"], ["return", 1, "ReturnStmt"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"%d\\n\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["no", 2, "Var__DeclRefExpr"]] 
suxing11 1460488_1483485_suxing11.c [["putchar", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["110", 1, "IntegerLiteral"], ["char", 2, "Type"], ["tab", 2, "Var__DeclRefExpr"], ["int", 4, "Type"], ["'z'", 1, "CharacterLiteral"], ["str", 7, "Var__DeclRefExpr"], ["'a'", 2, "CharacterLiteral"], ["i", 8, "Var__DeclRefExpr"], ["char [110]", 1, "Type"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["\"\\n\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["\"%d%*c\"", 1, "StringLiteral"]] 
suxing11 1460488_1483488_suxing11.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["s1", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["char s1[30]_ s2[30];", 1, "DeclStmt"], ["0", 7, "IntegerLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["graph", 4, "Var__DeclRefExpr"], ["b", 5, "ParmVar__DeclRefExpr"], ["a", 6, "ParmVar__DeclRefExpr"], ["len", 6, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["int [1010][1010]", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["sum", 4, "Var__DeclRefExpr"], ["int [1010]", 1, "Type"], ["char [30]", 2, "Type"], ["s2", 4, "Var__DeclRefExpr"], ["int", 15, "Type"], ["test", 2, "Function__DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["i", 18, "Var__DeclRefExpr"], ["j", 18, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["1010", 2, "IntegerLiteral"], ["30", 2, "IntegerLiteral"], ["1000", 1, "IntegerLiteral"], ["sprintf", 2, "DeclRefExpr"], ["strlen", 2, "DeclRefExpr"], ["char", 2, "Type"], ["break", 1, "BreakStmt"], ["1", 6, "IntegerLiteral"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["int i_ j_ T;", 1, "DeclStmt"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["\"c-out.txt\"", 1, "StringLiteral"]] 
suxing11 1460488_1595491_suxing11.c [["printf", 1, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["int", 10, "Type"], ["110", 1, "IntegerLiteral"], ["a", 4, "Var__DeclRefExpr"], ["num2", 6, "Var__DeclRefExpr"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["int [110]", 1, "Type"], ["\"bout.txt\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["num1", 4, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["int num1_ num2;", 1, "DeclStmt"]] 
suxing11 2270488_2449486_suxing11.c [["\"YES\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["100", 1, "IntegerLiteral"], ["2", 7, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["a", 6, "ParmVar__DeclRefExpr"], ["110", 6, "IntegerLiteral"], ["min", 1, "Function"], ["3", 1, "IntegerLiteral"], ["h", 26, "Var__DeclRefExpr"], ["i", 51, "Var__DeclRefExpr"], ["col", 5, "Var__DeclRefExpr"], ["int [220][3]", 1, "Type"], ["row", 5, "Var__DeclRefExpr"], ["int [3]", 1, "Type"], ["max", 3, "Function__DeclRefExpr"], ["220", 1, "IntegerLiteral"], ["gg", 5, "Var__DeclRefExpr"], ["g", 5, "Var__DeclRefExpr"], ["int", 23, "Type"], ["b", 6, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["int ()", 1, "Type"], ["cc", 12, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["\"B_out.txt\"", 1, "StringLiteral"], ["int [110][110]", 2, "Type"], ["T", 3, "Var__DeclRefExpr"], ["j", 40, "Var__DeclRefExpr"], ["nCase", 2, "Var__DeclRefExpr"], ["int (int_ int)", 2, "Type"], ["t", 7, "Var__DeclRefExpr"], ["1", 12, "IntegerLiteral"], ["ROW", 3, "Var__DeclRefExpr"], ["int [110]", 4, "Type"], ["0", 31, "IntegerLiteral"], ["COL", 2, "Var__DeclRefExpr"], ["int flag_ n_ m_ i_ j_ cc_ t;", 1, "DeclStmt"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["flag", 4, "Var__DeclRefExpr"], ["n", 8, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"]] 
suxing11 2270488_2453486_suxing11.c [["\"%d\"", 1, "StringLiteral"], ["\"Game has not completed\"", 2, "StringLiteral"], ["\"Draw\"", 2, "StringLiteral"], ["\"X won\"", 2, "StringLiteral"], ["50", 1, "IntegerLiteral"], ["char [][50]", 1, "Type"], ["result", 2, "Var__DeclRefExpr"], ["int [4]", 2, "Type"], ["int ()", 2, "Type"], ["4", 12, "IntegerLiteral"], ["col", 3, "Var__DeclRefExpr"], ["i", 33, "Var__DeclRefExpr"], ["\"O won\"", 2, "StringLiteral"], ["int (char)", 1, "Type"], ["ch", 5, "ParmVar__DeclRefExpr"], ["int", 16, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["flag", 4, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["g", 11, "Var__DeclRefExpr"], ["'T'", 4, "CharacterLiteral"], ["char [5]", 1, "Type"], ["0", 17, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["5", 2, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["char [50]", 1, "Type"], ["\"r\"", 1, "StringLiteral"], ["cc", 3, "Var__DeclRefExpr"], ["char", 3, "Type"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["row", 3, "Var__DeclRefExpr"], ["\"%s\"", 1, "StringLiteral"], ["char [5][5]", 1, "Type"], ["dd", 3, "Var__DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["check", 3, "Function__DeclRefExpr"], ["gao", 2, "Function__DeclRefExpr"], ["'O'", 1, "CharacterLiteral"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["nCase", 2, "Var__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["\"A-small-attempt0.txt\"", 1, "StringLiteral"]] 
suxing11 2270488_2463486_suxing11.c [["\"%I64d%I64d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["\"C_out.txt\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"C-small-attempt0.in\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["long long a_ b;", 1, "DeclStmt"], ["i", 11, "Var__DeclRefExpr"], ["int", 5, "Type"], ["int ()", 1, "Type"], ["2001002LL", 2, "IntegerLiteral"], ["1110111LL", 2, "IntegerLiteral"], ["a", 3, "Var__DeclRefExpr"], ["1102011LL", 2, "IntegerLiteral"], ["1100011LL", 2, "IntegerLiteral"], ["1012101LL", 2, "IntegerLiteral"], ["cc", 4, "Var__DeclRefExpr"], ["1001LL", 2, "IntegerLiteral"], ["1011101LL", 2, "IntegerLiteral"], ["212LL", 2, "IntegerLiteral"], ["22LL", 2, "IntegerLiteral"], ["10000001LL", 2, "IntegerLiteral"], ["41", 3, "IntegerLiteral"], ["1111111LL", 2, "IntegerLiteral"], ["202LL", 2, "IntegerLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["11111LL", 2, "IntegerLiteral"], ["1101011LL", 2, "IntegerLiteral"], ["111LL", 2, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["2000002LL", 2, "IntegerLiteral"], ["101LL", 2, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["121LL", 2, "IntegerLiteral"], ["11LL", 2, "IntegerLiteral"], ["20002LL", 2, "IntegerLiteral"], ["3LL", 2, "IntegerLiteral"], ["2LL", 2, "IntegerLiteral"], ["0LL", 2, "IntegerLiteral"], ["long long", 3, "Type"], ["\"w\"", 1, "StringLiteral"], ["tab", 5, "Var__DeclRefExpr"], ["1001001LL", 2, "IntegerLiteral"], ["main", 1, "Function"], ["1LL", 2, "IntegerLiteral"], ["10001LL", 2, "IntegerLiteral"], ["1111LL", 2, "IntegerLiteral"], ["freopen", 2, "DeclRefExpr"], ["2002LL", 2, "IntegerLiteral"], ["10101LL", 2, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["10201LL", 2, "IntegerLiteral"], ["11011LL", 2, "IntegerLiteral"], ["11211LL", 2, "IntegerLiteral"], ["1002001LL", 2, "IntegerLiteral"], ["long long [41]", 1, "Type"], ["20102LL", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["200002LL", 2, "IntegerLiteral"], ["100001LL", 2, "IntegerLiteral"], ["101101LL", 2, "IntegerLiteral"], ["110011LL", 2, "IntegerLiteral"], ["111111LL", 2, "IntegerLiteral"], ["1000001LL", 2, "IntegerLiteral"], ["1010101LL", 2, "IntegerLiteral"]] 
suxing11 2974486_5709773144064000_suxing11.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["int", 3, "Type"], ["int ()", 1, "Type"], ["double t_ tt;", 1, "DeclStmt"], ["double", 11, "Type"], ["double c_ f_ x;", 1, "DeclStmt"], ["x", 6, "ParmVar__DeclRefExpr"], ["gao", 2, "Function__DeclRefExpr"], ["c", 6, "ParmVar__DeclRefExpr"], ["double (double_ double_ double)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["p", 6, "Var__DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"], ["\"B-small-out.txt\"", 1, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["f", 6, "ParmVar__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["tt", 3, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["break", 1, "BreakStmt"]] 
suxing11 2974486_5756407898963968_suxing11.c [["\"%d\\n\"", 1, "StringLiteral"], ["int i_ j_ a_ b;", 1, "DeclStmt"], ["ans", 7, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["j", 9, "Var__DeclRefExpr"], ["\"A-small-attempt0.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["vis", 5, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 2, "DeclRefExpr"], ["int [20]", 1, "Type"], ["0", 7, "IntegerLiteral"], ["puts", 2, "DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 5, "StringLiteral"], ["int [5][10][10]", 1, "Type"], ["int", 10, "Type"], ["1", 13, "IntegerLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["g", 6, "Var__DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["printf", 2, "DeclRefExpr"], ["int [10]", 1, "Type"], ["int [10][10]", 1, "Type"], ["5", 1, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["i", 18, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["memset", 1, "DeclRefExpr"], ["\"A_out.txt\"", 1, "StringLiteral"], ["4", 6, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"]] 
suxing11_advex 1460488_1483485_suxing11_advex.c [["putchar", 2, "DeclRefExpr"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["gets", 1, "DeclRefExpr"], ["\"out.txt\"", 1, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["char []", 1, "Type"], ["110", 1, "IntegerLiteral"], ["char", 2, "Type"], ["tab", 2, "Var__DeclRefExpr"], ["int", 4, "Type"], ["'z'", 1, "CharacterLiteral"], ["str", 7, "Var__DeclRefExpr"], ["'a'", 2, "CharacterLiteral"], ["i", 8, "Var__DeclRefExpr"], ["char [110]", 1, "Type"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["1", 1, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["int ()", 1, "Type"], ["\"\\n\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["scanf", 1, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["\"%d%*c\"", 1, "StringLiteral"]] 
suxing11_advex 1460488_1483488_suxing11_advex.c [["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["s1", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["char s1[30]_ s2[30];", 1, "DeclStmt"], ["0", 7, "IntegerLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["graph", 4, "Var__DeclRefExpr"], ["b", 5, "ParmVar__DeclRefExpr"], ["a", 6, "ParmVar__DeclRefExpr"], ["len", 6, "Var__DeclRefExpr"], ["int (int_ int)", 1, "Type"], ["int [1010][1010]", 1, "Type"], ["int [1010]", 1, "Type"], ["char [30]", 2, "Type"], ["s2", 4, "Var__DeclRefExpr"], ["int", 15, "Type"], ["test", 2, "Function__DeclRefExpr"], ["\"%d\"", 3, "StringLiteral"], ["i", 18, "Var__DeclRefExpr"], ["j", 18, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["1010", 2, "IntegerLiteral"], ["30", 2, "IntegerLiteral"], ["1000", 1, "IntegerLiteral"], ["sprintf", 2, "DeclRefExpr"], ["strlen", 2, "DeclRefExpr"], ["char", 2, "Type"], ["break", 1, "BreakStmt"], ["1", 6, "IntegerLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int i_ j_ T;", 1, "DeclStmt"], ["\"c-out.txt\"", 1, "StringLiteral"], ["sum", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"]] 
suxing11_advex 1460488_1595491_suxing11_advex.c [["printf", 1, "DeclRefExpr"], ["0", 4, "IntegerLiteral"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["2", 1, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["int", 10, "Type"], ["110", 1, "IntegerLiteral"], ["a", 4, "Var__DeclRefExpr"], ["num2", 6, "Var__DeclRefExpr"], ["int n_ s_ p;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["int [110]", 1, "Type"], ["\"bout.txt\"", 1, "StringLiteral"], ["T", 3, "Var__DeclRefExpr"], ["i", 7, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["\"%d%d%d\"", 1, "StringLiteral"], ["num1", 4, "Var__DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["int num1_ num2;", 1, "DeclStmt"]] 
suxing11_advex 2270488_2449486_suxing11_advex.c [["\"YES\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["100", 1, "IntegerLiteral"], ["2", 7, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["scanf", 3, "DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["a", 6, "ParmVar__DeclRefExpr"], ["110", 6, "IntegerLiteral"], ["min", 1, "Function"], ["3", 1, "IntegerLiteral"], ["h", 26, "Var__DeclRefExpr"], ["i", 51, "Var__DeclRefExpr"], ["col", 5, "Var__DeclRefExpr"], ["int [220][3]", 1, "Type"], ["row", 5, "Var__DeclRefExpr"], ["int [3]", 1, "Type"], ["max", 3, "Function__DeclRefExpr"], ["220", 1, "IntegerLiteral"], ["gg", 5, "Var__DeclRefExpr"], ["g", 5, "Var__DeclRefExpr"], ["int", 23, "Type"], ["b", 6, "ParmVar__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["cc", 12, "Var__DeclRefExpr"], ["j", 40, "Var__DeclRefExpr"], ["nCase", 2, "Var__DeclRefExpr"], ["int (int_ int)", 2, "Type"], ["t", 7, "Var__DeclRefExpr"], ["1", 12, "IntegerLiteral"], ["ROW", 3, "Var__DeclRefExpr"], ["int [110]", 4, "Type"], ["0", 31, "IntegerLiteral"], ["COL", 2, "Var__DeclRefExpr"], ["int flag_ n_ m_ i_ j_ cc_ t;", 1, "DeclStmt"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["flag", 4, "Var__DeclRefExpr"], ["n", 8, "Var__DeclRefExpr"], ["m", 8, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["int [110][110]", 2, "Type"], ["T", 3, "Var__DeclRefExpr"], ["\"B_out.txt\"", 1, "StringLiteral"]] 
suxing11_advex 2270488_2453486_suxing11_advex.c [["\"%d\"", 1, "StringLiteral"], ["\"Game has not completed\"", 2, "StringLiteral"], ["\"Draw\"", 2, "StringLiteral"], ["\"X won\"", 2, "StringLiteral"], ["50", 1, "IntegerLiteral"], ["char [50]", 1, "Type"], ["int [4]", 2, "Type"], ["int ()", 2, "Type"], ["4", 12, "IntegerLiteral"], ["col", 3, "Var__DeclRefExpr"], ["i", 33, "Var__DeclRefExpr"], ["\"O won\"", 2, "StringLiteral"], ["int (char)", 1, "Type"], ["ch", 5, "ParmVar__DeclRefExpr"], ["int", 16, "Type"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["flag", 4, "Var__DeclRefExpr"], ["j", 13, "Var__DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["g", 11, "Var__DeclRefExpr"], ["'T'", 4, "CharacterLiteral"], ["char [5]", 1, "Type"], ["result", 2, "Var__DeclRefExpr"], ["0", 17, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["5", 2, "IntegerLiteral"], ["2", 1, "IntegerLiteral"], ["cc", 3, "Var__DeclRefExpr"], ["char", 3, "Type"], ["row", 3, "Var__DeclRefExpr"], ["\"%s\"", 1, "StringLiteral"], ["char [5][5]", 1, "Type"], ["dd", 3, "Var__DeclRefExpr"], ["3", 3, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["check", 3, "Function__DeclRefExpr"], ["gao", 2, "Function__DeclRefExpr"], ["char [][50]", 1, "Type"], ["'O'", 1, "CharacterLiteral"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["nCase", 2, "Var__DeclRefExpr"], ["'X'", 1, "CharacterLiteral"], ["\"w\"", 1, "StringLiteral"], ["'.'", 1, "CharacterLiteral"], ["\"A-small-attempt0.txt\"", 1, "StringLiteral"]] 
suxing11_advex 2270488_2463486_suxing11_advex.c [["\"%I64d%I64d\"", 1, "StringLiteral"], ["scanf", 2, "DeclRefExpr"], ["\"C_out.txt\"", 1, "StringLiteral"], ["b", 3, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["long long a_ b;", 1, "DeclStmt"], ["i", 11, "Var__DeclRefExpr"], ["int", 5, "Type"], ["int ()", 1, "Type"], ["2001002LL", 2, "IntegerLiteral"], ["1110111LL", 2, "IntegerLiteral"], ["a", 3, "Var__DeclRefExpr"], ["1102011LL", 2, "IntegerLiteral"], ["1100011LL", 2, "IntegerLiteral"], ["1012101LL", 2, "IntegerLiteral"], ["cc", 4, "Var__DeclRefExpr"], ["1001LL", 2, "IntegerLiteral"], ["1011101LL", 2, "IntegerLiteral"], ["212LL", 2, "IntegerLiteral"], ["22LL", 2, "IntegerLiteral"], ["10000001LL", 2, "IntegerLiteral"], ["41", 3, "IntegerLiteral"], ["1111111LL", 2, "IntegerLiteral"], ["202LL", 2, "IntegerLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["11111LL", 2, "IntegerLiteral"], ["1101011LL", 2, "IntegerLiteral"], ["111LL", 2, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["2000002LL", 2, "IntegerLiteral"], ["101LL", 2, "IntegerLiteral"], ["0", 4, "IntegerLiteral"], ["121LL", 2, "IntegerLiteral"], ["11LL", 2, "IntegerLiteral"], ["20002LL", 2, "IntegerLiteral"], ["3LL", 2, "IntegerLiteral"], ["2LL", 2, "IntegerLiteral"], ["0LL", 2, "IntegerLiteral"], ["long long", 3, "Type"], ["\"w\"", 1, "StringLiteral"], ["tab", 5, "Var__DeclRefExpr"], ["1001001LL", 2, "IntegerLiteral"], ["main", 1, "Function"], ["1LL", 2, "IntegerLiteral"], ["10001LL", 2, "IntegerLiteral"], ["1111LL", 2, "IntegerLiteral"], ["freopen", 1, "DeclRefExpr"], ["2002LL", 2, "IntegerLiteral"], ["10101LL", 2, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["T", 3, "Var__DeclRefExpr"], ["10201LL", 2, "IntegerLiteral"], ["11011LL", 2, "IntegerLiteral"], ["11211LL", 2, "IntegerLiteral"], ["1002001LL", 2, "IntegerLiteral"], ["long long [41]", 1, "Type"], ["20102LL", 2, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["200002LL", 2, "IntegerLiteral"], ["100001LL", 2, "IntegerLiteral"], ["101101LL", 2, "IntegerLiteral"], ["110011LL", 2, "IntegerLiteral"], ["111111LL", 2, "IntegerLiteral"], ["1000001LL", 2, "IntegerLiteral"], ["1010101LL", 2, "IntegerLiteral"]] 
suxing11_advex 2974486_5709773144064000_suxing11_advex.c [["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["\"B-small-attempt0.in\"", 1, "StringLiteral"], ["int", 3, "Type"], ["int ()", 1, "Type"], ["double t_ tt;", 1, "DeclStmt"], ["double", 11, "Type"], ["double c_ f_ x;", 1, "DeclStmt"], ["x", 6, "ParmVar__DeclRefExpr"], ["gao", 2, "Function__DeclRefExpr"], ["c", 6, "ParmVar__DeclRefExpr"], ["double (double_ double_ double)", 1, "Type"], ["\"%d\"", 1, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["2", 1, "IntegerLiteral"], ["p", 6, "Var__DeclRefExpr"], ["ans", 4, "Var__DeclRefExpr"], ["\"B-small-out.txt\"", 1, "StringLiteral"], ["0", 2, "IntegerLiteral"], ["\"w\"", 1, "StringLiteral"], ["duai_Var", 3, "Var__DeclRefExpr"], ["nCase", 2, "Var__DeclRefExpr"], ["f", 6, "ParmVar__DeclRefExpr"], ["t", 4, "Var__DeclRefExpr"], ["freopen", 2, "DeclRefExpr"], ["main", 1, "Function"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["tt", 3, "Var__DeclRefExpr"], ["1", 2, "IntegerLiteral"], ["break", 1, "BreakStmt"]] 
suxing11_advex 2974486_5756407898963968_suxing11_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["4", 6, "IntegerLiteral"], ["memset", 1, "DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["\"A_out.txt\"", 1, "StringLiteral"], ["a", 3, "Var__DeclRefExpr"], ["i", 18, "Var__DeclRefExpr"], ["10", 2, "IntegerLiteral"], ["scanf", 5, "DeclRefExpr"], ["int [10][10]", 1, "Type"], ["int [10]", 1, "Type"], ["printf", 2, "DeclRefExpr"], ["g", 6, "Var__DeclRefExpr"], ["\"w\"", 1, "StringLiteral"], ["nCase", 2, "Var__DeclRefExpr"], ["1", 13, "IntegerLiteral"], ["int", 10, "Type"], ["int [5][10][10]", 1, "Type"], ["\"%d\"", 5, "StringLiteral"], ["5", 1, "IntegerLiteral"], ["puts", 2, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["int [20]", 1, "Type"], ["freopen", 1, "DeclRefExpr"], ["main", 1, "Function"], ["vis", 5, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["j", 9, "Var__DeclRefExpr"], ["20", 1, "IntegerLiteral"], ["T", 3, "Var__DeclRefExpr"], ["ans", 7, "Var__DeclRefExpr"], ["int i_ j_ a_ b;", 1, "DeclStmt"]] 
yey177 1460488_1483485_yey177.c [["32", 1, "IntegerLiteral"], ["putchar", 1, "DeclRefExpr"], ["puts", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["gets", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["int n_ i_ k;", 1, "DeclStmt"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["\"\"", 1, "StringLiteral"], ["u", 2, "Var__DeclRefExpr"], ["108", 1, "IntegerLiteral"], ["char", 2, "Type"], ["int", 5, "Type"], ["char [28]", 1, "Type"], ["28", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["s", 7, "Var__DeclRefExpr"], ["char s[108];", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["i", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["char [108]", 1, "Type"], ["scanf", 1, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"]] 
yey177 1460488_1483488_yey177.c [["printf", 1, "DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["10", 4, "IntegerLiteral"], ["l", 5, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["i", 10, "Var__DeclRefExpr"], ["break", 1, "BreakStmt"], ["s", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["1", 6, "IntegerLiteral"], ["int [8]", 1, "Type"], ["continue", 2, "ContinueStmt"], ["r", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["sn", 4, "Var__DeclRefExpr"], ["f", 4, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int s[8]_ sn;", 1, "DeclStmt"], ["int", 15, "Type"], ["8", 1, "IntegerLiteral"], ["a", 4, "Var__DeclRefExpr"], ["\"%d%d\"", 1, "StringLiteral"], ["int t_ k_ a_ b_ d_ e_ tmp_ i_ j_ l_ f_ r;", 1, "DeclStmt"], ["scanf", 2, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"], ["d", 5, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["e", 4, "Var__DeclRefExpr"], ["tmp", 12, "Var__DeclRefExpr"]] 
yey177 1460488_1595491_yey177.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int t_ n_ s_ p_ x_ a_ b_ k;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["int", 9, "Type"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["\"%d%d%d\"", 1, "StringLiteral"], ["b", 5, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["0", 2, "IntegerLiteral"]] 
yey177 2270488_2449486_yey177.c [["printf", 1, "DeclRefExpr"], ["goto END", 1, "GotoStmt"], ["0", 16, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["101", 2, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["main", 1, "Function"], ["100", 1, "IntegerLiteral"], ["f", 4, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["int", 12, "Type"], ["\"YES\"", 1, "StringLiteral"], ["102", 2, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["d", 15, "Var__DeclRefExpr"], ["int [102]", 1, "Type"], ["i", 30, "Var__DeclRefExpr"], ["min", 11, "Var__DeclRefExpr"], ["int [102][102]", 1, "Type"], ["int ()", 1, "Type"], ["\"%d\"", 2, "StringLiteral"], ["int t_ n_ m_ i_ j_ k_ x_ max_ min_ f;", 1, "DeclStmt"], ["max", 11, "Var__DeclRefExpr"], ["n", 7, "Var__DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["m", 7, "Var__DeclRefExpr"], ["j", 30, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 9, "Var__DeclRefExpr"]] 
yey177 2270488_2453486_yey177.c [["\"Draw\"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["goto END", 3, "GotoStmt"], ["'.'", 4, "CharacterLiteral"], ["'X'", 4, "CharacterLiteral"], ["'O'", 4, "CharacterLiteral"], ["printf", 1, "DeclRefExpr"], ["'T'", 4, "CharacterLiteral"], ["puts", 4, "DeclRefExpr"], ["0", 16, "IntegerLiteral"], ["1", 8, "IntegerLiteral"], ["char", 1, "Type"], ["int", 7, "Type"], ["int t_ i_ j_ k_ f_ f1;", 1, "DeclStmt"], ["main", 1, "Function"], ["2", 5, "IntegerLiteral"], ["\"%d\"", 1, "StringLiteral"], ["5", 2, "IntegerLiteral"], ["char [5]", 1, "Type"], ["s", 18, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["\"X won\"", 1, "StringLiteral"], ["char [5][5]", 1, "Type"], ["\"Game has not completed\"", 1, "StringLiteral"], ["\"%s\"", 1, "StringLiteral"], ["4", 7, "IntegerLiteral"], ["f1", 7, "Var__DeclRefExpr"], ["i", 41, "Var__DeclRefExpr"], ["j", 15, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["f", 26, "Var__DeclRefExpr"], ["3", 12, "IntegerLiteral"], ["k", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"]] 
yey177 2270488_2463486_yey177.c [["\"%d\"", 1, "StringLiteral"], ["k", 5, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["int t_ i_ j_ k;", 1, "DeclStmt"], ["10000000000001LL", 2, "IntegerLiteral"], ["int", 5, "Type"], ["4004009004004LL", 2, "IntegerLiteral"], ["4000008000004LL", 2, "IntegerLiteral"], ["1232346432321LL", 2, "IntegerLiteral"], ["1214428244121LL", 2, "IntegerLiteral"], ["1210024200121LL", 2, "IntegerLiteral"], ["1002001LL", 2, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["10201LL", 2, "IntegerLiteral"], ["10221412201LL", 2, "IntegerLiteral"], ["1212225222121LL", 2, "IntegerLiteral"], ["12345654321LL", 2, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["484LL", 2, "IntegerLiteral"], ["long long [41]", 1, "Type"], ["9LL", 2, "IntegerLiteral"], ["1024348434201LL", 2, "IntegerLiteral"], ["100020001LL", 2, "IntegerLiteral"], ["10000200001LL", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["s", 3, "Var__DeclRefExpr"], ["41", 1, "IntegerLiteral"], ["14641LL", 2, "IntegerLiteral"], ["long long", 3, "Type"], ["0", 2, "IntegerLiteral"], ["\"%lld%lld\"", 1, "StringLiteral"], ["121LL", 2, "IntegerLiteral"], ["1020304030201LL", 2, "IntegerLiteral"], ["40804LL", 2, "IntegerLiteral"], ["12321LL", 2, "IntegerLiteral"], ["0LL", 2, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["102030201LL", 2, "IntegerLiteral"], ["125686521LL", 2, "IntegerLiteral"], ["12102420121LL", 2, "IntegerLiteral"], ["4LL", 2, "IntegerLiteral"], ["main", 1, "Function"], ["1LL", 2, "IntegerLiteral"], ["40", 1, "IntegerLiteral"], ["44944LL", 2, "IntegerLiteral"], ["1234321LL", 2, "IntegerLiteral"], ["int ()", 1, "Type"], ["4008004LL", 2, "IntegerLiteral"], ["a", 3, "Var__DeclRefExpr"], ["104060401LL", 2, "IntegerLiteral"], ["123454321LL", 2, "IntegerLiteral"], ["1234567654321LL", 2, "IntegerLiteral"], ["1002003002001LL", 2, "IntegerLiteral"], ["400080004LL", 2, "IntegerLiteral"], ["404090404LL", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["40000800004LL", 2, "IntegerLiteral"], ["1000002000001LL", 2, "IntegerLiteral"], ["1004006004001LL", 2, "IntegerLiteral"], ["121242121LL", 2, "IntegerLiteral"], ["1022325232201LL", 2, "IntegerLiteral"]] 
yey177 2974486_5709773144064000_yey177.c [["0", 1, "IntegerLiteral"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0.0", 1, "FloatingLiteral"], ["2.0", 1, "FloatingLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["double c_ f_ x_ v_ r;", 1, "DeclStmt"], ["main", 1, "Function"], ["r", 7, "Var__DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["c", 4, "Var__DeclRefExpr"], ["int t_ k;", 1, "DeclStmt"], ["int", 3, "Type"], ["v", 8, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["double", 5, "Type"], ["t", 3, "Var__DeclRefExpr"], ["f", 4, "Var__DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["1", 1, "IntegerLiteral"]] 
yey177 2974486_5756407898963968_yey177.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["puts", 2, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int", 10, "Type"], ["\"Bad magician!\"", 1, "StringLiteral"], ["int t_ c_ n_ i_ j_ k_ tmp_ res_ a[4];", 1, "DeclStmt"], ["j", 8, "Var__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["i", 9, "Var__DeclRefExpr"], ["res", 8, "Var__DeclRefExpr"], ["\"%*d\"", 2, "StringLiteral"], ["tmp", 4, "Var__DeclRefExpr"], ["int ()", 1, "Type"], ["int [4]", 1, "Type"], ["4", 6, "IntegerLiteral"], ["k", 5, "Var__DeclRefExpr"], ["scanf", 7, "DeclRefExpr"]] 
yey177_advex 1460488_1483485_yey177_advex.c [["32", 1, "IntegerLiteral"], ["putchar", 1, "DeclRefExpr"], ["puts", 1, "DeclRefExpr"], ["0", 2, "IntegerLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["gets", 2, "DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["int n_ i_ k;", 1, "DeclStmt"], ["\"yhesocvxduiglbkrztnwjpfmaq\"", 1, "StringLiteral"], ["\"\"", 1, "StringLiteral"], ["u", 2, "Var__DeclRefExpr"], ["108", 1, "IntegerLiteral"], ["char", 2, "Type"], ["int", 5, "Type"], ["char [28]", 1, "Type"], ["28", 1, "IntegerLiteral"], ["int ()", 1, "Type"], ["s", 7, "Var__DeclRefExpr"], ["char s[108];", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["'a'", 1, "CharacterLiteral"], ["i", 7, "Var__DeclRefExpr"], ["main", 1, "Function"], ["char [108]", 1, "Type"], ["scanf", 1, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"]] 
yey177_advex 1460488_1483488_yey177_advex.c [["printf", 1, "DeclRefExpr"], ["0", 6, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["10", 4, "IntegerLiteral"], ["l", 5, "Var__DeclRefExpr"], ["j", 4, "Var__DeclRefExpr"], ["tmp", 12, "Var__DeclRefExpr"], ["d", 5, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["e", 4, "Var__DeclRefExpr"], ["\"r\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["break", 1, "BreakStmt"], ["s", 4, "Var__DeclRefExpr"], ["1", 6, "IntegerLiteral"], ["int [8]", 1, "Type"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["sn", 4, "Var__DeclRefExpr"], ["f", 4, "Var__DeclRefExpr"], ["duai_Var", 10, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["continue", 2, "ContinueStmt"], ["r", 4, "Var__DeclRefExpr"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int s[8]_ sn;", 1, "DeclStmt"], ["int", 15, "Type"], ["8", 1, "IntegerLiteral"], ["a", 4, "Var__DeclRefExpr"], ["int t_ k_ a_ b_ d_ e_ tmp_ duai_Var_ j_ l_ f_ r;", 1, "DeclStmt"], ["scanf", 2, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["b", 4, "Var__DeclRefExpr"]] 
yey177_advex 1460488_1595491_yey177_advex.c [["printf", 1, "DeclRefExpr"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["4", 1, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["main", 1, "Function"], ["int t_ n_ s_ p_ x_ a_ b_ k;", 1, "DeclStmt"], ["n", 3, "Var__DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["a", 4, "Var__DeclRefExpr"], ["int", 9, "Type"], ["int ()", 1, "Type"], ["s", 4, "Var__DeclRefExpr"], ["2", 2, "IntegerLiteral"], ["\"%d\"", 2, "StringLiteral"], ["p", 4, "Var__DeclRefExpr"], ["\"%d%d%d\"", 1, "StringLiteral"], ["b", 5, "Var__DeclRefExpr"], ["3", 2, "IntegerLiteral"], ["scanf", 3, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"], ["0", 2, "IntegerLiteral"]] 
yey177_advex 2270488_2449486_yey177_advex.c [["printf", 1, "DeclRefExpr"], ["goto END", 1, "GotoStmt"], ["0", 16, "IntegerLiteral"], ["\"%d%d\"", 1, "StringLiteral"], ["\"NO\"", 1, "StringLiteral"], ["101", 2, "IntegerLiteral"], ["1", 3, "IntegerLiteral"], ["x", 5, "Var__DeclRefExpr"], ["scanf", 3, "DeclRefExpr"], ["k", 9, "Var__DeclRefExpr"], ["int", 12, "Type"], ["\"YES\"", 1, "StringLiteral"], ["102", 2, "IntegerLiteral"], ["\"Case #%d: %s\\n\"", 1, "StringLiteral"], ["d", 15, "Var__DeclRefExpr"], ["min", 11, "Var__DeclRefExpr"], ["int [102][102]", 1, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["int ()", 1, "Type"], ["int [102]", 1, "Type"], ["\"replace-me.in\"", 1, "StringLiteral"], ["\"%d\"", 2, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["max", 11, "Var__DeclRefExpr"], ["int t_ n_ m_ duai_Var_ j_ k_ x_ max_ min_ f;", 1, "DeclStmt"], ["100", 1, "IntegerLiteral"], ["f", 4, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["duai_Var", 30, "Var__DeclRefExpr"], ["n", 7, "Var__DeclRefExpr"], ["m", 7, "Var__DeclRefExpr"], ["j", 30, "Var__DeclRefExpr"]] 
yey177_advex 2270488_2453486_yey177_advex.c [["\"Game has not completed\"", 1, "StringLiteral"], ["\"Draw\"", 1, "StringLiteral"], ["k", 5, "Var__DeclRefExpr"], ["3", 12, "IntegerLiteral"], ["duai_Var", 41, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["f", 26, "Var__DeclRefExpr"], ["int t_ duai_Var_ j_ k_ f_ f1;", 1, "DeclStmt"], ["\"r\"", 1, "StringLiteral"], ["\"%d\"", 1, "StringLiteral"], ["2", 5, "IntegerLiteral"], ["main", 1, "Function"], ["\"X won\"", 1, "StringLiteral"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["scanf", 2, "DeclRefExpr"], ["5", 2, "IntegerLiteral"], ["s", 18, "Var__DeclRefExpr"], ["char [5]", 1, "Type"], ["int", 7, "Type"], ["char", 1, "Type"], ["j", 15, "Var__DeclRefExpr"], ["f1", 7, "Var__DeclRefExpr"], ["4", 7, "IntegerLiteral"], ["char [5][5]", 1, "Type"], ["\"%s\"", 1, "StringLiteral"], ["1", 8, "IntegerLiteral"], ["0", 16, "IntegerLiteral"], ["puts", 4, "DeclRefExpr"], ["printf", 1, "DeclRefExpr"], ["'O'", 4, "CharacterLiteral"], ["'X'", 4, "CharacterLiteral"], ["'.'", 4, "CharacterLiteral"], ["freopen", 1, "DeclRefExpr"], ["goto END", 3, "GotoStmt"], ["'T'", 4, "CharacterLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["\"O won\"", 1, "StringLiteral"]] 
yey177_advex 2270488_2463486_yey177_advex.c [["\"%d\"", 1, "StringLiteral"], ["k", 5, "Var__DeclRefExpr"], ["j", 5, "Var__DeclRefExpr"], ["long long a_ b;", 1, "DeclStmt"], ["i", 5, "Var__DeclRefExpr"], ["b", 3, "Var__DeclRefExpr"], ["int t_ i_ j_ k;", 1, "DeclStmt"], ["10000000000001LL", 2, "IntegerLiteral"], ["int", 5, "Type"], ["4004009004004LL", 2, "IntegerLiteral"], ["4000008000004LL", 2, "IntegerLiteral"], ["1232346432321LL", 2, "IntegerLiteral"], ["1214428244121LL", 2, "IntegerLiteral"], ["1210024200121LL", 2, "IntegerLiteral"], ["1002001LL", 2, "IntegerLiteral"], ["printf", 1, "DeclRefExpr"], ["10201LL", 2, "IntegerLiteral"], ["10221412201LL", 2, "IntegerLiteral"], ["1212225222121LL", 2, "IntegerLiteral"], ["12345654321LL", 2, "IntegerLiteral"], ["\"Case #%d: %d\\n\"", 1, "StringLiteral"], ["484LL", 2, "IntegerLiteral"], ["long long [41]", 1, "Type"], ["9LL", 2, "IntegerLiteral"], ["1024348434201LL", 2, "IntegerLiteral"], ["100020001LL", 2, "IntegerLiteral"], ["10000200001LL", 2, "IntegerLiteral"], ["scanf", 2, "DeclRefExpr"], ["s", 3, "Var__DeclRefExpr"], ["41", 1, "IntegerLiteral"], ["14641LL", 2, "IntegerLiteral"], ["long long", 3, "Type"], ["0", 2, "IntegerLiteral"], ["\"%lld%lld\"", 1, "StringLiteral"], ["121LL", 2, "IntegerLiteral"], ["1020304030201LL", 2, "IntegerLiteral"], ["40804LL", 2, "IntegerLiteral"], ["12321LL", 2, "IntegerLiteral"], ["0LL", 2, "IntegerLiteral"], ["1", 4, "IntegerLiteral"], ["102030201LL", 2, "IntegerLiteral"], ["125686521LL", 2, "IntegerLiteral"], ["12102420121LL", 2, "IntegerLiteral"], ["4LL", 2, "IntegerLiteral"], ["main", 1, "Function"], ["1LL", 2, "IntegerLiteral"], ["40", 1, "IntegerLiteral"], ["44944LL", 2, "IntegerLiteral"], ["1234321LL", 2, "IntegerLiteral"], ["int ()", 1, "Type"], ["4008004LL", 2, "IntegerLiteral"], ["a", 3, "Var__DeclRefExpr"], ["104060401LL", 2, "IntegerLiteral"], ["123454321LL", 2, "IntegerLiteral"], ["1234567654321LL", 2, "IntegerLiteral"], ["1002003002001LL", 2, "IntegerLiteral"], ["400080004LL", 2, "IntegerLiteral"], ["404090404LL", 2, "IntegerLiteral"], ["t", 3, "Var__DeclRefExpr"], ["40000800004LL", 2, "IntegerLiteral"], ["1000002000001LL", 2, "IntegerLiteral"], ["1004006004001LL", 2, "IntegerLiteral"], ["121242121LL", 2, "IntegerLiteral"], ["1022325232201LL", 2, "IntegerLiteral"]] 
yey177_advex 2974486_5709773144064000_yey177_advex.c [["0", 1, "IntegerLiteral"], ["\"Case #%d: %.7lf\\n\"", 1, "StringLiteral"], ["printf", 1, "DeclRefExpr"], ["0.0", 1, "FloatingLiteral"], ["\"%lf%lf%lf\"", 1, "StringLiteral"], ["double c_ f_ x_ v_ r;", 1, "DeclStmt"], ["main", 1, "Function"], ["r", 7, "Var__DeclRefExpr"], ["2.0", 1, "FloatingLiteral"], ["int t_ dtgi_Var;", 1, "DeclStmt"], ["int", 3, "Type"], ["dtgi_Var", 5, "Var__DeclRefExpr"], ["v", 8, "Var__DeclRefExpr"], ["\"%d\"", 1, "StringLiteral"], ["int ()", 1, "Type"], ["c", 4, "Var__DeclRefExpr"], ["double", 5, "Type"], ["t", 3, "Var__DeclRefExpr"], ["f", 4, "Var__DeclRefExpr"], ["scanf", 2, "DeclRefExpr"], ["x", 5, "Var__DeclRefExpr"], ["1", 1, "IntegerLiteral"]] 
yey177_advex 2974486_5756407898963968_yey177_advex.c [["\"%d\\n\"", 1, "StringLiteral"], ["\"Bad magician!\"", 1, "StringLiteral"], ["\"Volunteer cheated!\"", 1, "StringLiteral"], ["printf", 2, "DeclRefExpr"], ["break", 1, "BreakStmt"], ["puts", 2, "DeclRefExpr"], ["0", 7, "IntegerLiteral"], ["1", 5, "IntegerLiteral"], ["4", 6, "IntegerLiteral"], ["\"%d\"", 5, "StringLiteral"], ["\"r\"", 1, "StringLiteral"], ["\"Case #%d: \"", 1, "StringLiteral"], ["int t_ c_ n_ duai_Var_ j_ k_ tmp_ res_ a[4];", 1, "DeclStmt"], ["\"replace-me.in\"", 1, "StringLiteral"], ["int [4]", 1, "Type"], ["int ()", 1, "Type"], ["int", 10, "Type"], ["main", 1, "Function"], ["freopen", 1, "DeclRefExpr"], ["scanf", 7, "DeclRefExpr"], ["k", 5, "Var__DeclRefExpr"], ["n", 5, "Var__DeclRefExpr"], ["c", 5, "Var__DeclRefExpr"], ["a", 3, "Var__DeclRefExpr"], ["t", 3, "Var__DeclRefExpr"], ["duai_Var", 9, "Var__DeclRefExpr"], ["j", 8, "Var__DeclRefExpr"], ["\"%*d\"", 2, "StringLiteral"], ["tmp", 4, "Var__DeclRefExpr"], ["res", 8, "Var__DeclRefExpr"]] 
